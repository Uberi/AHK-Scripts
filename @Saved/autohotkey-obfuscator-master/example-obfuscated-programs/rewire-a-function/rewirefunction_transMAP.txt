
	OBFUSCATOR FIND FUNCTION AND LABEL HEADERS MAP OUTPUT FILE
	Date: 3:44 PM Tuesday, March 19, 2013

	This is an automatically generated 'map' of the functions and label sections
	found in the ahk source files specified by the user.
	This file can be used as the beginning point in the next step of obfuscation
	of the source files - the actual obfuscation!

	For each fuction definition or label section that is found in the source code
	files, the corresponding one of the 2 obfuscator commands below will be printed
	in this file, all the way to the left most column, with the '$' in column 1.
	Only the function name or label name parameter will be supplied by this
	program, the other parameters will use the current 'defaults'. To use different
	values than the current defaults, just add them to the obfuscator command
	generated by this program for that label section or function definition.
	That will then change the 'defaults' for all subsequent commands that do not
	supply new values.

	$DEFFUNC: func name, new func name size min/max, divide into num frags,
		 number frag sets, frag var size min/max, add null frags
	$DEFLABEL: label name, new label name size min/max, divide into num frags,
	 number frag sets, frag var size min/max, add null frags

	#FILE IN WHICH THE LIST OF SOURCE CODE FILES TO PROCESS WAS RETRIEVED:
	C:\dynamicobfuscator\example-obfuscated-programs\rewire-a-function\rewirefunction_includemap.txt

	#LIST OF FILES FOUND IN THAT FILE:

c:\dynamicobfuscator\example-obfuscated-programs\rewire-a-function\rewirefunction.ahk

	#OUTPUT FILE NAME(this file):
	rewirefunction_transMAP.txt

	Change the values assigned to the program start defaults below to use
	different starting values when this map file is input to the obfuscator.

#StartDefault: SYSFUNC_sizemin, 12
#StartDefault: SYSFUNC_sizemax, 16
#StartDefault: SYSFUNC_makefragsets, 4
#StartDefault: SYSFUNC_fragsperset, 2
#StartDefault: SYSFUNC_fragvarsizemin, 12
#StartDefault: SYSFUNC_fragvarsizemax, 16
#StartDefault: SYSFUNC_addnullfrags, 1

#StartDefault: FUNC_sizemin, 12
#StartDefault: FUNC_sizemax, 16
#StartDefault: FUNC_makefragsets, 2
#StartDefault: FUNC_fragsperset, 1
#StartDefault: FUNC_fragvarsizemin, 12
#StartDefault: FUNC_fragvarsizemax, 16
#StartDefault: FUNC_addnullfrags, 1

#StartDefault: LABEL_sizemin, 22
#StartDefault: LABEL_sizemax, 42
#StartDefault: LABEL_makefragsets, 2
#StartDefault: LABEL_fragsperset, 1
#StartDefault: LABEL_fragvarsizemin, 22
#StartDefault: LABEL_fragvarsizemax, 35
#StartDefault: LABEL_addnullfrags, 1

#StartDefault: PARAM_sizemin, 12
#StartDefault: PARAM_sizemax, 16
#StartDefault: PARAM_makefragsets, 2
#StartDefault: PARAM_fragsperset, 1
#StartDefault: PARAM_fragvarsizemin, 14
#StartDefault: PARAM_fragvarsizemax, 26
#StartDefault: PARAM_addnullfrags, 1

#StartDefault: LOSVAR_sizemin, 12
#StartDefault: LOSVAR_sizemax, 22
#StartDefault: LOSVAR_makefragsets, 2
#StartDefault: LOSVAR_fragsperset, 1
#StartDefault: LOSVAR_fragvarsizemin, 14
#StartDefault: LOSVAR_fragvarsizemax, 28
#StartDefault: LOSVAR_addnullfrags, 1

#StartDefault: GLOBVAR_sizemin, 12
#StartDefault: GLOBVAR_sizemax, 18
#StartDefault: GLOBVAR_makefragsets, 3
#StartDefault: GLOBVAR_fragsperset, 1
#StartDefault: GLOBVAR_fragvarsizemin, 12
#StartDefault: GLOBVAR_fragvarsizemax, 15
#StartDefault: GLOBVAR_addnullfrags, 1

#StartDefault: FUNCANDVAR_sizemin, -1
#StartDefault: FUNCANDVAR_sizemax, -1
#StartDefault: FUNCANDVAR_makefragsets, -1
#StartDefault: FUNCANDVAR_fragsperset, 2
#StartDefault: FUNCANDVAR_fragvarsizemin, 14
#StartDefault: FUNCANDVAR_fragvarsizemax, 20
#StartDefault: FUNCANDVAR_addnullfrags, 1

#StartDefault: GUILABEL_sizemin, 16
#StartDefault: GUILABEL_sizemax, 26
#StartDefault: GUILABEL_makefragsets, -1
#StartDefault: GUILABEL_fragsperset, 1
#StartDefault: GUILABEL_fragvarsizemin, 12
#StartDefault: GUILABEL_fragvarsizemax, 15
#StartDefault: GUILABEL_addnullfrags, 1


#FOUND: *AUTOEXECUTE SECTION FOUND*

$DEFGLOBVARS: mytrue, myfalse

$DUMP_REWIREFUNCPATH: SOMEFUNC, REWIRED_SOMEFUNC

$DUMP_REWIREFUNCPATH: SOMEFUNC, REWIRED_SOMEFUNC

$DUMP_REWIREFUNCPATH: yourfunc, yourfunc_trapdoor

$DUMP_REWIREFUNCPATH: yourfunc, yourfunc_trapdoor

;hotkeys SHOULD NOT be obfuscated!
#FOUND: *HOTKEY: home


#FOUND: *HOTKEY: RControl & RShift


#FOUND: *HOTKEY: ^;


;MUST BE ASSUME GLOBAL FOR DYNAMIC OBFUSCATION!
;(technically this one would be all right because it does not call any
;functions or use any variables inside of it)
#FOUND: testfunction()
$DEFFUNCS: testfunction

#FOUND: cancelprog:
$DEFLABELS: cancelprog

;MUST BE ASSUME GLOBAL FOR DYNAMIC OBFUSCATION!
#FOUND: SOMEFUNC(someparam)
$DEFFUNCS: SOMEFUNC
$DEFPARAMS: someparam

;this function is never called in the unobfuscated script!
#FOUND: REWIRED_SOMEFUNC(someparam)
$DEFFUNCS: REWIRED_SOMEFUNC
$DEFPARAMS: someparam

#FOUND: yourfunc(myparam)
$DEFFUNCS: yourfunc
$DEFPARAMS: myparam

;this function is never called in the unobfuscated script!
#FOUND: yourfunc_trapdoor(myparam)
$DEFFUNCS: yourfunc_trapdoor
$DEFPARAMS: myparam
