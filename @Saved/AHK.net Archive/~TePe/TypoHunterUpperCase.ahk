;------------------------------------------------------------------------------
; TypoHunter script
; 
; Regular expressions based on the fly typo fixer.
;
; It is not trying to fix all typos, only most popular one. 
;It is not meant to fully replace spellchecker, but in the meantime, it works 
;fine in places where is no spellchecker available, for example in a chat programs.
;
; To check if it is working type "hte" and press Space.
;------------------------------------------------------------------------------


StringCaseSense, On
#NoEnv ; For security
#SingleInstance force

;------------------------------------------------------------------------------
; Win+H to enter misspelling correction.  It will be added to this script.
;------------------------------------------------------------------------------
#h::
; Get the selected text. The clipboard is used instead of "ControlGet Selected"
; as it works in more editors and word processors, java apps, etc. Save the
; current clipboard contents to be restored later.
AutoTrim Off  ; Retain any leading and trailing whitespace on the clipboard.
ClipboardOld = %ClipboardAll%
Clipboard =  ; Must start off blank for detection to work.
Send ^c
ClipWait 1
if ErrorLevel  ; ClipWait timed out.
    return
; Replace CRLF and/or LF with `n for use in a "send-raw" hotstring:
; The same is done for any other characters that might otherwise
; be a problem in raw mode:
StringReplace, Hotstring, Clipboard, ``, ````, All  ; Do this replacement first to avoid interfering with the others below.
StringReplace, Hotstring, Hotstring, `r`n, ``r, All  ; Using `r works better than `n in MS Word, etc.
StringReplace, Hotstring, Hotstring, `n, ``r, All
StringReplace, Hotstring, Hotstring, %A_Tab%, ``t, All
StringReplace, Hotstring, Hotstring, `;, ```;, All
Clipboard = %ClipboardOld%  ; Restore previous contents of clipboard.
; This will move the InputBox's caret to a more friendly position:
SetTimer, MoveCaret, 10
; Show the InputBox, providing the default hotstring:
InputBox, Hotstring, New Hotstring, Provide the corrected word on the right side. You can also edit the left side if you wish.`n`nExample entry:`n::teh::the,,,,,,,, ::%Hotstring%::%Hotstring%

if ErrorLevel <> 0  ; The user pressed Cancel.
    return
; Otherwise, add the hotstring and reload the script:
FileAppend, `n%Hotstring%, %A_ScriptFullPath%  ; Put a `n at the beginning in case file lacks a blank line at its end.
Reload
Sleep 200 ; If successful, the reload will close this instance during the Sleep, so the line below will never be reached.
MsgBox, 4,, The hotstring just added appears to be improperly formatted.  Would you like to open the script for editing? Note that the bad hotstring is at the bottom of the script.
IfMsgBox, Yes, Edit
return

MoveCaret:
IfWinNotActive, New Hotstring
    return
; Otherwise, move the InputBox's insertion point to where the user will type the abbreviation.
Send {HOME}
Loop % StrLen(Hotstring) + 4
    SendInput {Right}
SetTimer, MoveCaret, Off
return

~`::buffer:=%buffer% . "'"

~+q::ULetter("Q")
~+w::ULetter("W")
~+e::ULetter("E")
~+r::ULetter("R")
~+t::ULetter("T")
~+y::ULetter("Y")
~+u::ULetter("U")
~+i::ULetter("I")
~+o::ULetter("O")
~+p::ULetter("P")
~+a::ULetter("A")
~+s::ULetter("S")
~+d::ULetter("D")
~+f::ULetter("F")
~+g::ULetter("G")
~+h::ULetter("H")
~+j::ULetter("J")
~+k::ULetter("K")
~+l::ULetter("L")
~+z::ULetter("Z")
~+x::ULetter("X")
~+c::ULetter("C")
~+v::ULetter("V")
~+b::ULetter("B")
~+n::ULetter("N")
~+m::ULetter("M")
~q::Letter("q")
~w::Letter("w")
~e::Letter("e")
~r::Letter("r")
~t::Letter("t")
~y::Letter("y")
~u::Letter("u")
~i::Letter("i")
~o::Letter("o")
~p::Letter("p")
~a::Letter("a")
~s::Letter("s")
~d::Letter("d")
~f::Letter("f")
~g::Letter("g")
~h::Letter("h")
~j::Letter("j")
~k::Letter("k")
~l::Letter("l")
~z::Letter("z")
~x::Letter("x")
~c::Letter("c")
~v::Letter("v")
~b::Letter("b")
~n::Letter("n")
~m::Letter("m")
~'::Letter("'")
~-::Letter("-")
~1::
~2::
~3::
~4::
~5::
~6::
~7::
~8::
~9::
~0::
~Numpad1::
~Numpad2::
~Numpad3::
~Numpad4::
~Numpad5::
~Numpad6::
~Numpad7::
~Numpad8::
~Numpad9::
~Numpad0::
~=::
~@::
~+3::
~+4::
~+6::
~+\::
~+_::
~+::
~+`::
~%::
~&::
~*::
~[::
~]::
~+[::
~+]::
~Pause::
~F1::
~F2::
~F3::
~F4::
~F5::
~F6::
~F7::
~F8::
~F9::
~F10::
~F11::
~F12::
~LButton::
~RButton::
WordReset()
return

$;::
WordHandling(";")
return
$+;::
WordHandling(":")
return

$Home::
send, {Home}
WordHandling()
return
$Tab::
send, {Tab}
WordHandling()
return
$End::
send, {End}
WordHandling()
return
$PgUp::
send, {PgUp}
WordHandling()
return
$PgDn::
send, {PgDn}
WordHandling()
return
$NumpadHome::
send, {NumpadHome}
WordHandling()
return
$NumpadEnd::
send, {NumpadEnd}
WordHandling()
return
$NumpadPgUp::
send, {NumpadPgUp}
WordHandling()
return
$NumpadPgDn::
send, {NumpadPgDn}
WordHandling()
return
$NumpadDot::
send, {NumpadDot}
WordHandling()
return
$NumpadEnter::
send, {NumpadEnter}
WordHandling()
return
$NumpadDiv::
send, {NumpadDiv}
WordHandling()
return

~NumpadMult::WordReset()
~NumpadAdd::WordReset()

$NumpadSub::
buffer:=%buffer% . "-"
Send, {NumpadSub}
return
$NumpadClear::
Send, {NumpadClear}
WordHandling()
return
$Up::
WordHandling()
Send, {Up}
return
$Down::
WordHandling()
Send, {Down}
return
$Right::
WordHandling()
Send, {Right}
return
$Left::
WordReset()
send, {Left}
return
$NumpadUp::
WordHandling()
Send, {NumpadUp}
return
$NumpadDown::
Send, {NumpadDown}
WordHandling()
return
$NumpadRight::
Send, {NumpadRight}
WordHandling()
return
$NumpadLeft::
WordReset()
send, {NumpadLeft}
return
$"::
WordHandling("""")
return
$.::
WordHandling(".")
return
$Enter::
WordHandling("{Enter}")
return
$Space::
WordHandling("{Space}")
return
$?::
WordHandling("?")
return
$!::
WordHandling()
send, {!}
return
$/::
WordHandling("/")
return
$\::
WordHandling("\")
return
$(::
WordHandling("(")
return
$)::
WordHandling(")")
return
$,::
WordHandling(",")
return

$Backspace::
Send, {Backspace}
StringTrimRight, buffer, buffer, 1
return

WordHandling(Simbol="")
{
Global buffer
Global NewStr
if StrLen(buffer)=0
{
send, %Simbol%
return 
}
NewStr = %buffer%
SpellCheck()
If buffer = %NewStr%
buffer := ""
else
{
	num:=StrLen(buffer)
	loop, %num%
		{
		Send {Backspace}
		}
	send %NewStr%
}
send, %Simbol%
NewStr := ""
buffer := ""
}

ULetter(Simbol="")
{
global buffer

if GetKeyState("Capslock", "T")
StringLower, Simbol, Simbol

buffer := buffer . Simbol
}

Letter(Simbol="")
{
global buffer

if GetKeyState("Capslock", "T")
StringUpper, Simbol, Simbol

buffer := buffer . Simbol
}

WordReset(Simbol="")
{
global buffer
buffer := ""
}

SpellCheck()
{
Global

if GetKeyState("Capslock", "T")
StringLower, NewStr, NewStr
;---------------------------
NewStr := RegExReplace( NewStr, "\b[Xx][Bb][Oo][Xx]\b" , "Xbox"  )
NewStr := RegExReplace( NewStr, "\b[Ww][uü]rt(?:t?embu|embe)rg\b" , "Württemberg"  )
NewStr := RegExReplace( NewStr, "\b[Ww]iki(p|m)e?i?di?a(n?s?)\b" , "Wiki$1edia$2"  )
NewStr := RegExReplace( NewStr, "\b[Ww]en(?:d?e?sd?)a(ys?)\b" , "Wednesda$1"  )
NewStr := RegExReplace( NewStr, "\b[Vv]ancove(r|rites?)\b" , "Vancouve$1"  )
NewStr := RegExReplace( NewStr, "\b[Uu]zbekystan\b" , "Uzbekistan"  )
NewStr := RegExReplace( NewStr, "\b[Uu]niversity of Indiana\b" , "Indiana University"  )
NewStr := RegExReplace( NewStr, "\b[Uu]nite[sd][sS]tates\b" , "United States"  )
NewStr := RegExReplace( NewStr, "\b[Uu]bermensch(es)?\b" , "Übermensch$1" )
NewStr := RegExReplace( NewStr, "\b[Tt]ubingen\b" , "Tübingen"  )
NewStr := RegExReplace( NewStr, "\b[Tt]olkein\b" , "Tolkien"  )
NewStr := RegExReplace( NewStr, "\b[Tt]en(?:(?:nn+|)ess+e*|n+es(?:ss+|)e*|n+ess+(?:ee+|))(e|ans?)\b" , "Tennesse$1"  )
NewStr := RegExReplace( NewStr, "\b[Ss][Oo][Nn][Yy]\b" , "Sony"  )
NewStr := RegExReplace( NewStr, "\b[Ss]uper[Bb]owl(s?)\b" , "Super Bowl$1"  )
NewStr := RegExReplace( NewStr, "\b[Ss]uadi+\s*[Aa]rabia\b" , "Saudi Arabia"  )
NewStr := RegExReplace( NewStr, "\b[Ss]tockhome?\b" , "Stockholm"  )
NewStr := RegExReplace( NewStr, "\b[Ss]epte(?:me|n)be(rs?)\b" , "Septembe$1"  )
NewStr := RegExReplace( NewStr, "\b[Ss]ao [Tt]ome and [Pp]rincipe\b" , "São Tomé and Príncipe"  )
NewStr := RegExReplace( NewStr, "\b[Ss]ao [Pp]aulo\b" , "São Paulo"  )
NewStr := RegExReplace( NewStr, "\b[Ss]ad(?:uc?|d?uc)ce(es?|an|eism)\b" , "Sadduce$1"  )
NewStr := RegExReplace( NewStr, "\b[Rr]e(?:kj|jkj?)avik\b" , "Reykjavik"  )
NewStr := RegExReplace( NewStr, "\b[Pp]ortuguease\b" , "Portuguese" )
NewStr := RegExReplace( NewStr, "\b[Pp]hil(?:i?delph|adelp|adeph)ia(|ns?)\b" , "Philadelphia$1"  )
NewStr := RegExReplace( NewStr, "\b[Pp]en(?:sylva|n?sylvan)nia(|ns?)\b" , "Pennsylvania$1"  )
NewStr := RegExReplace( NewStr, "\b[Pp]alm [dD](?:'|`)[Oo]r\b" , "Palme d'Or"  )
NewStr := RegExReplace( NewStr, "\b[Pp]alistian(s)?\b" , "Palestinian$1" )
NewStr := RegExReplace( NewStr, "\b[Nn]ove(?:me|n)be(rs?)\b" , "Novembe$1"  )
NewStr := RegExReplace( NewStr, "\b[Nn]eveda(|ns?)\b" , "Nevada$1"  )
NewStr := RegExReplace( NewStr, "\b[Mm]otley [Cc]rue\b" , "Mötley Crüe"  )
NewStr := RegExReplace( NewStr, "\b[Mm]in(?:nn+e|e|ni)sot(a|ans?)\b" , "Minnesot$1"  )
NewStr := RegExReplace( NewStr, "\b[Mm]i(?:s(?:ss+|)is+ip+|s+is(?:ss+|)ip+|s+is+ip(?:pp+|))i(|ans?)\b" , "Mississippi$1"  )
NewStr := RegExReplace( NewStr, "\b[Mm]ettallica\b" , "Metallica"  )
NewStr := RegExReplace( NewStr, "\b[Mm]as(?:(?:ss+|)[aeu]ch?u?s+et*|s*[eu]ch?u?s+et*|s*[aeu]cu?s+et*|s*[aeu]ch?s+et*|s*[aeu]ch?u?ss+et*|s*[aeu]ch?u?s+e(?:tt|))ts\b" , "Massachusetts"  )
NewStr := RegExReplace( NewStr, "\b[Ll]ou(?:siani?|isiani)(a|ans?)\b" , "Louisian$1"  )
NewStr := RegExReplace( NewStr, "\b[Ll]egion [dD](?:'|`)[Hh]onneur\b" , "Légion d'honneur"  )
NewStr := RegExReplace( NewStr, "\b[Ll](?:as\s*[Aa]nge?le?|[ao]s\s*[Aa]ng(?:le|el))s\b" , "Los Angeles"  )
NewStr := RegExReplace( NewStr, "\b[Kk]azakstan\b" , "Kazakhstan"  )
NewStr := RegExReplace( NewStr, "\b[Ii]l(?:[li]a?noi|ll+[ai]noi?|l+[ai]ni?o|l+ioni)s\b" , "Illinois"  )
NewStr := RegExReplace( NewStr, "\b[Ii]bm\b" , "IBM"  )
NewStr := RegExReplace( NewStr, "\b[Ii];d\b" , "I'd" )
NewStr := RegExReplace( NewStr, "\b[Hh]eidelburg\b" , "Heidelberg"  )
NewStr := RegExReplace( NewStr, "\b[Gg]uiseppe\b" , "Giuseppe" )
NewStr := RegExReplace( NewStr, "\b[Gg]uin(?:es|n?e)s\b" , "Guinness"  )
NewStr := RegExReplace( NewStr, "\b[Gg]uili(a|o|ani)\b" , "Giuli$1" )
NewStr := RegExReplace( NewStr, "\b[Gg]othenberg\b" , "Gothenburg"  )
NewStr := RegExReplace( NewStr, "\b[Gg]mae[Cc]ube(s?)\b" , "GameCube$1"  )
NewStr := RegExReplace( NewStr, "\b[Gg]eo(?:gr?i|rig)a(n?s?)\b" , "Georgia$1"  )
NewStr := RegExReplace( NewStr, "\b[Ff]ransiscan(s?)\b" , "Franciscan$1" )
NewStr := RegExReplace( NewStr, "\b[Ff]ormalhaut\b" , "Fomalhaut" )
NewStr := RegExReplace( NewStr, "\b[Ff]lordi?a(n?s?)\b" , "Florida$1"  )
NewStr := RegExReplace( NewStr, "\b[Ff]eb(?:ur?[ae]|rur?[ae])ry\b" , "February"  )
NewStr := RegExReplace( NewStr, "\b[Ff]au?lkland\s*islands\b" , "Falkland Islands"  )
NewStr := RegExReplace( NewStr, "\b[Dd]ele?war(es?|ians?)\b" , "Delawar$1"  )
NewStr := RegExReplace( NewStr, "\b[Dd]ece(?:mem?|n)be(rs?)\b" , "Decembe$1"  )
NewStr := RegExReplace( NewStr, "\b[Cc]openhagan\b" , "Copenhagen"  )
NewStr := RegExReplace( NewStr, "\b[Cc]on(?:(?:nn+|)ec?t?icut*|n*et?c?icut*|n*ec?t?c?icut+)t\b" , "Connecticut"  )
NewStr := RegExReplace( NewStr, "\b[Cc]ola?rad(o|ans?)\b" , "Colorad$1"  )
NewStr := RegExReplace( NewStr, "\b[Cc]in(?:ncinn?at?|cinat?|cinnat)t(i|ians?|us)\b" , "Cincinnat$1"  )
NewStr := RegExReplace( NewStr, "\b[Cc]hristmas\s+island\b" , "Christmas Island"  )
NewStr := RegExReplace( NewStr, "\b[Cc]armalit(es?)\b" , "Carmelit$1"  )
NewStr := RegExReplace( NewStr, "\b[Cc]ambrige\b" , "Cambridge"  )
NewStr := RegExReplace( NewStr, "\b[Cc]alvanis(m|ts?)\b" , "Calvinis$1"  )
NewStr := RegExReplace( NewStr, "\b[Cc]al(?:for?n?|i?fo[nr]r?)i(an?s?)\b" , "Californi$1"  )
NewStr := RegExReplace( NewStr, "\b[Bb]ritt+(ish|anni[ac])\b" , "Brit$1"  )
NewStr := RegExReplace( NewStr, "\b[Bb]riti?an\b" , "Britain"  )
NewStr := RegExReplace( NewStr, "\b[Bb]ernou(?:il|)li\b" , "Bernoulli"  )
NewStr := RegExReplace( NewStr, "\b[Aa][Cc]-[Dd][Cc]\b" , "AC/DC"  )
NewStr := RegExReplace( NewStr, "\b[Aa]ustr(?:la?i|a?ili?|iali?)(a|ans?)\b" , "Australi$1"  )
NewStr := RegExReplace( NewStr, "\b[Aa]p(?:e|pen?)nines\b" , "Apennines"  )
NewStr := RegExReplace( NewStr, "\b[Aa]landish\b" , "Ålandish"  )
NewStr := RegExReplace( NewStr, "\b[Aa]b(?:ysin?|yssin|bys+in?)nia(|ns?)\b" , "Abyssinia$1"  )
NewStr := RegExReplace( NewStr, "\bzimbabw[ei](|ans?)\b" , "Zimbabwe$1"  )
NewStr := RegExReplace( NewStr, "\bzambi(an?s?)\b" , "Zambi$1"  )
NewStr := RegExReplace( NewStr, "\bYukon\s*territory\b" , "Yukon Territory"  )
NewStr := RegExReplace( NewStr, "\byukon\b" , "Yukon"  )
NewStr := RegExReplace( NewStr, "\byugoslavi(an?s?)\b" , "Yugoslavi$1"  )
NewStr := RegExReplace( NewStr, "\byem?men(|is?|ites?)\b" , "Yemen$1"  )
NewStr := RegExReplace( NewStr, "\bwyoming\b" , "Wyoming"  )
NewStr := RegExReplace( NewStr, "\bWupport\b" , "Support" )
NewStr := RegExReplace( NewStr, "\bwupport\b" , "support" )
NewStr := RegExReplace( NewStr, "\bwinn?[iea]peg\b" , "Winnipeg"  )
NewStr := RegExReplace( NewStr, "\bwindsor(s?)\b" , "Windsor$1"  )
NewStr := RegExReplace( NewStr, "\bwiew\b" , "view" )
NewStr := RegExReplace( NewStr, "\bWiew\b" , "View" )
NewStr := RegExReplace( NewStr, "\bwest\s*[Vv]irginia(|ns?)\b" , "West Virginia$1"  )
NewStr := RegExReplace( NewStr, "\bwestern sahara\b" , "Western Sahara"  )
NewStr := RegExReplace( NewStr, "\bwere\s+were\b" , "were"  )
NewStr := RegExReplace( NewStr, "\bwelsh\b" , "Welsh"  )
NewStr := RegExReplace( NewStr, "\bwednesda(ys?)\b" , "Wednesda$1"  )
NewStr := RegExReplace( NewStr, "\bwas\s+was\b" , "was"  )
NewStr := RegExReplace( NewStr, "\bwashington(|ians?)\b" , "Washington$1"  )
NewStr := RegExReplace( NewStr, "\bwallis and futuna\b" , "Wallis and Futuna"  )
NewStr := RegExReplace( NewStr, "\bvolkswagon\b" , "Volkswagen" )
NewStr := RegExReplace( NewStr, "\bvirgini?(a|ans?)\b" , "Virgini$1"  )
NewStr := RegExReplace( NewStr, "\bvirgin islands\b" , "Virgin Islands"  )
NewStr := RegExReplace( NewStr, "\bviking\b" , "Viking"  )
NewStr := RegExReplace( NewStr, "\bviet\s*[Nn]am\b" , "Vietnam"  )
NewStr := RegExReplace( NewStr, "\bvietnames?se\b" , "Vietnamese"  )
NewStr := RegExReplace( NewStr, "\bvictoria(n[as]?)\b" , "Victoria$1"  )
NewStr := RegExReplace( NewStr, "\bVetween\b" , "Between" )
NewStr := RegExReplace( NewStr, "\bvetween\b" , "between" )
NewStr := RegExReplace( NewStr, "\bvermont(|ers?)\b" , "Vermont$1"  )
NewStr := RegExReplace( NewStr, "\bvenez+uel+(a|ans?)\b" , "Venezuel$1"  )
NewStr := RegExReplace( NewStr, "\bvell\b" , "well" )
NewStr := RegExReplace( NewStr, "\bVell\b" , "Well" )
NewStr := RegExReplace( NewStr, "\bvatican\s+city\b" , "Vatican City"  )
NewStr := RegExReplace( NewStr, "\bvanuatu\b" , "Vanuatu"  )
NewStr := RegExReplace( NewStr, "\bvancouve(r|rites?)\b" , "Vancouve$1"  )
NewStr := RegExReplace( NewStr, "\bvalois\b" , "Valois"  )
NewStr := RegExReplace( NewStr, "\bu[sz]be[ck]istani(s?)\b" , "Uzbekistani$1"  )
NewStr := RegExReplace( NewStr, "\buzbekistan\b" , "Uzbekistan"  )
NewStr := RegExReplace( NewStr, "\butah(|ans?)\b" , "Utah$1"  )
NewStr := RegExReplace( NewStr, "\burugua[yi](|ans?)\b" , "Uruguay$1"  )
NewStr := RegExReplace( NewStr, "\burdu\b" , "Urdu"  )
NewStr := RegExReplace( NewStr, "\bUnthaw(s?|ed|ing)\b" , "Thaw$1"  )
NewStr := RegExReplace( NewStr, "\bunthaw(s?|ed|ing)\b" , "thaw$1"  )
NewStr := RegExReplace( NewStr, "\bunplease\b" , "displease" )
NewStr := RegExReplace( NewStr, "\bUnplease\b" , "Displease" )
NewStr := RegExReplace( NewStr, "\bunoperational\b" , "nonoperational" )
NewStr := RegExReplace( NewStr, "\bUnoperational\b" , "Nonoperational" )
NewStr := RegExReplace( NewStr, "\bunited\s+arab\s+emirates\b" , "United Arab Emirates"  )
NewStr := RegExReplace( NewStr, "\bunited\s*states\b" , "United States"  )
NewStr := RegExReplace( NewStr, "\bunequalities\b" , "inequalities" )
NewStr := RegExReplace( NewStr, "\bUnequalities\b" , "Inequalities" )
NewStr := RegExReplace( NewStr, "\bUneff?ect(ive|ual)(|ly|ness)\b" , "Ineffect$1$2"  )
NewStr := RegExReplace( NewStr, "\buneff?ect(ive|ual)(|ly|ness)\b" , "ineffect$1$2"  )
NewStr := RegExReplace( NewStr, "\bune(d|lig|xhaust|xpress)[ia]b(le|ly|ility)\b" , "ine$1ib$2"  )
NewStr := RegExReplace( NewStr, "\bUnder Milkwood\b" , "Under Milk Wood"  )
NewStr := RegExReplace( NewStr, "\bUnconfortability\b" , "Discomfort" )
NewStr := RegExReplace( NewStr, "\bunconfortability\b" , "discomfort" )
NewStr := RegExReplace( NewStr, "\bUn(e|su)ff?ici[ea]n(t|tly|cy)\b" , "In$1fficien$2"  )
NewStr := RegExReplace( NewStr, "\bun(e|su)ff?ici[ea]n(t|tly|cy)\b" , "in$1fficien$2"  )
NewStr := RegExReplace( NewStr, "\bukrania(ns?)?\b" , "Ukrainia$1" )
NewStr := RegExReplace( NewStr, "\bukrain(e|ians?)\b" , "Ukrain$1"  )
NewStr := RegExReplace( NewStr, "\buganda(|ns?)\b" , "Uganda$1"  )
NewStr := RegExReplace( NewStr, "\btuvalu(|vians?)\b" , "Tuvalu$1"  )
NewStr := RegExReplace( NewStr, "\bturks\s+and\s+caicos\s+islands\b" , "Turks and Caicos Islands"  )
NewStr := RegExReplace( NewStr, "\bturkis(h|m)\b" , "Turkis$1"  )
NewStr := RegExReplace( NewStr, "\btur([ck]o?|)(|m[ea]n)(s?|ic|[ei]stan)\b" , "Tur$1$2$3"  )
NewStr := RegExReplace( NewStr, "\btunisi(a|ans?)\b" , "Tunisi$1"  )
NewStr := RegExReplace( NewStr, "\btuesda(ys?)\b" , "Tuesda$1"  )
NewStr := RegExReplace( NewStr, "\btudor(s?)\b" , "Tudor$1"  )
NewStr := RegExReplace( NewStr, "\btristan da cunha\b" , "Tristan da Cunha"  )
NewStr := RegExReplace( NewStr, "\btrin?nidad(|ians?)\b" , "Trinidad$1"  )
NewStr := RegExReplace( NewStr, "\btransnistria(|ns?)\b" , "Transnistria$1"  )
NewStr := RegExReplace( NewStr, "\btoront(o|onians?)\b" , "Toront$1"  )
NewStr := RegExReplace( NewStr, "\btonga(|ns?)\b" , "Tonga$1"  )
NewStr := RegExReplace( NewStr, "\btokelau\b" , "Tokelau"  )
NewStr := RegExReplace( NewStr, "\bto(ba|)g(o|ans?)\b" , "To$1g$2"  )
NewStr := RegExReplace( NewStr, "\btimor-leste\b" , "Timor-Leste"  )
NewStr := RegExReplace( NewStr, "\btimor(|ians?)\b" , "Timor$1"  )
NewStr := RegExReplace( NewStr, "\bthe\s*gambia\b" , "The Gambia"  )
NewStr := RegExReplace( NewStr, "\bthe\s*bahamas\b" , "The Bahamas"  )
NewStr := RegExReplace( NewStr, "\bthailand\b" , "Thailand"  )
NewStr := RegExReplace( NewStr, "\btexa(s|ns?)\b" , "Texa$1"  )
NewStr := RegExReplace( NewStr, "\btennesse(e|ans?)\b" , "Tennesse$1"  )
NewStr := RegExReplace( NewStr, "\btanzani(a|ans?)\b" , "Tanzani$1"  )
NewStr := RegExReplace( NewStr, "\btamil\b" , "Tamil"  )
NewStr := RegExReplace( NewStr, "\btajikistan(i?s?)\b" , "Tajikistan$1"  )
NewStr := RegExReplace( NewStr, "\btaiwan(|ese)\b" , "Taiwan$1"  )
NewStr := RegExReplace( NewStr, "\bsyri(a|ans?)\b" , "Syri$1"  )
NewStr := RegExReplace( NewStr, "\bswitzerland\b" , "Switzerland"  )
NewStr := RegExReplace( NewStr, "\bswiss\b" , "Swiss"  )
NewStr := RegExReplace( NewStr, "\bswedish\b" , "Swedish"  )
NewStr := RegExReplace( NewStr, "\bsweden\b" , "Sweden"  )
NewStr := RegExReplace( NewStr, "\bswaziland\b" , "Swaziland"  )
NewStr := RegExReplace( NewStr, "\bsvalbard\b" , "Svalbard"  )
NewStr := RegExReplace( NewStr, "\bsuriname\b" , "Suriname"  )
NewStr := RegExReplace( NewStr, "\bsunda(ys?)\b" , "Sunda$1"  )
NewStr := RegExReplace( NewStr, "\bsudan\b" , "Sudan"  )
NewStr := RegExReplace( NewStr, "\bsudan?nes?se\b" , "Sudanese"  )
NewStr := RegExReplace( NewStr, "\bstuart(s?)\b" , "Stuart$1"  )
NewStr := RegExReplace( NewStr, "\bsri lank(a|ans?)\b" , "Sri Lank$1"  )
NewStr := RegExReplace( NewStr, "\bspringfield\b" , "Springfield"  )
NewStr := RegExReplace( NewStr, "\bspani(sh|ards?)\b" , "Spani$1"  )
NewStr := RegExReplace( NewStr, "\bspain\b" , "Spain"  )
NewStr := RegExReplace( NewStr, "\bspainish\b" , "Spanish" )
NewStr := RegExReplace( NewStr, "\bsouth\s*[Aa](mericans?)\b" , "South A$1"  )
NewStr := RegExReplace( NewStr, "\bsouth\s*([Cc]arolin|[Dd]akot)a(n?s?)\b" , "South $1a$2"  )
NewStr := RegExReplace( NewStr, "\bsouth [Kk]ore(a|ans?)\b" , "South Kore$1"  )
NewStr := RegExReplace( NewStr, "\bsouth [Aa]fric(a|ans?)\b" , "South Afric$1"  )
NewStr := RegExReplace( NewStr, "\bsouth ossetia\b" , "South Ossetia"  )
NewStr := RegExReplace( NewStr, "\bsomali(a?|s|ans?|land)\b" , "Somali$1"  )
NewStr := RegExReplace( NewStr, "\bsolomon islands\b" , "Solomon Islands"  )
NewStr := RegExReplace( NewStr, "\bslov(ak|en)i(a|ans?)\b" , "Slov$1i$2"  )
NewStr := RegExReplace( NewStr, "\bskagerak\b" , "Skagerrak" )
NewStr := RegExReplace( NewStr, "\bsixtin\b" , "Sistine" )
NewStr := RegExReplace( NewStr, "\bsiou(x|an)\b" , "Siou$1"  )
NewStr := RegExReplace( NewStr, "\bsionist(s)?\b" , "Zionist$1" )
NewStr := RegExReplace( NewStr, "\bSinn Fein\b" , "Sinn Féin"  )
NewStr := RegExReplace( NewStr, "\bsingapore\b" , "Singapore"  )
NewStr := RegExReplace( NewStr, "\bsingap?poria(ns?)\b" , "Singaporea$1"  )
NewStr := RegExReplace( NewStr, "\bsierra leon(e|ese)\b" , "Sierra Leone"  )
NewStr := RegExReplace( NewStr, "\bsier?ra leones?se\b" , "Sierra Leonese"  )
NewStr := RegExReplace( NewStr, "\bseychelles\b" , "Seychelles"  )
NewStr := RegExReplace( NewStr, "\bSevres\b" , "Sèvres"  )
NewStr := RegExReplace( NewStr, "\bsercumstance(s?)\b" , "circumstance$1" )
NewStr := RegExReplace( NewStr, "\bSercumstance(s?)\b" , "Circumstance$1" )
NewStr := RegExReplace( NewStr, "\bserbi(a|ans?)\b" , "Serbi$1"  )
NewStr := RegExReplace( NewStr, "\bseptembe(rs?)\b" , "Septembe$1"  )
NewStr := RegExReplace( NewStr, "\bsen[ae]gal?l[ae]s?se\b" , "Senegalese"  )
NewStr := RegExReplace( NewStr, "\bSensure\b" , "Censure" )
NewStr := RegExReplace( NewStr, "\bsensure\b" , "censure" )
NewStr := RegExReplace( NewStr, "\bsenegal\b" , "Senegal"  )
NewStr := RegExReplace( NewStr, "\bsence(s?|d|less(|ly))\b" , "sense$1"  )
NewStr := RegExReplace( NewStr, "\bsel(juk|euc(ids?|us))\b" , "Sel$1"  )
NewStr := RegExReplace( NewStr, "\bscotland\b" , "Scotland"  )
NewStr := RegExReplace( NewStr, "\bscot?(sm[ae]n|tish)\b" , "Scot$1"  )
NewStr := RegExReplace( NewStr, "\bscand[ai]navia(n?)\b" , "Scandinavia$1"  )
NewStr := RegExReplace( NewStr, "\bsaxon(s?|y|ism)\b" , "Saxon$1"  )
NewStr := RegExReplace( NewStr, "\bsaudi [Aa]rabia(|ns?)\b" , "Saudi Arabia$1"  )
NewStr := RegExReplace( NewStr, "\bsassani(de?s?|ans?)\b" , "Sassani$1"  )
NewStr := RegExReplace( NewStr, "\bsaskat(chewa|oo)n\b" , "Saskat$1n"  )
NewStr := RegExReplace( NewStr, "\bsardini(an?s?)\b" , "Sardini$1"  )
NewStr := RegExReplace( NewStr, "\bsanskrit\b" , "Sanskrit"  )
NewStr := RegExReplace( NewStr, "\bsanhedrim\b" , "Sanhedrin" )
NewStr := RegExReplace( NewStr, "\bsan marino\b" , "San Marino"  )
NewStr := RegExReplace( NewStr, "\bsamo(a|ans?)\b" , "Samo$1"  )
NewStr := RegExReplace( NewStr, "\bSalvador Dali\b" , "Salvador Dalí"  )
NewStr := RegExReplace( NewStr, "\bsaint vincent and the grenadines\b" , "Saint Vincent and the Grenadines"  )
NewStr := RegExReplace( NewStr, "\bsaint pierre and miquelon\b" , "Saint Pierre and Miquelon"  )
NewStr := RegExReplace( NewStr, "\bsaint lucia\b" , "Saint Lucia"  )
NewStr := RegExReplace( NewStr, "\bsaint kitts and nevis\b" , "Saint Kitts and Nevis"  )
NewStr := RegExReplace( NewStr, "\bsaint helena\b" , "Saint Helena"  )
NewStr := RegExReplace( NewStr, "\bsão tomé and príncipe\b" , "São Tomé and Príncipe"  )
NewStr := RegExReplace( NewStr, "\bRwite(s)?\b" , "Write$1" )
NewStr := RegExReplace( NewStr, "\brwite(s)?\b" , "write$1" )
NewStr := RegExReplace( NewStr, "\brwand(a|ans?)\b" , "Rwand$1"  )
NewStr := RegExReplace( NewStr, "\bruss?i(an?s?)\b" , "Russi$1"  )
NewStr := RegExReplace( NewStr, "\bromano(vs?|ffs?)\b" , "Romano$1"  )
NewStr := RegExReplace( NewStr, "\bromani(a|ans?)\b" , "Romani$1"  )
NewStr := RegExReplace( NewStr, "\brockerfeller\b" , "Rockefeller" )
NewStr := RegExReplace( NewStr, "\brepublic\s+of\s+[Cc]ongo\b" , "Republic of Congo"  )
NewStr := RegExReplace( NewStr, "\brepublic\s+of\s+china\b" , "Republic of China"  )
NewStr := RegExReplace( NewStr, "\brepublic of [kK]orea\b" , "Republic of Korea"  )
NewStr := RegExReplace( NewStr, "\bRene Descartes\b" , "René Descartes"  )
NewStr := RegExReplace( NewStr, "\brememberable\b" , "memorable" )
NewStr := RegExReplace( NewStr, "\bRememberable\b" , "Memorable" )
NewStr := RegExReplace( NewStr, "\bqu?ata(ri?)\b" , "Qata$1"  )
NewStr := RegExReplace( NewStr, "\bqu(e|é)bec(|ois|k?ers?)\b" , "Qu$1bec$2"  )
NewStr := RegExReplace( NewStr, "\bQu(?:ebé|ébe|ebe)cois(e|es)?\b" , "Québécois$1"  )
NewStr := RegExReplace( NewStr, "\bpunjabi\b" , "Punjabi"  )
NewStr := RegExReplace( NewStr, "\bpuerto\s+ric(o|ans?)\b" , "Puerto Ric$1"  )
NewStr := RegExReplace( NewStr, "\bpucini\b" , "Puccini" )
NewStr := RegExReplace( NewStr, "\bptolem(y|aic)\b" , "Ptolem$1"  )
NewStr := RegExReplace( NewStr, "\bprotest[ae]nt(s?|ism)\b" , "Protestant$1"  )
NewStr := RegExReplace( NewStr, "\bpridnestrovie\b" , "Pridnestrovie"  )
NewStr := RegExReplace( NewStr, "\bpremonasterians\b" , "Premonstratensians" )
NewStr := RegExReplace( NewStr, "\bpostdam\b" , "Potsdam" )
NewStr := RegExReplace( NewStr, "\bportugal\b" , "Portugal"  )
NewStr := RegExReplace( NewStr, "\bportug?ges?se\b" , "Portuguese"  )
NewStr := RegExReplace( NewStr, "\bportlan(d|ders?)\b" , "Portlan$1"  )
NewStr := RegExReplace( NewStr, "\bpolynes(ian?s?)\b" , "Polynes$1"  )
NewStr := RegExReplace( NewStr, "\bpoland\b" , "Poland"  )
NewStr := RegExReplace( NewStr, "\bpitcairn islands\b" , "Pitcairn Islands"  )
NewStr := RegExReplace( NewStr, "\bPina Colada(s)?\b" , "Piña Colada$1"  )
NewStr := RegExReplace( NewStr, "\bPin(?:nocc?|oc)hio\b" , "Pinocchio"  )
NewStr := RegExReplace( NewStr, "\bphonecian\b" , "Phoenician" )
NewStr := RegExReplace( NewStr, "\bphil?lip?pino([eo]s?)\b" , "Philippin$1"  )
NewStr := RegExReplace( NewStr, "\bphil(?:l?i|lip)pine(s)?\b" , "Philippine$2" )
NewStr := RegExReplace( NewStr, "\bpharoah\b" , "Pharaoh" )
NewStr := RegExReplace( NewStr, "\bpersia(|ns?)\b" , "Persia$1"  )
NewStr := RegExReplace( NewStr, "\bper(u|uvians?)\b" , "Per$1"  )
NewStr := RegExReplace( NewStr, "\bpeople's\s+republic\s+of\s+china\b" , "People's Republic of China"  )
NewStr := RegExReplace( NewStr, "\bpennsylvania(|ns?)\b" , "Pennsylvania$1"  )
NewStr := RegExReplace( NewStr, "\bPenelope Cruz\b" , "Penélope Cruz"  )
NewStr := RegExReplace( NewStr, "\bpeloponnes\b" , "Peloponnesus" )
NewStr := RegExReplace( NewStr, "\bparmesan\b" , "Parmesan"  )
NewStr := RegExReplace( NewStr, "\bparaguay\b" , "Paraguay"  )
NewStr := RegExReplace( NewStr, "\bpapua new guinea\b" , "Papua New Guinea"  )
NewStr := RegExReplace( NewStr, "\bpanam+(a|anians?)\b" , "Panam$1"  )
NewStr := RegExReplace( NewStr, "\bpaleolitic\b" , "Paleolithic" )
NewStr := RegExReplace( NewStr, "\bpalau\b" , "Palau"  )
NewStr := RegExReplace( NewStr, "\bpakista(ni?s?)\b" , "Pakista$1"  )
NewStr := RegExReplace( NewStr, "\bOwu(?:ld|dl)\b" , "Would" )
NewStr := RegExReplace( NewStr, "\bowu(?:ld|dl)\b" , "would" )
NewStr := RegExReplace( NewStr, "\bowrk(ers?|ed|ing)?\b" , "work$1" )
NewStr := RegExReplace( NewStr, "\bOwrk(ers?|ed|ing)?\b" , "Work$1" )
NewStr := RegExReplace( NewStr, "\boregon(|ians?)\b" , "Oregon$1"  )
NewStr := RegExReplace( NewStr, "\bontari(o|ans?)\b" , "Ontari$1"  )
NewStr := RegExReplace( NewStr, "\bOmre\b" , "More" )
NewStr := RegExReplace( NewStr, "\bomre\b" , "more" )
NewStr := RegExReplace( NewStr, "\boma(ni?s?)\b" , "Oma$1"  )
NewStr := RegExReplace( NewStr, "\boklahoma(|ns?)\b" , "Oklahoma$1"  )
NewStr := RegExReplace( NewStr, "\bohio(|ans?)\b" , "Ohio$1"  )
NewStr := RegExReplace( NewStr, "\boging\b" , "going" )
NewStr := RegExReplace( NewStr, "\bOging\b" , "Going" )
NewStr := RegExReplace( NewStr, "\bOcuntr(y|ies)\b" , "Countr$2" )
NewStr := RegExReplace( NewStr, "\bocuntr(y|ies)\b" , "countr$2" )
NewStr := RegExReplace( NewStr, "\boctobe(rs?)\b" , "Octobe$1"  )
NewStr := RegExReplace( NewStr, "\bnuremburg\b" , "Nuremberg" )
NewStr := RegExReplace( NewStr, "\bnullabour\b" , "Nullarbor" )
NewStr := RegExReplace( NewStr, "\bnovembe(rs?)\b" , "Novembe$1"  )
NewStr := RegExReplace( NewStr, "\bnorwegia(ns?)\b" , "Norwegia$1"  )
NewStr := RegExReplace( NewStr, "\bnorway\b" , "Norway"  )
NewStr := RegExReplace( NewStr, "\bnorth\s*[Aa](mericans?)\b" , "North A$1"  )
NewStr := RegExReplace( NewStr, "\bnorth\s*([Cc]arolin|[Dd]akot)a(n?s?)\b" , "North $1a$2"  )
NewStr := RegExReplace( NewStr, "\bnorthern mariana islands\b" , "Northern Mariana Islands"  )
NewStr := RegExReplace( NewStr, "\bnorthern cyprus\b" , "Northern Cyprus"  )
NewStr := RegExReplace( NewStr, "\bnorth kore(a|ans?)\b" , "North Kore$1"  )
NewStr := RegExReplace( NewStr, "\bnorman(s?|dy)\b" , "Norman$1"  )
NewStr := RegExReplace( NewStr, "\bnorfolk island\b" , "Norfolk Island"  )
NewStr := RegExReplace( NewStr, "\bnor(se|sem[ae]n|dic|mans?)\b" , "Nor$1"  )
NewStr := RegExReplace( NewStr, "\bNk(?:wo|ow)\b" , "Know" )
NewStr := RegExReplace( NewStr, "\bniue\b" , "Niue"  )
NewStr := RegExReplace( NewStr, "\bniger(ian?s?)\b" , "Niger$1"  )
NewStr := RegExReplace( NewStr, "\bNicc?oll?o Macc?hiavell?i\b" , "Niccolò Machiavelli"  )
NewStr := RegExReplace( NewStr, "\bnicaragua(|ns?)\b" , "Nicaragua$1"  )
NewStr := RegExReplace( NewStr, "\bnew\s*[Yy]ork(|ers?)\b" , "New York$1"  )
NewStr := RegExReplace( NewStr, "\bNew\s*[Nn]etherlands\b" , "New Netherland"  )
NewStr := RegExReplace( NewStr, "\bnew\s*[Mm]exic(o|ans?)\b" , "New Mexic$1"  )
NewStr := RegExReplace( NewStr, "\bnew\s*[Jj]ersey(|ites?)\b" , "New Jersey$1"  )
NewStr := RegExReplace( NewStr, "\bNew\s*[Dd]ehli\b" , "New Delhi"  )
NewStr := RegExReplace( NewStr, "\bnewfoundland(|ers?)\b" , "Newfoundland$1"  )
NewStr := RegExReplace( NewStr, "\bnew zealand(|ers?)\b" , "New Zealand$1"  )
NewStr := RegExReplace( NewStr, "\bnew caledonia(|ns?)\b" , "New Caledonia$1"  )
NewStr := RegExReplace( NewStr, "\bnevad(a|i?ans?)\b" , "Nevad$1"  )
NewStr := RegExReplace( NewStr, "\bnetherlands\b" , "Netherlands"  )
NewStr := RegExReplace( NewStr, "\bnep[ae]l?les?se\b" , "Nepalese"  )
NewStr := RegExReplace( NewStr, "\bnepal\b" , "Nepal"  )
NewStr := RegExReplace( NewStr, "\bneolitic\b" , "Neolithic" )
NewStr := RegExReplace( NewStr, "\bnebrask(a|ans?)\b" , "Nebrask$1"  )
NewStr := RegExReplace( NewStr, "\bnazereth\b" , "Nazareth" )
NewStr := RegExReplace( NewStr, "\bnava([hj]os?)\b" , "Nava$1"  )
NewStr := RegExReplace( NewStr, "\bnauru\b" , "Nauru"  )
NewStr := RegExReplace( NewStr, "\bnapoleonic\b" , "Napoleonic"  )
NewStr := RegExReplace( NewStr, "\bnapoleonian\b" , "Napoleonic" )
NewStr := RegExReplace( NewStr, "\bnamibi(a|ans?)\b" , "Namibi$1"  )
NewStr := RegExReplace( NewStr, "\bnagorno-karabakh\b" , "Nagorno-Karabakh"  )
NewStr := RegExReplace( NewStr, "\bn(K|k)(?:wo|ow)(n?|s)\b" , "$1now$2" )
NewStr := RegExReplace( NewStr, "\bmythraic\b" , "Mithraic" )
NewStr := RegExReplace( NewStr, "\bmyanmar\b" , "Myanmar"  )
NewStr := RegExReplace( NewStr, "\bmunbers\b" , "numbers" )
NewStr := RegExReplace( NewStr, "\bMunbers\b" , "Numbers" )
NewStr := RegExReplace( NewStr, "\bmozambique\b" , "Mozambique"  )
NewStr := RegExReplace( NewStr, "\bmorrisette\b" , "Morissette" )
NewStr := RegExReplace( NewStr, "\bmorisette\b" , "Morissette" )
NewStr := RegExReplace( NewStr, "\bmor+oc+(o|ans?)\b" , "Morocc$1"  )
NewStr := RegExReplace( NewStr, "\bmontserr?a(ti?)\b" , "Montserra$1"  )
NewStr := RegExReplace( NewStr, "\bmontr(e|é)al(|ers?)\b" , "Montr$1al$2"  )
NewStr := RegExReplace( NewStr, "\bmontenegr(o|ans?)\b" , "Montenegr$1"  )
NewStr := RegExReplace( NewStr, "\bmontan(a|ans?)\b" , "Montan$1"  )
NewStr := RegExReplace( NewStr, "\bmonserrat\b" , "Montserrat" )
NewStr := RegExReplace( NewStr, "\bmongol+(s?|ia|ians?)\b" , "Mongol$1"  )
NewStr := RegExReplace( NewStr, "\bmonda(ys?)\b" , "Monda$1"  )
NewStr := RegExReplace( NewStr, "\bmonaco\b" , "Monaco"  )
NewStr := RegExReplace( NewStr, "\bmoldov(a|ans?)\b" , "Moldov$1"  )
NewStr := RegExReplace( NewStr, "\bmississippi(|ans?)\b" , "Mississippi$1"  )
NewStr := RegExReplace( NewStr, "\bmisouri\b" , "Missouri" )
NewStr := RegExReplace( NewStr, "\bminnesot(a|ans?)\b" , "Minnesot$1"  )
NewStr := RegExReplace( NewStr, "\bmil(?:en?|le)ni(um|a|al(|ly|is[tm]))\b" , "millenni$1"  )
NewStr := RegExReplace( NewStr, "\bmicronesi(a|ans?)\b" , "Micronesi$1"  )
NewStr := RegExReplace( NewStr, "\bmich[ae]*lmas+\b" , "Michaelmas"  )
NewStr := RegExReplace( NewStr, "\bmichigan(|ders?)\b" , "Michigan$1"  )
NewStr := RegExReplace( NewStr, "\bmicheal\b" , "Michael" )
NewStr := RegExReplace( NewStr, "\bmichagan\b" , "Michigan" )
NewStr := RegExReplace( NewStr, "\bmexic(o|ans?)\b" , "Mexic$1"  )
NewStr := RegExReplace( NewStr, "\bmerovingia(ns?)\b" , "Merovingia$2"  )
NewStr := RegExReplace( NewStr, "\bmediterainnean\b" , "Mediterranean" )
NewStr := RegExReplace( NewStr, "\bmayotte\b" , "Mayotte"  )
NewStr := RegExReplace( NewStr, "\bmauriti(us|ans?)\b" , "Mauriti$1"  )
NewStr := RegExReplace( NewStr, "\bmauritani(a|ans?)\b" , "Mauritani$1"  )
NewStr := RegExReplace( NewStr, "\bmassachusetts\b" , "Massachusetts"  )
NewStr := RegExReplace( NewStr, "\bmarylan(d|ders?)\b" , "Marylan$1"  )
NewStr := RegExReplace( NewStr, "\bmarshall islands\b" , "Marshall Islands"  )
NewStr := RegExReplace( NewStr, "\bmanx(|m[ae]n|wom[ae]n)\b" , "Manx$1"  )
NewStr := RegExReplace( NewStr, "\bmanitoba(|ns?)\b" , "Manitoba$1"  )
NewStr := RegExReplace( NewStr, "\bmaltesian\b" , "Maltese" )
NewStr := RegExReplace( NewStr, "\bmali\b" , "Mali"  )
NewStr := RegExReplace( NewStr, "\bmald[ei]v(es|ians?)\b" , "Maldiv$1"  )
NewStr := RegExReplace( NewStr, "\bmalcom\b" , "Malcolm" )
NewStr := RegExReplace( NewStr, "\bmal?lawi(|ans?)\b" , "Malawi$1"  )
NewStr := RegExReplace( NewStr, "\bmal+t(a|ese)\b" , "Malt$1"  )
NewStr := RegExReplace( NewStr, "\bmal+aysi(a|ans?)\b" , "Malaysi$1"  )
NewStr := RegExReplace( NewStr, "\bmaine\b" , "Maine"  )
NewStr := RegExReplace( NewStr, "\bmad[ae]gasca(r|ns?)\b" , "Madagasca$1"  )
NewStr := RegExReplace( NewStr, "\bmac[ae]don(|ian?s?)\b" , "Macedon$1"  )
NewStr := RegExReplace( NewStr, "\bmacao\b" , "Macao"  )
NewStr := RegExReplace( NewStr, "\blybia\b" , "Libya" )
NewStr := RegExReplace( NewStr, "\bluxembourg\b" , "Luxembourg"  )
NewStr := RegExReplace( NewStr, "\blukid\b" , "Likud" )
NewStr := RegExReplace( NewStr, "\blouisian(a|ans?)\b" , "Louisian$1"  )
NewStr := RegExReplace( NewStr, "\bloosley\b" , "loosely"  )
NewStr := RegExReplace( NewStr, "\blithuani(a|ans?)\b" , "Lithuani$1"  )
NewStr := RegExReplace( NewStr, "\blippizaner\b" , "Lipizzaner" )
NewStr := RegExReplace( NewStr, "\blinnaena\b" , "Linnaean" )
NewStr := RegExReplace( NewStr, "\bliechtenstein\b" , "Liechtenstein"  )
NewStr := RegExReplace( NewStr, "\bliby?i?a(|n?s)\b" , "Libya$1"  )
NewStr := RegExReplace( NewStr, "\bliberia(|ns?)\b" , "Liberia$1"  )
NewStr := RegExReplace( NewStr, "\blesoth(o|ans?)\b" , "Lesoth$1"  )
NewStr := RegExReplace( NewStr, "\bLes Miserables\b" , "Les Misérables"  )
NewStr := RegExReplace( NewStr, "\bleibnitz\b" , "Leibniz" )
NewStr := RegExReplace( NewStr, "\bleb[ae]n?nes?se\b" , "Lebanese"  )
NewStr := RegExReplace( NewStr, "\bleban(on|ese)\b" , "Leban$1"  )
NewStr := RegExReplace( NewStr, "\blatvia(|ns?)\b" , "Latvia$1"  )
NewStr := RegExReplace( NewStr, "\blatin(|[ao]s?|ate|is[mt]s?|i[sz](e[sd]?|ing))\b" , "Latin$1"  )
NewStr := RegExReplace( NewStr, "\blarrry\b" , "Larry" )
NewStr := RegExReplace( NewStr, "\blao(s|tians?)\b" , "Lao$1"  )
NewStr := RegExReplace( NewStr, "\blabrador(|[ie]ans?)\b" , "Labrador$1"  )
NewStr := RegExReplace( NewStr, "\bLa [bB]oheme\b" , "La bohème"  )
NewStr := RegExReplace( NewStr, "\bK[hH][zZ]\b" , "kHz"  )
NewStr := RegExReplace( NewStr, "\bkyrgyzstan(|ians?)\b" , "Kyrgyzstan$1"  )
NewStr := RegExReplace( NewStr, "\bkuwait(|is?)\b" , "Kuwait$1"  )
NewStr := RegExReplace( NewStr, "\bkosovo\b" , "Kosovo"  )
NewStr := RegExReplace( NewStr, "\bkos?sov(o|ans?)\b" , "Kosov$1"  )
NewStr := RegExReplace( NewStr, "\bkorea(ns?)\b" , "Korea$1"  )
NewStr := RegExReplace( NewStr, "\bklondike\b" , "Klondike"  )
NewStr := RegExReplace( NewStr, "\bkiribati(|ans?)\b" , "Kiribati$1"  )
NewStr := RegExReplace( NewStr, "\bkir(gh?)iz(|ia|stan)\b" , "Kir$1iz$2"  )
NewStr := RegExReplace( NewStr, "\bkenya(|ns?)\b" , "Kenya$1"  )
NewStr := RegExReplace( NewStr, "\bkentuck(y|ians?)\b" , "Kentuck$1"  )
NewStr := RegExReplace( NewStr, "\bka[sz]akh?stan\b" , "Kazakhstan"  )
NewStr := RegExReplace( NewStr, "\bka[sz]ak(h?s?)\b" , "Kazak$1"  )
NewStr := RegExReplace( NewStr, "\bkans(an?s?)\b" , "Kans$1"  )
NewStr := RegExReplace( NewStr, "\bK(g|m)\b" , "k$1"  )
NewStr := RegExReplace( NewStr, "\bK(?:[pP]a|pA)\b" , "kPa"  )
NewStr := RegExReplace( NewStr, "\bjuada?ism\b" , "Judaism" )
NewStr := RegExReplace( NewStr, "\bju(ne|ly)\b" , "Ju$1"  )
NewStr := RegExReplace( NewStr, "\bjospeh\b" , "Joseph" )
NewStr := RegExReplace( NewStr, "\bJose Ferrer\b" , "José Ferrer"  )
NewStr := RegExReplace( NewStr, "\bjordan(|ians?)\b" , "Jordan$1"  )
NewStr := RegExReplace( NewStr, "\bjohnnie\b" , "Johnnie" )
NewStr := RegExReplace( NewStr, "\bJoan Miro\b" , "Joan Miró"  )
NewStr := RegExReplace( NewStr, "\bje(ws?|wish)\b" , "Je$1"  )
NewStr := RegExReplace( NewStr, "\bjapan\b" , "Japan"  )
NewStr := RegExReplace( NewStr, "\bjapanes\b" , "Japanese" )
NewStr := RegExReplace( NewStr, "\bjapan?nes?se\b" , "Japanese"  )
NewStr := RegExReplace( NewStr, "\bJan(ac|ac|ác)ek\b" , "Janácek"  )
NewStr := RegExReplace( NewStr, "\bjam+ai?c(a|ans?)\b" , "Jamaic$1"  )
NewStr := RegExReplace( NewStr, "\bJacqueline [dD]u ?[pP]re\b" , "Jacqueline du Pré"  )
NewStr := RegExReplace( NewStr, "\bIwth\b" , "With" )
NewStr := RegExReplace( NewStr, "\bIwll\b" , "Will" )
NewStr := RegExReplace( NewStr, "\biwll\b" , "will" )
NewStr := RegExReplace( NewStr, "\bivory\s*coast\b" , "Ivory Coast"  )
NewStr := RegExReplace( NewStr, "\biunior\b" , "junior" )
NewStr := RegExReplace( NewStr, "\bIunior\b" , "Junior" )
NewStr := RegExReplace( NewStr, "\bital+(y|ians?)\b" , "Ital$1"  )
NewStr := RegExReplace( NewStr, "\bisle\s+of\s+man\b" , "Isle of Man"  )
NewStr := RegExReplace( NewStr, "\bislas malvinas\b" , "Islas Malvinas"  )
NewStr := RegExReplace( NewStr, "\birr?egu?ardless\b" , "regardless"  )
NewStr := RegExReplace( NewStr, "\bIrr?egu?ardless\b" , "Regardless"  )
NewStr := RegExReplace( NewStr, "\birish(|m[ae]n)\b" , "Irish$1"  )
NewStr := RegExReplace( NewStr, "\bira(n|nians?|qi?s?)\b" , "Ira$1"  )
NewStr := RegExReplace( NewStr, "\biow(an?s?)\b" , "Iow$1"  )
NewStr := RegExReplace( NewStr, "\bintrusted\b" , "entrusted" )
NewStr := RegExReplace( NewStr, "\bIntrusted\b" , "Entrusted" )
NewStr := RegExReplace( NewStr, "\bintertaining\b" , "entertaining" )
NewStr := RegExReplace( NewStr, "\bIntertaining\b" , "Entertaining" )
NewStr := RegExReplace( NewStr, "\bInofficial\b" , "Unofficial" )
NewStr := RegExReplace( NewStr, "\binofficial\b" , "unofficial" )
NewStr := RegExReplace( NewStr, "\Binig(|s|ly)\b" , "ining$1"  )
NewStr := RegExReplace( NewStr, "\bindonesi(a|ans?)\b" , "Indonesi$1"  )
NewStr := RegExReplace( NewStr, "\bindian(a|i?ans?|apolis|town)\b" , "Indian$1"  )
NewStr := RegExReplace( NewStr, "\bindia(ns?)\b" , "India$1"  )
NewStr := RegExReplace( NewStr, "\bimploys\b" , "employs" )
NewStr := RegExReplace( NewStr, "\bImploys\b" , "Employs" )
NewStr := RegExReplace( NewStr, "\Bilites\b" , "ilities"  )
NewStr := RegExReplace( NewStr, "\bIhs\b" , "His" )
NewStr := RegExReplace( NewStr, "\bihs\b" , "his" )
NewStr := RegExReplace( NewStr, "\bihaca\b" , "Ithaca" )
NewStr := RegExReplace( NewStr, "\bidaho(|ans?)\b" , "Idah$1"  )
NewStr := RegExReplace( NewStr, "\biceland(ic|ers?)\b" , "Iceland$1"  )
NewStr := RegExReplace( NewStr, "\bi(c|r)eland\b" , "I$1eland"  )
NewStr := RegExReplace( NewStr, "\bhwole\b" , "whole" )
NewStr := RegExReplace( NewStr, "\bHwole\b" , "Whole" )
NewStr := RegExReplace( NewStr, "\bhwile\b" , "while" )
NewStr := RegExReplace( NewStr, "\bHwile\b" , "While" )
NewStr := RegExReplace( NewStr, "\bHwi(?:hc|ch)\b" , "Which" )
NewStr := RegExReplace( NewStr, "\bhwi(?:hc|ch)\b" , "which" )
NewStr := RegExReplace( NewStr, "\bhungar(y|ians?)\b" , "Hungar$1"  )
NewStr := RegExReplace( NewStr, "\bhtin(k|g)n?(s|ing)?\b" , "thin$2$3" )
NewStr := RegExReplace( NewStr, "\bHtin(k|g)n?(s|ing)?\b" , "Thin$2$3" )
NewStr := RegExReplace( NewStr, "\bHt(e[mny]?|is|ere)\b" , "Th$1" )
NewStr := RegExReplace( NewStr, "\bht(e[mny]?|is|ere)\b" , "th$1" )
NewStr := RegExReplace( NewStr, "\bhsi\b" , "his" )
NewStr := RegExReplace( NewStr, "\bhong\s+kong\b" , "Hong Kong"  )
NewStr := RegExReplace( NewStr, "\bhondura(n?s?)\b" , "Hondura$1"  )
NewStr := RegExReplace( NewStr, "\bhind([iu]s?|ustan(|is?))\b" , "Hind$1"  )
NewStr := RegExReplace( NewStr, "\bherzegovin(a|ians?)\b" , "Herzegovin$1"  )
NewStr := RegExReplace( NewStr, "\bHerge\b" , "Hergé"  )
NewStr := RegExReplace( NewStr, "\bhel?l[ae]n(ic|istic)\b" , "Hellen$1"  )
NewStr := RegExReplace( NewStr, "\bhebr(ews?|aic|ais[tm])\b" , "Hebr$1"  )
NewStr := RegExReplace( NewStr, "\bhawaii(|ans?)\b" , "Hawaii$1"  )
NewStr := RegExReplace( NewStr, "\bharvard\b" , "Harvard"  )
NewStr := RegExReplace( NewStr, "\bhaiti(|ans?)\b" , "Haiti$1"  )
NewStr := RegExReplace( NewStr, "\bg[pP][aA]\b" , "GPa"  )
NewStr := RegExReplace( NewStr, "\bg[hH][zZ]\b" , "GHz"  )
NewStr := RegExReplace( NewStr, "\bguyana(|ns?)\b" , "Guyana$1"  )
NewStr := RegExReplace( NewStr, "\bgurkha(s?)\b" , "Gurkha$1"  )
NewStr := RegExReplace( NewStr, "\bguj[au]rat(|is?)\b" , "Gujarat$1"  )
NewStr := RegExReplace( NewStr, "\bguinea-bissau\b" , "Guinea-Bissau"  )
NewStr := RegExReplace( NewStr, "\bguinea(ns?)\b" , "Guinea$1"  )
NewStr := RegExReplace( NewStr, "\bguatemala(|ns?)\b" , "Guatemala$1"  )
NewStr := RegExReplace( NewStr, "\bguam\b" , "Guam"  )
NewStr := RegExReplace( NewStr, "\bguadulupe\b" , "Guadalupe" )
NewStr := RegExReplace( NewStr, "\bgrenad(an?s?|ines)\b" , "Grenad$1"  )
NewStr := RegExReplace( NewStr, "\bgreif\b" , "grief" )
NewStr := RegExReplace( NewStr, "\bgreenland(|ic)\b" , "Greenland$1"  )
NewStr := RegExReplace( NewStr, "\bgreat [Bb]ritain\b" , "Great Britain"  )
NewStr := RegExReplace( NewStr, "\bgre(ece|eks?|cian)\b" , "Gre$1"  )
NewStr := RegExReplace( NewStr, "\bgran(?:|d-)son(s)?\b" , "grandson$1"  )
NewStr := RegExReplace( NewStr, "\bgrammer(s?|ians?)\b" , "grammar$1"  )
NewStr := RegExReplace( NewStr, "\bgramaphone(s?)\b" , "gramophone$1"  )
NewStr := RegExReplace( NewStr, "\bgotterdammerung\b" , "Götterdämmerung" )
NewStr := RegExReplace( NewStr, "\bGlight\b" , "Flight" )
NewStr := RegExReplace( NewStr, "\bglight\b" , "flight" )
NewStr := RegExReplace( NewStr, "\bgibraltar(|ians?)\b" , "Gibraltar$1"  )
NewStr := RegExReplace( NewStr, "\bGhanian(s?)\b" , "Ghanaian$1"  )
NewStr := RegExReplace( NewStr, "\bghandi\b" , "Gandhi" )
NewStr := RegExReplace( NewStr, "\bghan(a(n?|ian)s?)\b" , "Ghan$1"  )
NewStr := RegExReplace( NewStr, "\bgewurztraminer\b" , "Gewürztraminer" )
NewStr := RegExReplace( NewStr, "\bgerman(s?|y|ic|is[mt]s?|i[sz]e[sdr]?)\b" , "German$1"  )
NewStr := RegExReplace( NewStr, "\bgeorgia(|ns?)\b" , "Georgia$1"  )
NewStr := RegExReplace( NewStr, "\bgariss?on(s?|ed)\b" , "garrison$1"  )
NewStr := RegExReplace( NewStr, "\bgambia(|ns?)\b" , "Gambia$1"  )
NewStr := RegExReplace( NewStr, "\bgalations\b" , "Galatians" )
NewStr := RegExReplace( NewStr, "\bgabon\b" , "Gabon"  )
NewStr := RegExReplace( NewStr, "\bFuhrer\b" , "Führer"  )
NewStr := RegExReplace( NewStr, "\bFu(?:rthu|the)r(s|ed|ing|ances?|more|most)\b" , "Further$1"  )
NewStr := RegExReplace( NewStr, "\bfu(?:rthu|the)r(s?|ed|ing|ances?|more|most)\b" , "further$1"  )
NewStr := RegExReplace( NewStr, "\bfrome\b" , "from" )
NewStr := RegExReplace( NewStr, "\bfrida(ys?)\b" , "Frida$1"  )
NewStr := RegExReplace( NewStr, "\bfrench\s*[Pp]olynesia\b" , "French Polynesia"  )
NewStr := RegExReplace( NewStr, "\bfreind(s?)\b" , "$friend" )
NewStr := RegExReplace( NewStr, "\bfrance\b" , "France"  )
NewStr := RegExReplace( NewStr, "\bFran(?:sisc|[sc]ics)(o|ans?)\b" , "Francisc$1"  )
NewStr := RegExReplace( NewStr, "\bfoundland\b" , "Newfoundland" )
NewStr := RegExReplace( NewStr, "\bFonetic\b" , "Phonetic" )
NewStr := RegExReplace( NewStr, "\bfonetic\b" , "phonetic" )
NewStr := RegExReplace( NewStr, "\bflorid(a|ians?)\b" , "Florid$1"  )
NewStr := RegExReplace( NewStr, "\bflemmish\b" , "Flemish" )
NewStr := RegExReplace( NewStr, "\bfire?y\b" , "fiery"  )
NewStr := RegExReplace( NewStr, "\bfinnish\b" , "Finnish"  )
NewStr := RegExReplace( NewStr, "\bfinland(|ia)\b" , "Finland$1"  )
NewStr := RegExReplace( NewStr, "\bfil?lipino(s?)\b" , "Filipino$1"  )
NewStr := RegExReplace( NewStr, "\bfiji(|ans?)\b" , "Fiji$1"  )
NewStr := RegExReplace( NewStr, "\bferomone\b" , "pheromone" )
NewStr := RegExReplace( NewStr, "\bFeromone\b" , "Pheromone" )
NewStr := RegExReplace( NewStr, "\bfebruary\b" , "February"  )
NewStr := RegExReplace( NewStr, "\bfau?lkland(s?)\b" , "Falkland$1"  )
NewStr := RegExReplace( NewStr, "\bfatimi(ds?|ites?|ah?)\b" , "Fatim$1"  )
NewStr := RegExReplace( NewStr, "\bfaroe\s*islands\b" , "Faroe Islands"  )
NewStr := RegExReplace( NewStr, "\bfarenheit\b" , "Fahrenheit" )
NewStr := RegExReplace( NewStr, "\beyt\b" , "yet" )
NewStr := RegExReplace( NewStr, "\bEyt\b" , "Yet" )
NewStr := RegExReplace( NewStr, "\beyar(s)?\b" , "year$1" )
NewStr := RegExReplace( NewStr, "\bEyar(s)?\b" , "Year$1" )
NewStr := RegExReplace( NewStr, "\beurope(|ans?)\b" , "Europe$1"  )
NewStr := RegExReplace( NewStr, "\beth[ie]opia(|ns?)\b" , "Ethiopia$1"  )
NewStr := RegExReplace( NewStr, "\bestonia(|ns?)\b" , "Estonia$1"  )
NewStr := RegExReplace( NewStr, "\beritrea(|ns?)\b" , "Eritrea$1"  )
NewStr := RegExReplace( NewStr, "\berally\b" , "really" )
NewStr := RegExReplace( NewStr, "\bErally\b" , "Really" )
NewStr := RegExReplace( NewStr, "\bequatorial\s*[Gg]uinea\b" , "Equatorial Guinea"  )
NewStr := RegExReplace( NewStr, "\bep[eé]e(s)?\b" , "épée$1"  )
NewStr := RegExReplace( NewStr, "\bEp[eé]e(s)?\b" , "Épée$1"  )
NewStr := RegExReplace( NewStr, "\benxt\b" , "next" )
NewStr := RegExReplace( NewStr, "\bEnxt\b" , "Next" )
NewStr := RegExReplace( NewStr, "\benlish\b" , "English" )
NewStr := RegExReplace( NewStr, "\benglish(wo|)(|m[ae]n)\b" , "English$1$2"  )
NewStr := RegExReplace( NewStr, "\bengland\b" , "England"  )
NewStr := RegExReplace( NewStr, "\benflam(e[ds]?|ing)\b" , "inflam$1"  )
NewStr := RegExReplace( NewStr, "\bEned\b" , "Need" )
NewStr := RegExReplace( NewStr, "\bened\b" , "need" )
NewStr := RegExReplace( NewStr, "\benduce\b" , "induce" )
NewStr := RegExReplace( NewStr, "\bEnduce\b" , "Induce" )
NewStr := RegExReplace( NewStr, "\bempris?son(s?|ed|ing|ment)\b" , "imprison$1"  )
NewStr := RegExReplace( NewStr, "\bemigré(e|es)?\b" , "émigré$1"  )
NewStr := RegExReplace( NewStr, "\bEmigré(e|es)?\b" , "Émigré$1"  )
NewStr := RegExReplace( NewStr, "\bem?mediat(e|ely)\b" , "immediat$1"  )
NewStr := RegExReplace( NewStr, "\bel\s*salvado(r|rians?)\b" , "El Salvado$1"  )
NewStr := RegExReplace( NewStr, "\belizabeth(|ans?)\b" , "Elizabeth$1"  )
NewStr := RegExReplace( NewStr, "\bElast\b" , "Least" )
NewStr := RegExReplace( NewStr, "\belast\b" , "least" )
NewStr := RegExReplace( NewStr, "\bEhr(e)?\b" , "Her$1" )
NewStr := RegExReplace( NewStr, "\behr(e)?\b" , "her$1" )
NewStr := RegExReplace( NewStr, "\beg[yi]pt(|ians?)\b" , "Egypt$1"  )
NewStr := RegExReplace( NewStr, "\bEgyptain(s)?\b" , "Egyptian$1"  )
NewStr := RegExReplace( NewStr, "\befel\b" , "feel" )
NewStr := RegExReplace( NewStr, "\bEfel\b" , "Feel" )
NewStr := RegExReplace( NewStr, "\bedwardia(ns?)\b" , "Edwardia$1"  )
NewStr := RegExReplace( NewStr, "\becua?d?dor(|ians?)\b" , "Ecuador$1"  )
NewStr := RegExReplace( NewStr, "\beclat\b" , "éclat" )
NewStr := RegExReplace( NewStr, "\beclair(s)?\b" , "éclair$1"  )
NewStr := RegExReplace( NewStr, "\bEclair(s)?\b" , "Éclair$1"  )
NewStr := RegExReplace( NewStr, "\beast\s*timor\b" , "East Timor"  )
NewStr := RegExReplace( NewStr, "\beaster(?!\s+egg)\b" , "Easter"  )
NewStr := RegExReplace( NewStr, "\bdutch(|m[ae]n)\b" , "Dutch$1"  )
NewStr := RegExReplace( NewStr, "\bdominican [rR]epublic\b" , "Dominican Republic"  )
NewStr := RegExReplace( NewStr, "\bdomin+ici?(a|ans?)\b" , "Dominic$1"  )
NewStr := RegExReplace( NewStr, "\bdjibouti\b" , "Djibouti"  )
NewStr := RegExReplace( NewStr, "\bdil(?:e|lem?)ma(s?)\b" , "dilemma$1"  )
NewStr := RegExReplace( NewStr, "\bdhekeli(a|ans?)\b" , "Dhekeli$1"  )
NewStr := RegExReplace( NewStr, "\bdenmark\b" , "Denmark"  )
NewStr := RegExReplace( NewStr, "\bdemocratic\s+republic\s+of\s+[Cc]ongo\b" , "Democratic Republic of Congo"  )
NewStr := RegExReplace( NewStr, "\bdemocratic people's republic of [kK]orea\b" , "Democratic People's Republic of Korea"  )
NewStr := RegExReplace( NewStr, "\bdelawar(es?|ians?)\b" , "Delawar$1"  )
NewStr := RegExReplace( NewStr, "\bdecembe(rs?)\b" , "Decembe$1"  )
NewStr := RegExReplace( NewStr, "\bdardenelles\b" , "Dardanelles" )
NewStr := RegExReplace( NewStr, "\bdan?nish\b" , "Danish"  )
NewStr := RegExReplace( NewStr, "\bdakota(n?s?)\b" , "Dakota$1"  )
NewStr := RegExReplace( NewStr, "\bdahomey\b" , "Dahomey"  )
NewStr := RegExReplace( NewStr, "\bd(?:éja vu|ejà vu|eja vu)\b" , "déjà vu"  )
NewStr := RegExReplace( NewStr, "\bD(?:éja Vu|ejà Vu|eja Vu)\b" , "Déjà Vu"  )
NewStr := RegExReplace( NewStr, "\bc[yi]pr(us|iots?)\b" , "Cypr$1"  )
NewStr := RegExReplace( NewStr, "\bc[oô]te\s+d'[Ii]voire\b" , "Côte d'Ivoire"  )
NewStr := RegExReplace( NewStr, "\bczec[hk]\s*[Rr]epublic\b" , "Czech Republic"  )
NewStr := RegExReplace( NewStr, "\bczechoslovak(s?|ian?s?)\b" , "Czechoslovak$1"  )
NewStr := RegExReplace( NewStr, "\bcyril?li(cs?)\b" , "Cyrilli$1"  )
NewStr := RegExReplace( NewStr, "\bCuracao\b" , "Curaçao"  )
NewStr := RegExReplace( NewStr, "\bcuba(|ns?)(?!\s+prime)\b" , "Cuba$1"  )
NewStr := RegExReplace( NewStr, "\bcroat(s?|ia|ians?)\b" , "Croat$1"  )
NewStr := RegExReplace( NewStr, "\bcreusa\b" , "Creüsa" )
NewStr := RegExReplace( NewStr, "\bcret(e|ans?)\b" , "Cret$1"  )
NewStr := RegExReplace( NewStr, "\bcosta\s*rica(|ns?)\b" , "Costa Rica$1"  )
NewStr := RegExReplace( NewStr, "\bcorsica(|ns?)\b" , "Corsica$1"  )
NewStr := RegExReplace( NewStr, "\bcook\s*islands\b" , "Cook Islands"  )
NewStr := RegExReplace( NewStr, "\bconnecticut\b" , "Connecticut"  )
NewStr := RegExReplace( NewStr, "\bcong(o|ans?)\b" , "Cong$1"  )
NewStr := RegExReplace( NewStr, "\bcomoros\b" , "Comoros"  )
NewStr := RegExReplace( NewStr, "\bcolorad(o|ans?)\b" , "Colorad$1"  )
NewStr := RegExReplace( NewStr, "\bcol(o|u)mbia(|ns?)\b" , "Col$1mbia$2"  )
NewStr := RegExReplace( NewStr, "\bchin?nes?se\b" , "Chinese"  )
NewStr := RegExReplace( NewStr, "\bchil?lea(ns?)\b" , "Chilea$1"  )
NewStr := RegExReplace( NewStr, "\bchicago(|ans?)\b" , "Chicago$1"  )
NewStr := RegExReplace( NewStr, "\bcher?roke?e(s?)\b" , "Cherokee$1"  )
NewStr := RegExReplace( NewStr, "\bchamps-elysees\b" , "Champs-Élysées" )
NewStr := RegExReplace( NewStr, "\bchadia(ns?)\b" , "Chadia$1"  )
NewStr := RegExReplace( NewStr, "\bch?zech(s?)\b" , "Czech$1"  )
NewStr := RegExReplace( NewStr, "\bCesar Franck\b" , "César Franck"  )
NewStr := RegExReplace( NewStr, "\bcentral\s+african\s+republic\b" , "Central African Republic"  )
NewStr := RegExReplace( NewStr, "\bcentral [Aa]meric(ans?)\b" , "Central Americ$1"  )
NewStr := RegExReplace( NewStr, "\bceasar\b" , "Caesar" )
NewStr := RegExReplace( NewStr, "\bcayman islands\b" , "Cayman Islands"  )
NewStr := RegExReplace( NewStr, "\bcattleship\b" , "battleship" )
NewStr := RegExReplace( NewStr, "\bCattleship\b" , "Battleship" )
NewStr := RegExReplace( NewStr, "\bcatal?la(ns?)\b" , "Catala$1"  )
NewStr := RegExReplace( NewStr, "\bcarolin(an?s?)\b" , "Carolin$1"  )
NewStr := RegExReplace( NewStr, "\bcarisma(|tic(s?|ally))\b" , "charisma$1"  )
NewStr := RegExReplace( NewStr, "\bcar(ol|lov)ingia(ns?)\b" , "Car$1ingia$2"  )
NewStr := RegExReplace( NewStr, "\bcape\s*verde\b" , "Cape Verde"  )
NewStr := RegExReplace( NewStr, "\bcapet(|ians?)\b" , "Capet$1"  )
NewStr := RegExReplace( NewStr, "\bcanad(a|i[ae]n[as]?)\b" , "Canad$1"  )
NewStr := RegExReplace( NewStr, "\bcameroon\b" , "Cameroon"  )
NewStr := RegExReplace( NewStr, "\bcamero?onia(ns?)\b" , "Cameroonia$1"  )
NewStr := RegExReplace( NewStr, "\bcambodi(a|ans?)\b" , "Cambodi$1"  )
NewStr := RegExReplace( NewStr, "\bcalifronia(n?)\b" , "California$2" )
NewStr := RegExReplace( NewStr, "\bcaliforni(an?s?)\b" , "Californi$1"  )
NewStr := RegExReplace( NewStr, "\bbyzant?ti(nes?|um)\b" , "Byzanti$1"  )
NewStr := RegExReplace( NewStr, "\bburundi(|ans?)\b" , "Burundi$1"  )
NewStr := RegExReplace( NewStr, "\bburm(a|ese)\b" , "Burm$1"  )
NewStr := RegExReplace( NewStr, "\bburkina\s*faso\b" , "Burkina Faso"  )
NewStr := RegExReplace( NewStr, "\bbulgar(|ian?s?)\b" , "Bulgar$1"  )
NewStr := RegExReplace( NewStr, "\bbuddah\b" , "Buddha" )
NewStr := RegExReplace( NewStr, "\bbrunei\b" , "Brunei"  )
NewStr := RegExReplace( NewStr, "\bbroadyl?\b" , "broadly"  )
NewStr := RegExReplace( NewStr, "\bbret?to(ns?)\b" , "Breto$1"  )
NewStr := RegExReplace( NewStr, "\bbrazil?(l|lians?)\b" , "Brazi$1"  )
NewStr := RegExReplace( NewStr, "\bbr(?:it?|ri|)t(ain|ons?|ish(|ers?|isms?)|icisms?)\b" , "Brit$1"  )
NewStr := RegExReplace( NewStr, "\bbotswana(n?s?)\b" , "Botswana$1"  )
NewStr := RegExReplace( NewStr, "\bbo(liv|sn)i(a|ans?)\b" , "Bo$1i$2"  )
NewStr := RegExReplace( NewStr, "\Bbilty\b" , "bility"  )
NewStr := RegExReplace( NewStr, "\bbhuta(n|nians?)\b" , "Bhuta$1"  )
NewStr := RegExReplace( NewStr, "\bbeni(n|nians?)\b" , "Beni$1"  )
NewStr := RegExReplace( NewStr, "\bbeliz(e|ians?)\b" , "Beliz$1"  )
NewStr := RegExReplace( NewStr, "\bbelgi(um|ans?)\b" , "Belgi$1"  )
NewStr := RegExReplace( NewStr, "\bbelaru(s|ss?ians?)\b" , "Belaru$1"  )
NewStr := RegExReplace( NewStr, "\bbasutoland\b" , "Basutoland"  )
NewStr := RegExReplace( NewStr, "\bbarbad(os|ians?)\b" , "Barbad$1"  )
NewStr := RegExReplace( NewStr, "\bBaout\b" , "About" )
NewStr := RegExReplace( NewStr, "\bbaout\b" , "about" )
NewStr := RegExReplace( NewStr, "\bbangl[ae]des(hi?)\b" , "Banglades$1"  )
NewStr := RegExReplace( NewStr, "\bbahrai(n|nians?)\b" , "Bahrai$1"  )
NewStr := RegExReplace( NewStr, "\bbahamm?(as?|i?ans?)\b" , "Baham$1"  )
NewStr := RegExReplace( NewStr, "\bbab[yi]lon(|ian?s?)\b" , "Babylon$1"  )
NewStr := RegExReplace( NewStr, "\bb(arb|erm)ud(i?an?s?)\b" , "B$1ud$2"  )
NewStr := RegExReplace( NewStr, "\bazerbaija(n|nis?)\b" , "Azerbaija$1"  )
NewStr := RegExReplace( NewStr, "\bazer(is?)\b" , "Azer$1"  )
NewStr := RegExReplace( NewStr, "\baustronesi(an?s?)\b" , "Austronesi$1"  )
NewStr := RegExReplace( NewStr, "\baustri(an?s?)\b" , "Austri$1"  )
NewStr := RegExReplace( NewStr, "\baustral((|as)ian?s?)\b" , "Austral$1"  )
NewStr := RegExReplace( NewStr, "\baugust\s+(\d{1,4})\b" , "August $1"  )
NewStr := RegExReplace( NewStr, "\batha(b|p)as(c|k)an(s?)\b" , "Atha$1as$2an$3"  )
NewStr := RegExReplace( NewStr, "\baslo\b" , "also"  )
NewStr := RegExReplace( NewStr, "\basia(|ns?|tic)\b" , "Asia$1"  )
NewStr := RegExReplace( NewStr, "\bascension island\b" , "Ascension Island"  )
NewStr := RegExReplace( NewStr, "\barub(an?s?)\b" , "Arub$1"  )
NewStr := RegExReplace( NewStr, "\barmeni(a|ans?)\b" , "Armeni$1"  )
NewStr := RegExReplace( NewStr, "\barkans(an?s?)\b" , "Arkans$1"  )
NewStr := RegExReplace( NewStr, "\barizon(a|i?ans?)\b" , "Arizon$1"  )
NewStr := RegExReplace( NewStr, "\bargentin(a|e(|an)s?)\b" , "Argentin$1"  )
NewStr := RegExReplace( NewStr, "\barchimedian\b" , "Archimedean" )
NewStr := RegExReplace( NewStr, "\bara(b(|i(an|st))s?|wak(|an)s?|ucan(|ian)s?|maic|ma?eans?|pahoe?s?|gonese)\b" , "Ara$1"  )
NewStr := RegExReplace( NewStr, "\baquir(es?|ed|ing)\b" , "acquir$1"  )
NewStr := RegExReplace( NewStr, "\bapri(ls?)\b" , "Apri$1"  )
NewStr := RegExReplace( NewStr, "\bapache(s?)\b" , "Apache$1"  )
NewStr := RegExReplace( NewStr, "\bantilles\b" , "Antilles"  )
NewStr := RegExReplace( NewStr, "\bantigu(an?s?)\b" , "Antigu$1"  )
NewStr := RegExReplace( NewStr, "\bAnsali(s|z)ation\b" , "Nasali$1ation" )
NewStr := RegExReplace( NewStr, "\bansali(s|z)ation\b" , "nasali$1ation" )
NewStr := RegExReplace( NewStr, "\banguil?l(an?s?)\b" , "Anguill$1"  )
NewStr := RegExReplace( NewStr, "\bangoli?(an?s?)\b" , "Angol$1"  )
NewStr := RegExReplace( NewStr, "\bandorr?(a|ans?)\b" , "Andorr$1"  )
NewStr := RegExReplace( NewStr, "\bAmking\b" , "Making" )
NewStr := RegExReplace( NewStr, "\bamking\b" , "making" )
NewStr := RegExReplace( NewStr, "\bamke\b" , "make" )
NewStr := RegExReplace( NewStr, "\bAmke\b" , "Make" )
NewStr := RegExReplace( NewStr, "\bAmkes\b" , "Makes" )
NewStr := RegExReplace( NewStr, "\bamkes\b" , "makes" )
NewStr := RegExReplace( NewStr, "\bameric(an?s?)\b" , "Americ$1"  )
NewStr := RegExReplace( NewStr, "\bameria\b" , "America" )
NewStr := RegExReplace( NewStr, "\bamde\b" , "made" )
NewStr := RegExReplace( NewStr, "\bAmde\b" , "Made" )
NewStr := RegExReplace( NewStr, "\balterior\b" , "ulterior"  )
NewStr := RegExReplace( NewStr, "\balse\b" , "else" )
NewStr := RegExReplace( NewStr, "\bAlse\b" , "Else" )
NewStr := RegExReplace( NewStr, "\balsation\b" , "Alsatian" )
NewStr := RegExReplace( NewStr, "\balgon(qu|k)(ia?ns?)\b" , "Algon$1$2"  )
NewStr := RegExReplace( NewStr, "\balgeri(e|an?s?)\b" , "Algeri$1"  )
NewStr := RegExReplace( NewStr, "\balbert(a|ans?)\b" , "Albert$1"  )
NewStr := RegExReplace( NewStr, "\balbani(a|ans?)\b" , "Albani$1"  )
NewStr := RegExReplace( NewStr, "\bala(bam|sk)(a|i?ans?)\b" , "Ala$1$2"  )
NewStr := RegExReplace( NewStr, "\bakrotiri\b" , "Akrotiri"  )
NewStr := RegExReplace( NewStr, "\bAhppen\b" , "Happen" )
NewStr := RegExReplace( NewStr, "\bahppen\b" , "happen" )
NewStr := RegExReplace( NewStr, "\bAh(?:ev|ve)\b" , "Have" )
NewStr := RegExReplace( NewStr, "\bah(?:ev|ve)\b" , "have" )
NewStr := RegExReplace( NewStr, "\bAggregious\b" , "Egregious" )
NewStr := RegExReplace( NewStr, "\baggregious\b" , "egregious" )
NewStr := RegExReplace( NewStr, "\bafric(an?s?)\b" , "Afric$1"  )
NewStr := RegExReplace( NewStr, "\bafghanistan\b" , "Afghanistan"  )
NewStr := RegExReplace( NewStr, "\baf?fgh?ani(s?)\b" , "Afghani$1"  )
NewStr := RegExReplace( NewStr, "\bAcn\b" , "Can" )
NewStr := RegExReplace( NewStr, "\bacn\b" , "can" )
NewStr := RegExReplace( NewStr, "\babkhazia\b" , "Abkhazia"  )
NewStr := RegExReplace( NewStr, "\bAbck\b" , "Back" )
NewStr := RegExReplace( NewStr, "\babck\b" , "back" )
NewStr := RegExReplace( NewStr, "\babbassid(e?s?)\b" , "Abbassid$1"  )
NewStr := RegExReplace( NewStr, "\ba(|nta)rc?ti(ca?)\b" , "A$1rcti$2"  )
NewStr := RegExReplace( NewStr, "\b([Vv])erter(ans?)\b" , "$1eter$2"  )
NewStr := RegExReplace( NewStr, "\b([Vv])er?ter[ae]?n[ae]r(y|ies|ians?)\b" , "$1eterinar$2"  )
NewStr := RegExReplace( NewStr, "\b([Uu]pc|[Cc]|[Bb]ec)om[em]ing\b" , "$1oming"  )
NewStr := RegExReplace( NewStr, "\b([Uu]n|[Ss]ub)con(?:[cs]ious|science)(|ly)\b" , "$1conscious$2"  )
NewStr := RegExReplace( NewStr, "\b([Uu]ng|G|g)ramatical(|ly|ity)\b" , "$1rammatical$2"  )
NewStr := RegExReplace( NewStr, "\b([Uu]ng|G|g)aurd(s?|ed|ing|edly|ians?)\b" , "$1uard$2"  )
NewStr := RegExReplace( NewStr, "\b([Uu]nf|F|f|[Mm]isf)or(?:etun[ai]|tuni|tuan)t(ely|es?)\b" , "$1ortunat$2"  )
NewStr := RegExReplace( NewStr, "\b([Uu]nf|F|f)ortun[ae]t(s?|ly|ness)\b" , "$1ortunate$2"  )
NewStr := RegExReplace( NewStr, "\b([Uu]nf|F|f)or(see(n|able|ing|r?s?)|(cast|tell|doom|stall|warn)(s?|ers?|ing)|(bod|clos)(es?|ing|ingly)|(court|castle|deck|face|finger|front|ground|hand|head|lock|brain|mast|name|sail|stay|noon|paw|leg|runner|quarter|taste|word)s?|foot|feet|most|told)\b" , "$1ore$2"  )
NewStr := RegExReplace( NewStr, "\b([Uu]nf|F|f)o(?:rtunat|urtunate)ley\b" , "$1ortunately" )
NewStr := RegExReplace( NewStr, "\b([Uu]ne|E|e)nthusais(ts?|tic|m)" , "$1nthusias$2"  )
NewStr := RegExReplace( NewStr, "\b([Uu]ne|E|e)mply(s?|e[edr]?s?|ing|ment|ab(le|ility))\b" , "$1mploy$2"  )
NewStr := RegExReplace( NewStr, "\b([Uu]na|A|a)companied\b" , "$1nccompanied" )
NewStr := RegExReplace( NewStr, "\b([Uu])niver(?:si)?al(|ly|ity|ness|is[tm]s?)\b" , "$1niversal$2"  )
NewStr := RegExReplace( NewStr, "\b([Tt]ri|[Mm]o)nomina(ls?)\b" , "$1nomia$2"  )
NewStr := RegExReplace( NewStr, "\b([Tt]h?)roug\b" , "$1rough"  )
NewStr := RegExReplace( NewStr, "\b([tT])heorectic(al|ally|s)?\b" , "$1heoretic$2"  )
NewStr := RegExReplace( NewStr, "\b([Tt])(wo|hree|en|welve|wenty|hirt(y|een)|housand)[ ]fold\b" , "$1$2fold"  )
NewStr := RegExReplace( NewStr, "\b([Ss][ou])(dd|ll)eness\b" , "$1$2enness"  )
NewStr := RegExReplace( NewStr, "\b([Ss]ub|[Cc]on|[RrDd]e|[Pp]ro)s(?:itut|titu)(es?|ed|ing|ions?)\b" , "$1stitut$2"  )
NewStr := RegExReplace( NewStr, "\b([Ss]ub|[Cc]on|[Ii]ncon)siquen(ces?|t(ial)?(ly)?)\b" , "$1sequen$2"  )
NewStr := RegExReplace( NewStr, "\b([Ss]ubc|C|c)(?:atag|ategi|taeg)or(y|ies|i[sz]ed|ical|ically)\b" , "$1ategor$2"  )
NewStr := RegExReplace( NewStr, "\b([Ss])ynthis([ie]s|i[sz]e[sdr]?)\b" , "$1ynthes$2"  )
NewStr := RegExReplace( NewStr, "\b([Ss])ynthas(is|i[sz]e[sdr]?)\b" , "$1ynthes$2"  )
NewStr := RegExReplace( NewStr, "\b([Ss])urveil(?:l?e|a)nce\b" , "$1urveillance"  )
NewStr := RegExReplace( NewStr, "\b([Ss])s?ytem(s?)\b" , "$1ystem$2"  )
NewStr := RegExReplace( NewStr, "\b([Ss])erver(e|ely|ity|al|ally|ance)\b" , "$1ever$2"  )
NewStr := RegExReplace( NewStr, "\b([SsHh]ill)yness\b" , "$1iness"  )
NewStr := RegExReplace( NewStr, "\b([Rr]e|[Oo]ut)so[ru]c(e[sd]?|ing|eful(|ly|ness))\b" , "$1sourc$2"  )
NewStr := RegExReplace( NewStr, "\b([Rr]e|[Ii]n)s(?:sur?re|ure|urru)ct(s?|ed|ing|ion(|ist)s?)\b" , "$1surrect$2"  )
NewStr := RegExReplace( NewStr, "\b([Rr]e|[Ee]x|[Ii]n|[Pp]er)c(?:epie|ipia)n(ts?|c[ey]|tly)\b" , "$1cipien$2"  )
NewStr := RegExReplace( NewStr, "\b([Rr]e|[Aa]s)sembel(ing|ance|ed|y)\b" , "$1sembl$2"  )
NewStr := RegExReplace( NewStr, "\b([Rr]es|[Ss])embe?lenc(es?)\b" , "$1emblanc$2"  )
NewStr := RegExReplace( NewStr, "\b([Rr]es|S|s|[Cc]ons|[Dd]is|[Rr]edis)tict(s?|e[dr]|ing|or|ness|est|ly|ive(|ly))\b" , "$1trict$2"  )
NewStr := RegExReplace( NewStr, "\b([Rr]ep|[DdMm]isp|[Ee]mp|P|p)lacment(s?)\b" , "$1lacement$2"  )
NewStr := RegExReplace( NewStr, "\b([Rr]eo|O|o)c(?:ur?|c?u)r(ing|ed|ences?|ent)\b" , "$1ccurr$2"  )
NewStr := RegExReplace( NewStr, "\b([Rr]eoc|[Oo]c|[Rr]e)curr?an(ces?|t|tly)\b" , "$1curren$2"  )
NewStr := RegExReplace( NewStr, "\b([Rr]em|[Dd]ism|M|m)emeber(s?|ed|ing)\b" , "$1ember$2"  )
NewStr := RegExReplace( NewStr, "\b([Rr]elat|[Cc]hamp|[Cc]ompan)ionsih?p(s?)\b" , "$1ionship$2"  )
NewStr := RegExReplace( NewStr, "\b([Rr]ed|D|d)is(?:rt?ic?t|t?ri[ct])(s?|ed|ing)\b" , "$1istrict$2"  )
NewStr := RegExReplace( NewStr, "\b([Rr]ec|C|c)hargable\b" , "$1hargeable"  )
NewStr := RegExReplace( NewStr, "\b([Rr]a|O|o)ther\s+then\b" , "$1ther than"  )
NewStr := RegExReplace( NewStr, "\b([Rr])ougly\b" , "$1oughly"  )
NewStr := RegExReplace( NewStr, "\b([RrSs]ec|[Pp]rec|[Cc]onc|[Ii]nterc|[Aa]ntec|c|C)eed(e[ds]?|ers?|ing|ents?)\b" , "$1ed$2"  )
NewStr := RegExReplace( NewStr, "\b([RrDd]e|[Pp]re|[Cc]on|[Dd]if|[Ii]n(?:|dif|ter)|[Tt]rans|[Cc]ircum|(?:[Ss]ub|[Tt]ele|[Vv]ideo)con|[Cc]ountertrans)f(?:era?|r[ae]|f?ere?r[ae])n(ce[drs]?|cing|ts?|tial(|ly))\b" , "$1feren$2"  )
NewStr := RegExReplace( NewStr, "\b([RrDd]e|[Pp]er|[Mm]isper|[Cc]on|[Mm]iscon|[Pp]recon|[Tt]rans)ce?iev(e[sd]?|ers?|ing|ership|ables?)\b" , "$1ceiv$2"  )
NewStr := RegExReplace( NewStr, "\b([RrDd]e|[Pp]er|[Mm]isper|[Cc]on|[Mm]iscon|[Pp]recon|[Tt]rans)c(?:ie|ei)ve(ing|ables?)" , "$1ceiv$2"  )
NewStr := RegExReplace( NewStr, "\b([RrDd]e|[Pp]er|[Ii]mper|[Cc]on)ci?e?v(abl(es?|y)|ed?|ers?|ing)\b" , "$1ceiv$2"  )
NewStr := RegExReplace( NewStr, "\b([RrDd]e|[Ii]n|[Ii]rre)duce?abl(e|y)\b" , "$1ducibl$2"  )
NewStr := RegExReplace( NewStr, "\b([RrDd]eg|G|g)en(?:ra|erat)t(e[ds]?|ors?|ing|ion(s?|al(ly)?))\b" , "$1enerat$2"  )
NewStr := RegExReplace( NewStr, "\b([Pp]r|[Uu]npr|[Aa]nt)ec(?:en|i)den(t(s?|ed(|ly|ness)|less|ial)|c[ey])\b" , "$1eceden$2"  )
NewStr := RegExReplace( NewStr, "\b([Pp]r|R|r|S|s)epe?r?at(ions?|or[ys]?|orily|ive(s?|ly))\b" , "$1eparat$2"  )
NewStr := RegExReplace( NewStr, "\b([Pp]ro|[Ii]m|[Pp]ree|E|e)minan(ces?|cy|t|tly)\b" , "$1minen$2"  )
NewStr := RegExReplace( NewStr, "\b([Pp]rophe)c(ied|iers?|ying)\b" , "$1s$2"  )
NewStr := RegExReplace( NewStr, "\b([Pp]re|[Ss]uspi|[Vv]i)scious(ly|ness)?\b" , "$1cious$2"  )
NewStr := RegExReplace( NewStr, "\b([Pp]re|[Aa]mbi)v(?:el[ea]|[ea]la)n(ts?|tly|ces?)\b" , "$1valen$2"  )
NewStr := RegExReplace( NewStr, "\b([Pp]res)(?:itig[ie]|i?teg[ie]|i?t[ie]ge|itgi|tig)ous(|ly)\b" , "$1tigious$2"  )
NewStr := RegExReplace( NewStr, "\b([Pp]er|[Rr]e|[EeOo]|[Tt]rans|[Aa]d|[Cc]om)mit(ed|edly|ing)\b" , "$1mitt$2"  )
NewStr := RegExReplace( NewStr, "\b([Pp]er|[Rr]e|[EeOo]|[Tt]rans|[Aa]d)mis[si](ons?|ve|vely|bl[ey])\b" , "$1missi$2"  )
NewStr := RegExReplace( NewStr, "\b([Pp]erse)rver(e[ds]?|ing)\b" , "$1ver$2"  )
NewStr := RegExReplace( NewStr, "\b([Pp]?r|R)esidental(|ly)\b" , "$1esidential$2"  )
NewStr := RegExReplace( NewStr, "\b([Pp]?r|R)(?:eis|si|es)di?en(ts?|c[ey]|[ct]ial|cies)\b" , "$1esiden$2"  )
NewStr := RegExReplace( NewStr, "\b([Pp])ratic(es?|ed|ing|al|ally)\b" , "$1ractic$2"  )
NewStr := RegExReplace( NewStr, "\b([Pp])ersu(e[sd]?|ers?|ing|its?|able|ant|ance)\b" , "$1ursu$2"  )
NewStr := RegExReplace( NewStr, "\b([Oo]v|[Uu]nd)erwea?lm(s?|ed|ing)\b" , "$1erwhelm$2"  )
NewStr := RegExReplace( NewStr, "\b([Oo]verw|[Uu]nderw|[Ll]ightw|[Mm]iddlew|[Hh]eavyw|[Ff]lyw|[Cc]ounterw|[Ww]elterw|[Hh]undredw|[Ww])ieght(s|less)?\b" , "$1eight$2" )
NewStr := RegExReplace( NewStr, "\b([Oo]ur|[Yy]our|[Tt]hem|[Tt]heir)sle?ves\b" , "$1selves"  )
NewStr := RegExReplace( NewStr, "\b([nµkMT])f\b" , "$1F"  )
NewStr := RegExReplace( NewStr, "\b([Mm]ulti[mb]|[MmBb]|[Tt]r)illionare(s+|sses)\b" , "$1illionaire$2"  )
NewStr := RegExReplace( NewStr, "\b([Mm]on|[Pp]ropri)(?:at[ae]|ete)r(y|ily|is[mt]s?|ies)\b" , "$1etar$2" )
NewStr := RegExReplace( NewStr, "\b([Mm]ono|[Dd]ia|[Ee]pi|[Aa]na|[Pp]ro)lou?g(e[sdr]?|ing)\b" , "$1logu$2"  )
NewStr := RegExReplace( NewStr, "\b([Mm]od|[Ss]pec|[Ii]dent|[Pp]ur|[Uu]n|[Nn]ot|[Qq]ual|[Mm]agn)(?:fici?ati?|ifcati?|ificiati?|ificat)on(s)?\b" , "$1ification$2"  )
NewStr := RegExReplace( NewStr, "\b([Mm]agni|[Bb]ene|[Mm]uni)f(?:ica|[ae]ce)n(t|tly|ce)\b" , "$1ficen$2"  )
NewStr := RegExReplace( NewStr, "\b([Ll]i[vk]e)lyho?o(ds?)\b" , "$1lihoo$2"  )
NewStr := RegExReplace( NewStr, "\b([Ll]ef|[Rr]igh)t\s*hande(d|rs?)\b" , "$1t-hande$2" )
NewStr := RegExReplace( NewStr, "\b([Ii]t|[Mm]y|[Yy]our|[Hh]i[ms]|[Hh]er|[Oo]ne|[Oo]ur|[Tt]hy)(?:sle?|esl)f\b" , "$1self"  )
NewStr := RegExReplace( NewStr, "\b([Ii]n|[Uu]l)(?:i?ti?mate?le|(i|t|iti)mate?le?)y\b" , "$1timately"  )
NewStr := RegExReplace( NewStr, "\b([Ii]n|[RrDd]e)cumban(ts?|cy|cies|tly)\b" , "$1cumben$2"  )
NewStr := RegExReplace( NewStr, "\b([Ii]n|[EeAa]f|[Cc]on)f(?:ule|lua)n(t|tly|ces?|tial(|ly))\b" , "$1fluen$2"  )
NewStr := RegExReplace( NewStr, "\b([Ii]n|[Dd]e)cres(e[drs]?|ing(|ly)|able)\b" , "$1creas$2"  )
NewStr := RegExReplace( NewStr, "\b([Ii]nt|[Pp]|[Rr]ep)roducton(s)?\b" , "$1roduction$2"  )
NewStr := RegExReplace( NewStr, "\b([Ii]nf|F|f)am(?:eous|ouse)(ly)?\b" , "$1amous$2"  )
NewStr := RegExReplace( NewStr, "\b([Ii]nd|D|d)ndepedence\b" , "$1ependence" )
NewStr := RegExReplace( NewStr, "\b([Ii]nd|D|d)ependendet\b" , "$1ependent" )
NewStr := RegExReplace( NewStr, "\b([Ii]nd|D|d)en?pen?dan(t|tly|ce)\b" , "$1ependen$2" )
NewStr := RegExReplace( NewStr, "\b([Ii]nd|D|d)(en|i)?pen?den(t|tly|ce)\b" , "$1ependen$2" )
NewStr := RegExReplace( NewStr, "\b([Ii]ndis|[Dd]is|[Rr]e|[Dd]isre|[Ii]m|[Cc]om|[Ii]ncom)put(?:e?i|ea)b(l[ey]|ility)\b" , "$1putab$2"  )
NewStr := RegExReplace( NewStr, "\b([Ii]ndis|[Dd]is|[Cc]om)pensib(l[ey]|ility|leness)\b" , "$1pensab$2"  )
NewStr := RegExReplace( NewStr, "\b([Ii]ll|L|l)(?:igit[ai]?m[ai]|egit[ae]m[ai]|[ei]git[ai]?mi)(te([sd]?|ly|ness)|cy|cies|ti(ng|ons?|[sz](e[sd]?|ing))|tors?)\b" , "$1egitima$2"  )
NewStr := RegExReplace( NewStr, "\b([Ii])nuend(o|oes)\b" , "$1nnuend$2"  )
NewStr := RegExReplace( NewStr, "\b([Ii])ns(?:titu|itut)(e[ds]?|ing|ions?)\b" , "$1nstitut$2"  )
NewStr := RegExReplace( NewStr, "\b([Ii])nfilitrat(es?|ed|ions?|ing|ors?)\b" , "$1nfiltrat$2"  )
NewStr := RegExReplace( NewStr, "\b([Ii])n(?:so\s+|\s+so)\s?far\b" , "$1nsofar"  )
NewStr := RegExReplace( NewStr, "\b([Hh]|[Ii]nh)abitent(s?)\b" , "$1abitant$2"  )
NewStr := RegExReplace( NewStr, "\b([Hh]uman|[Pp]aran|[Aa]n[de]r|[Cc]ub|[Tt](?:abl|or|yph)|[Ss]ter|[AaOo]v|[Dd]ev)iod(s?|ed|ing|ance|al)\b" , "$1oid$2"  )
NewStr := RegExReplace( NewStr, "\b([Hh]ead|[Hh]ind|[Ff]ore)quater(s?|ed|ing)\b" , "$1quarter$2"  )
NewStr := RegExReplace( NewStr, "\b([Hh]a)(s|d|ve)'?nt\b" , "$1$2n't"  )
NewStr := RegExReplace( NewStr, "\b([gr]|[Ff]org|[Bb]eg)ot(?:|tt)en\b" , "$1otten"  )
NewStr := RegExReplace( NewStr, "\b([Gg]en|[Nn]em)[ai]s([ie]s)\b" , "$1es$2"  )
NewStr := RegExReplace( NewStr, "\b([Ff]au|[Gg]ui)tl(y|ier|iest|iness)\b" , "$1lt$2"  )
NewStr := RegExReplace( NewStr, "\b([Ff])acil(?:[it][ae]|ite)t(e[ds]?|ing|ions?)\b" , "$1acilitat$2"  )
NewStr := RegExReplace( NewStr, "\b([Ff](our|ive|orty|ift(y|een))|[Ss](ix|even)(|teen|ty)|[Ee](ight(y?|een)|leven)|[Nn]ine(|teen|ty)|[Hh]undred)[ ]fold\b" , "$1fold"  )
NewStr := RegExReplace( NewStr, "\b([FfWwYy]|[Uu]n[fwy]|[Ww]indsh)eild(s?|y|ed|ing|ers?|able)\b" , "$1ield$2"  )
NewStr := RegExReplace( NewStr, "\b([Ee]x|[Ii]n|[Pp]ro)(?:hib|ibi)tion(s?|is[mt]s?)\b" , "$1hibition$2"  )
NewStr := RegExReplace( NewStr, "\b([Ee]x|[Ii]m)plic(t|tly)\b" , "$1plici$2"  )
NewStr := RegExReplace( NewStr, "\b([Ee]x|[Ii]m)plic(?:il?t|tl)y\b" , "$1plicitly"  )
NewStr := RegExReplace( NewStr, "\b([Ee]n|[Dd]is)co(?:urge?|urage|rage?)(e(d|r?s?)?|ing(|ly))\b" , "$1courag$2"  )
NewStr := RegExReplace( NewStr, "\b([Ee]n|[Dd]e)cyph(ers?)\b" , "$1ciph$2"  )
NewStr := RegExReplace( NewStr, "\b([Ee]n|[Dd]e)cryptiio(ns?)\b" , "$1cryptio$2"  )
NewStr := RegExReplace( NewStr, "\b([Ee]ndo|[Mm]ega|[Mm]ono)lithes\b" , "$1liths"  )
NewStr := RegExReplace( NewStr, "\b([Ee]m|[Uu]nem|[Rr]ede|[Dd]e)ployement(s?)\b" , "$1ployment$2"  )
NewStr := RegExReplace( NewStr, "\b([Ee])xcempt(s?|ed|ing|ions?)\b" , "$1xempt$2"  )
NewStr := RegExReplace( NewStr, "\b([Ee])x(?:au|hua)st(s?|ed|ing|ion|ive|ively)\b" , "$1xhaust$2"  )
NewStr := RegExReplace( NewStr, "\b([Dd]o|[Pp]redo|[Ll]u)min(?:e|ia)(nt|ntly|nce|te[sd]?|ting|tions?|tors?)\b" , "$1mina$2"  )
NewStr := RegExReplace( NewStr, "\b([Dd]isloy|[LlRr]oy|[Pp]en|[Mm]ayor|[Aa]dmir)alit(y|ies)" , "$1alt$2"  )
NewStr := RegExReplace( NewStr, "\b([Dd]il)l?e(?:nm|mn|mmm+)a(s)?\b" , "$1emma$2"  )
NewStr := RegExReplace( NewStr, "\b([Dd]e|[Tt]ran|[Cc]onde|A|a)c[cs]?end(a|e)n[td](s?)\b" , "$1scend$2nt$3"  )
NewStr := RegExReplace( NewStr, "\b([Dd]e|[Nn]onde|[Cc]on)ductab(l[ey]|ility)\b" , "$1ductib$2"  )
NewStr := RegExReplace( NewStr, "\b([Dd]e|[Ii]n|[Tt]rans|[Cc]on|[Pp]re)f(?:e|fer?)r(ing|e[dr]|als?)\b" , "$1ferr$2"  )
NewStr := RegExReplace( NewStr, "\b([Dd]e|[Ii]n|[Pp]r[eo]|[Cc]on|[Cc]ircum|[Ss]ub)scr?ip(?:t|iti)(ons?|ve|vely)\b" , "$1scripti$2"  )
NewStr := RegExReplace( NewStr, "\b([Dd]e|[Cc]om)patment(s?|al(|ly|i[sz]e[ds]?))\b" , "$1partment$2"  )
NewStr := RegExReplace( NewStr, "\b([Dd]e|nu)tr[ea]men(ts?|tal)\b" , "$1trimen$2"  )
NewStr := RegExReplace( NewStr, "\b([Dd]ec|[Aa]ss)idi?ous(|ly)\b" , "$1iduous$2"  )
NewStr := RegExReplace( NewStr, "\b([DdRr])emo(?:stra|nstar?)t(e[sd]?|ing|ions?|ive(s?|ly)|ors?)\b" , "$1emonstrat$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]urr|[Rr]ec|[Ss]il|[Ii]nt|[Ee]vid|[Pp]res)enlty\b" , "$1ently"  )
NewStr := RegExReplace( NewStr, "\b([Cc]rue|[LlRr]oya|[Nn]ove|[Pp]ena|[Ss]pecia)tl(y|ies)\b" , "$1lt$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]o|I|i|[DdMm]isi|[IiUu]nco|[Rr]eco)mf(i|o)rm(s?|ed|ing|ati(ons?|ve(ly)?)|abl[ey]|(|al)(|ity))\b" , "$1nf$2rm$3"  )
NewStr := RegExReplace( NewStr, "\b([Cc]o|I|i)nfict(s?|ing(|ly)|ed)\b" , "$1flict$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]osmo|[Mm]etro|[Nn]ea)polit(?:ia|ai)n(s?|ism)\b" , "$1politan$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]or|[Dd]i|[Cc]odi)recte(rs?)\b" , "$1recto$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]orr|[Rr])(?:is|e)(?:po[ns]d|spon)(s?|ed|ing(|ly)|ents?|enc(es?|y))\b" , "$1espond$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]on|[Rr]e|[Rr]edi)stict(s|ed|ing|ions?|ive|ively)?\b" , "$1strict$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]on|[Rr]ec)cur(?:e|ra)n(t|tly|ces?)\b" , "$1curren$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]on|[Pp]re|[Nn]e|[Oo]mni|[Bb]io|[Gg]eo|[Nn]euro|[Pp]seudo)[cs]ien(t|tly|ces?|tious|tiously|tific|tifically)\b" , "$1scien$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]on|[Pp]re)tendo(rs?)\b" , "$1tende$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]on|[Ii]ncon|[Ss]ub)squen(ces?|t|tly|tial(|ly))\b" , "$1sequen$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]on|[Ii]ncon|[Ss]ub)seqent((|ial)(|ly))\b" , "$1sequent$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]on|[Ii]ncon|[Ii]n|[Ss]ub)sistan(t|tly|c[ey]|cies)\b" , "$1sisten$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]on|[Ee]x|[Ii]n|[Oo]c|[Pp]re|[Ss]e)culd(es?|ed|ing)\b" , "$1clud$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]on|[Ee]x)temporan(?:[eou]{1,2})(s|sly)\b" , "$1temporaneou$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]on|[Dd]i|[Pp]er|[Ss]ub)vertio(ns?)\b" , "$1versio$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]on|[Dd]is|[Aa]t)tribute(rs?)\b" , "$1tributo$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]ont|T|t)emp(?:ora|erar)(y|ily)" , "$1emporar$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]ons|[Gg]ra|[Jj]udi|[Ll]us|[Mm]ali|[Pp]re(?:|co|da)|[Ss]p[ae]|[Ss]uspi|[Vv][eo]ra|[Vv]i)c(?:i?oui|oiu|iuo)s(ly|ness)?\b" , "$1cious$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]om|[Pp]ro)puls[ae]r(y|ies)\b" , "$1pulsor$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]om|[Dd]is)pensantio(ns?|nal)\b" , "$1pensatio$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]om|[Dd]e|[Ex]x|[Oo]p|[Pp]ro)ponan(ts?)\b" , "$1ponen$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]oi|I|i)ncedental+y\b" , "$1ncidentally"  )
NewStr := RegExReplace( NewStr, "\b([Cc]er|[Bb]eau?|[FfMm]or|[Jj]us|[Nn]o|[Rr]a|[Rr]ec|[Tt]es|[Ii]den|[Qq]uan)ta?fi(e[ds]|abl[ey]|cates?|cations?)\b" , "$1tifi$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]ata)lou?g(es?)\b" , "$1logu$2"  )
NewStr := RegExReplace( NewStr, "\b([Cc]ar|[Oo]m)niv[^o]rous\b" , "$1nivorous"  )
NewStr := RegExReplace( NewStr, "\b([Cc]are|[Uu]se|[Pp]eace|[Ee]vent|([Uu]ns|[Ss])uccess)full\b" , "$1ful" )
NewStr := RegExReplace( NewStr, "\b([Cc])ontary\b" , "$1ontrary"  )
NewStr := RegExReplace( NewStr, "\b([Cc])hor?nicl(e[ds]?|ers?|ing)\b" , "$1hronicl$2"  )
NewStr := RegExReplace( NewStr, "\b([CcWw]|[Ss]h)ould'?nt\b" , "$1ouldn't"  )
NewStr := RegExReplace( NewStr, "\b([CcVv]a|[CcFf]u|[Dd]eli|[Hh]ila|[Ii]llust|[Ii]nju|[Mm]yste|[Nn]oto|[Pp]reca|[Ss]e|[Vv]icto)r(?:i?oui|oiu|iuo)s(ly|ness)?\b" , "$1rious$2"  )
NewStr := RegExReplace( NewStr, "\b([Bb]oy|[Gg]irl|[Bb]e)freind(s?)\b" , "$1friend$2"  )
NewStr := RegExReplace( NewStr, "\b([Bb]ody|[Hh]ome|[Ss]hip)[d\-]build(ers?|ing)\b" , "$1build$2"  )
NewStr := RegExReplace( NewStr, "\b([Bb]i|[Tt]ri|[Uu]ni|[Mm]otor|[Rr]e|[Ee]pi)cylc?(e[ds]?|(er|ist|able)s?|ing|ic)\b" , "$1cycl$2"  )
NewStr := RegExReplace( NewStr, "\b([Bb]e|a|A)musemn(ts?)\b" , "$1musemen$2"  )
NewStr := RegExReplace( NewStr, "\b([Bb](?:ack|attle|elow)|[Ff]ore|[Aa]bove|[Uu]nder|[Cc]amp)(?:gorun|roun|grou)(ds?)\b" , "$1groun$2"  )
NewStr := RegExReplace( NewStr, "\b([BbCcFfMmRrTtWw]a|([BbHhLlVv]|[Ss]tr)i)keing\b" , "$1king"  )
NewStr := RegExReplace( NewStr, "\B([b-z])sih(|ing(|ly)|e[ds]|ers?)\b" , "$1ish$2"  )
NewStr := RegExReplace( NewStr, "\b([Aa]|[Aa]ir|[Ii]n|[Oo]ut|[Bb]ack|[Mm]id|[Dd]own|[Uu]p|[Bb]attle|[Ss]pring|[Cc]an|[Mm]ine|[Mm]a(?:ns|[ks]e)|[Ss]cho|[Bb][lr]oo[km]|[Cc]hester)feild(s?|ers?)\b" , "$1field$2"  )
NewStr := RegExReplace( NewStr, "\b([Aa][lm]|[LlSs]|[Ww]r)omg\b" , "$1ong"  )
NewStr := RegExReplace( NewStr, "\b([Aa][du]d|[Cc]oal|[Dd]emol|[Ee]d|(?:[Ee]x|[Ii]n|[Pp]ro)hib|[Tt]rad|[Tt]u)it(?:oi?|ioi)n(s?|al|ally|is[mt]s?)\b" , "$1ition$2" )
NewStr := RegExReplace( NewStr, "\b([Aa]p|[Dd]e)pr(?:icai|ie?cia|ecai|eacia)(te[sd]?|ti(ng|on|ve)|bl[ey]|tory?)\b" , "$1precia$2"  )
NewStr := RegExReplace( NewStr, "\b([Aa]n|[Pp]ro|[Mm]ispro|[DdRr]e)(?:nou|oun)c(ed?|ing|e(r?|ment)s?)\b" , "$1nounc$2"  )
NewStr := RegExReplace( NewStr, "\b([Aa]n|[DdRr]e|[Pp]ro|[Mm]ispro)nuo?nc(es?|ed|ing|ements?)\b" , "$1nounc$2"  )
NewStr := RegExReplace( NewStr, "\b([Aa]ny|[Nn]o|[Ss]ome)hwere\b" , "$1where"  )
NewStr := RegExReplace( NewStr, "\b([Aa]nti|[Hh]ypo|[Pp]aren)th[ai]s([ie]s|i[sz]e[sdr]?)\b" , "$1thes$2"  )
NewStr := RegExReplace( NewStr, "\b([Aa]mbi|[Cc]a[pu]|[Ff][ai]cti|[Ii]nfec|[Nn]utri|[Rr]epeti)t(?:i?oui|oiu|iuo)s(ly|ness)?\b" , "$1tious$2"  )
NewStr := RegExReplace( NewStr, "\b([Aa]d|[Cc]o|[Ii]n|[Ii]nco)hea?ran(ts?|tly|ce)\b" , "$1heren$2"  )
NewStr := RegExReplace( NewStr, "\b([Aa]c|[Ii]n|[Rr]e)quis(?:tio|itoi?)n(s?)\b" , "$1quisition$2"  )
NewStr := RegExReplace( NewStr, "\b([Aa]c|[Dd]e)c?ellerat(e[sd]?|ing|ion|or[sy]?|ive)\b" , "$1celerat$2"  )
NewStr := RegExReplace( NewStr, "\b([Aa]c|[DdRr]e|[Dd]is|[Ee]x|[Pp]ro)cliam(s?|ed|ers?|ing)\b" , "$1claim$2"  )
NewStr := RegExReplace( NewStr, "\b([Aa]b|[Rr]e)solutly\b" , "$1solutely"  )
NewStr := RegExReplace( NewStr, "\b([AaSs]|[Ii]na)uspi[st]io(ns?|us|usly)\b" , "$1uspicio$2"  )
NewStr := RegExReplace( NewStr, "\b([AaIi])lus(ions?|ive(|ly)|ory)\b" , "$1llus$2"  )
NewStr := RegExReplace( NewStr, "\b([123]?\d|[123])\s+august\b" , "$1 August"  )
NewStr := RegExReplace( NewStr, "\b([0123]?\d)\s+march\b" , "$1 March"  )
NewStr := RegExReplace( NewStr, "\b([-0-9]|\s)kw\b" , "$1kW"  )
NewStr := RegExReplace( NewStr, "\b([-0-9]|\s)kj\b" , "$1kJ"  )
NewStr := RegExReplace( NewStr, "\b([µmMGT])w\b" , "$1W"  )
NewStr := RegExReplace( NewStr, "\b([µmMGT])j\b" , "$1J"  )
NewStr := RegExReplace( NewStr, "\b([µmkMGT]|[-0-9]+|\s)h[zZ]\b" , "$1Hz"  )
NewStr := RegExReplace( NewStr, "\b([µmkMGT])w[bB]\b" , "$1Wb"  )
NewStr := RegExReplace( NewStr, "\b([µkMGT])p[aA]\b" , "$1Pa"  )
NewStr := RegExReplace( NewStr, "\b(Z|z)ee+(bras?)\b" , "$1e$2"  )
NewStr := RegExReplace( NewStr, "\b(Y|y)ouse[lf]f\b" , "$1ourself" )
NewStr := RegExReplace( NewStr, "\b(Y|y)ou;?(d|[rv]e)\b" , "$1ou'$2" )
NewStr := RegExReplace( NewStr, "\b(Y|y)era(s)?\b" , "$1ear$2"  )
NewStr := RegExReplace( NewStr, "\b(Y|y)elow\b" , "$1ellow" )
NewStr := RegExReplace( NewStr, "\b(Y|y)at?ch(s|ing)?\b" , "$1acht$2" )
NewStr := RegExReplace( NewStr, "\b(Y|y)a'll\b" , "$1'all"  )
NewStr := RegExReplace( NewStr, "\b(Y|y)(tou|uo|oiu)\b" , "$1ou"  )
NewStr := RegExReplace( NewStr, "\b(Y|y)(aers|easr|ersa)\b" , "$1ears"  )
NewStr := RegExReplace( NewStr, "\b(Y|y)(?:uor|oru)\b" , "$1our" )
NewStr := RegExReplace( NewStr, "\b(X|x)enophoby\b" , "$1enophobia" )
NewStr := RegExReplace( NewStr, "\b(W|w|[Uu]nw)rok(ed|ing|abl[ey]|ability|m[ae]n(|ship|like)|ingm[ae]n|bench|fare|(|er|shop|room|out|(sp|pl)ace|table|ho[ru]se|book|boat|load|a?day|flow|folk|up|week|aholic)s?)\b" , "$1ork$2"  )
NewStr := RegExReplace( NewStr, "\b(W|w|[Uu]nw)ar(?:re|a)nt((|ee|[eo]r)s?|ed|ing|y|ies)\b" , "$1arrant$2"  )
NewStr := RegExReplace( NewStr, "\b(W|w|D|d)o'nt\b" , "$1on't"  )
NewStr := RegExReplace( NewStr, "\b(W|w)ya(s)?\b" , "$1ay$2" )
NewStr := RegExReplace( NewStr, "\b(W|w)roet\b" , "$1rote"  )
NewStr := RegExReplace( NewStr, "\b(W|w)rod(s)?\b" , "$1ord$1" )
NewStr := RegExReplace( NewStr, "\b(W|w)riten\b" , "$1ritten"  )
NewStr := RegExReplace( NewStr, "\b(W|w)riet(s)?\b" , "$1rite$2" )
NewStr := RegExReplace( NewStr, "\b(W|w)resters\b" , "$1restlers" )
NewStr := RegExReplace( NewStr, "\b(W|w)oudln'?t\b" , "$1ouldn't" )
NewStr := RegExReplace( NewStr, "\b(W|w)orthwil(e|eness)\b" , "$1orthwhil$2"  )
NewStr := RegExReplace( NewStr, "\b(W|w)orstened\b" , "$1orsened" )
NewStr := RegExReplace( NewStr, "\b(W|w)orls\b" , "$1orld" )
NewStr := RegExReplace( NewStr, "\b(W|w)orkststion\b" , "$1orkstation" )
NewStr := RegExReplace( NewStr, "\b(W|w)ord?lwide\b" , "$1orldwide"  )
NewStr := RegExReplace( NewStr, "\b(W|w)onderfull\b" , "$1onderful" )
NewStr := RegExReplace( NewStr, "\b(W|w)omens\b" , "$1omen's" )
NewStr := RegExReplace( NewStr, "\b(W|w)okring\b" , "$1orking" )
NewStr := RegExReplace( NewStr, "\b(W|w)okr(ers?|ed|ing)?\b" , "$1ork$2" )
NewStr := RegExReplace( NewStr, "\b(W|w)oh\b" , "$1ho" )
NewStr := RegExReplace( NewStr, "\b(W|w)ohle(s)?\b" , "$1hole$2" )
NewStr := RegExReplace( NewStr, "\b(W|w)iull\b" , "$1ill"  )
NewStr := RegExReplace( NewStr, "\b(W|w)ith\s+with\b" , "$1ith"  )
NewStr := RegExReplace( NewStr, "\b(W|w)iththe" , "$1ith the"  )
NewStr := RegExReplace( NewStr, "\b(W|w)ithing\b" , "$1ithin"  )
NewStr := RegExReplace( NewStr, "\b(W|w)ithdrawl(s?)\b" , "$1ithdrawal$2"  )
NewStr := RegExReplace( NewStr, "\b(W|w)ith([oe])ld(s?|ing)\b" , "$1ithh$2ld$3"  )
NewStr := RegExReplace( NewStr, "\b(W|w)intery\b" , "$1intry" )
NewStr := RegExReplace( NewStr, "\b(W|w)indoes\b" , "$1indows" )
NewStr := RegExReplace( NewStr, "\b(W|w)illingless\b" , "$1illingness" )
NewStr := RegExReplace( NewStr, "\b(W|w)ierd(|er|est|l?y|ness|o|oes|ies?)\b" , "$1eird$2"  )
NewStr := RegExReplace( NewStr, "\b(W|w)iegh\b" , "$1eigh" )
NewStr := RegExReplace( NewStr, "\b(W|w)ief\b" , "$1ife" )
NewStr := RegExReplace( NewStr, "\b(W|w)idesread\b" , "$1idespread" )
NewStr := RegExReplace( NewStr, "\b(W|w)hther\b" , "$1hether" )
NewStr := RegExReplace( NewStr, "\b(W|w)holel?y\b" , "$1holly"  )
NewStr := RegExReplace( NewStr, "\b(W|w)ho;s\b" , "$1ho's" )
NewStr := RegExReplace( NewStr, "\b(W|w)herupon\b" , "$1hereupon"  )
NewStr := RegExReplace( NewStr, "\b(W|w)hereever\b" , "$1herever" )
NewStr := RegExReplace( NewStr, "\b(W|w)here;s\b" , "$1here's" )
NewStr := RegExReplace( NewStr, "\b(W|w)her(?:as|ease)\b" , "$1hereas" )
NewStr := RegExReplace( NewStr, "\b(W|w)hen\s+when\b" , "$1hen"  )
NewStr := RegExReplace( NewStr, "\b(W|w)hat;s\b" , "$1hat's" )
NewStr := RegExReplace( NewStr, "\b(W|w)h(?:ihc|cih|ic)\b" , "$1hich"  )
NewStr := RegExReplace( NewStr, "\b(W|w)ether\b" , "$1eather" )
NewStr := RegExReplace( NewStr, "\b(W|w)erre\b" , "$1ere" )
NewStr := RegExReplace( NewStr, "\b(W|w)ern'?t\b" , "$1eren't" )
NewStr := RegExReplace( NewStr, "\b(W|w)ere'?nt\b" , "$1eren't"  )
NewStr := RegExReplace( NewStr, "\b(W|w)ebstite(s)?\b" , "$1ebsite$2"  )
NewStr := RegExReplace( NewStr, "\b(W|w)e?hn\b" , "$1hen" )
NewStr := RegExReplace( NewStr, "\b(W|w)e;d\b" , "$1e'd" )
NewStr := RegExReplace( NewStr, "\b(W|w)ayword\b" , "$1ayward" )
NewStr := RegExReplace( NewStr, "\b(W|w)as'?nt\b" , "$1asn't"  )
NewStr := RegExReplace( NewStr, "\b(W|w)arrrior(s)?\b" , "$1arrior$2" )
NewStr := RegExReplace( NewStr, "\b(W|w)arrantee\b" , "$1arranty" )
NewStr := RegExReplace( NewStr, "\b(W|w)ardobe\b" , "$1ardrobe" )
NewStr := RegExReplace( NewStr, "\b(W|w)(?:uould|oudl)\b" , "$1ould" )
NewStr := RegExReplace( NewStr, "\b(W|w)(?:irt?|rit)t(es?|ing|ten)\b" , "$1rit$2"  )
NewStr := RegExReplace( NewStr, "\b(W|w)(?:ih|hl)ch\b" , "$1hich" )
NewStr := RegExReplace( NewStr, "\b(W|w)(?:ih[nt]?|hith|itht|tit?h)\b" , "$1ith" )
NewStr := RegExReplace( NewStr, "\b(W|w)(?:her|eh)re\b" , "$1here" )
NewStr := RegExReplace( NewStr, "\b(W|w)(?:her[ae]|erea)bouts\b" , "$1hereabouts"  )
NewStr := RegExReplace( NewStr, "\b(W|w)(?:ea|as)s\b" , "$1as" )
NewStr := RegExReplace( NewStr, "\b(W|w)(?:eapon[ae]|[ae]pon)(s?|ry|i[sz]ed?)\b" , "$1eapon$2"  )
NewStr := RegExReplace( NewStr, "\b(W|w)(?:atn|hant|nat)(|s|ed|ing)\b" , "$1ant$2"  )
NewStr := RegExReplace( NewStr, "\b(W|w)(?:aht|hta)\b" , "$1hat" )
NewStr := RegExReplace( NewStr, "\b(V|v|[Ss]uperv)il(?:l?ia|ai)n(s?|y|ous(|ly|ness)|ess)\b" , "$1illain$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v|[Rr]ev|[Pp]rev|[Oo]verv)eiw(s?|ed|ing|ers?|able)\b" , "$1iew$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v|[Ii]nv|[Dd]iv|[Ii]ndiv)isab(l[ey]|ility)\b" , "$1isib$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v|[Ii]nv)ol[oe]ntary\b" , "$1oluntary"  )
NewStr := RegExReplace( NewStr, "\b(V|v|[Ii]nv)alue?bl(es?|y)\b" , "$1aluabl$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v|[Cc]onv|[Dd]iv|[Ii]nv|[Oo]bv|[Pp]erv|[Rr]ev|[Ss]ubv)eriso(ns?)\b" , "$1ersio$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v)ulnerible\b" , "$1ulnerable" )
NewStr := RegExReplace( NewStr, "\b(V|v)ulnerablility\b" , "$1ulnerability" )
NewStr := RegExReplace( NewStr, "\b(V|v)omitt(s|e[dr]|ing)?\b" , "$1omit$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v)oleyball\b" , "$1olleyball" )
NewStr := RegExReplace( NewStr, "\b(V|v)ol?lcanoe\b" , "$1olcano"  )
NewStr := RegExReplace( NewStr, "\b(V|v)ol(?:ante?|unt|ou?nte?|l[ou]nte?)er(|ed|ing|s)\b" , "$1olunteer$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v)itories\b" , "$1ictories" )
NewStr := RegExReplace( NewStr, "\b(V|v)is(?:is)?t(ing|ed|ors?)\b" , "$1isit$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v)irutal\b" , "$1irtual" )
NewStr := RegExReplace( NewStr, "\b(V|v)iolentce\b" , "$1iolence" )
NewStr := RegExReplace( NewStr, "\b(V|v)illification\b" , "$1ilification" )
NewStr := RegExReplace( NewStr, "\b(V|v)il(?:li|l?a)f(y|ie[sd]|ying)\b" , "$1ilif$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v)ig(?:[ae]?la|[iea]le)n(ce|t|tly|tes?)\b" , "$1igilan$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v)ig(?:erou?|arou?|irou?|oro|ourou?)s(|ly|ness)\b" , "$1igorous$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v)icint(y|ies)\b" , "$1icinit$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v)ersit(?:ila|li)ty\b" , "$1ersatility" )
NewStr := RegExReplace( NewStr, "\b(V|v)ermillion\b" , "$1ermilion" )
NewStr := RegExReplace( NewStr, "\b(V|v)era?ficatio(ns?)\b" , "$1erificatio$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v)en[ae]mous\b" , "$1enomous"  )
NewStr := RegExReplace( NewStr, "\b(V|v)eng[ea]nce\b" , "$1engeance"  )
NewStr := RegExReplace( NewStr, "\b(V|v)ehicule\b" , "$1ehicle" )
NewStr := RegExReplace( NewStr, "\b(V|v)eg[ai]?tabl(es?)\b" , "$1egetabl$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v)eget(?:ter?|er)rian(s?|ism)\b" , "$1egetarian$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v)egatarian\b" , "$1egetarian" )
NewStr := RegExReplace( NewStr, "\b(V|v)asall\b" , "$1assal" )
NewStr := RegExReplace( NewStr, "\b(V|v)asalls\b" , "$1assals" )
NewStr := RegExReplace( NewStr, "\b(V|v)ar[ia]+ties\b" , "$1arieties"  )
NewStr := RegExReplace( NewStr, "\b(V|v)arous\b" , "$1arious" )
NewStr := RegExReplace( NewStr, "\b(V|v)aring\b" , "$1arying" )
NewStr := RegExReplace( NewStr, "\b(V|v)arien(ts?|ce)\b" , "$1arian$2" )
NewStr := RegExReplace( NewStr, "\b(V|v)aration(s)?\b" , "$1ariation$2" )
NewStr := RegExReplace( NewStr, "\b(V|v)alueable\b" , "$1aluable" )
NewStr := RegExReplace( NewStr, "\b(V|v)aletta\b" , "$1alletta" )
NewStr := RegExReplace( NewStr, "\b(V|v)ailidty\b" , "$1alidity" )
NewStr := RegExReplace( NewStr, "\b(V|v)aieties\b" , "$1arieties" )
NewStr := RegExReplace( NewStr, "\b(V|v)aguaries\b" , "$1agaries" )
NewStr := RegExReplace( NewStr, "\b(V|v)accume\b" , "$1acuum" )
NewStr := RegExReplace( NewStr, "\b(V|v)ac(?:cu|c?)um(s?|ed|ing)\b" , "$1acuum$2"  )
NewStr := RegExReplace( NewStr, "\b(V|v)(?:riet|reit|arit|arie)y\b" , "$1ariety" )
NewStr := RegExReplace( NewStr, "\b(V|v)(?:eyr|rey|yer|yre)\b" , "$1ery"  )
NewStr := RegExReplace( NewStr, "\b(V|v)(?:a|in)cinit(y|ies)\b" , "$1icinit$2"  )
NewStr := RegExReplace( NewStr, "\b(U|u|[Uu]nu)s(?:s+ual?|s*aul?|al|ua|us[au]l)(ly)?\b" , "$1sual$2"  )
NewStr := RegExReplace( NewStr, "\b(U|u|[Mm]isu)ndertand(s?|ing|abl[ey])\b" , "$1nderstand$2"  )
NewStr := RegExReplace( NewStr, "\b(U|u|[DdMm]isu)is(e[sd]?)\b" , "$1s$2"  )
NewStr := RegExReplace( NewStr, "\b(U|u)seing\b" , "$1sing"  )
NewStr := RegExReplace( NewStr, "\b(U|u)sefull\b" , "$1seful"  )
NewStr := RegExReplace( NewStr, "\b(U|u)seage\b" , "$1sage" )
NewStr := RegExReplace( NewStr, "\b(U|u)pto\b" , "$1p to"  )
NewStr := RegExReplace( NewStr, "\b(U|u)pgradded\b" , "$1pgraded" )
NewStr := RegExReplace( NewStr, "\b(U|u)nw(?:ei|ie)ldly\b" , "$1nwieldy"  )
NewStr := RegExReplace( NewStr, "\b(U|u)nus[eu]able\b" , "$1nusable" )
NewStr := RegExReplace( NewStr, "\b(U|u)nrepet[ae]nt\b" , "$1nrepentant" )
NewStr := RegExReplace( NewStr, "\b(U|u)npleasent(ly)?\b" , "$1npleasant$2" )
NewStr := RegExReplace( NewStr, "\b(U|u)notice(d|abl[ey])\b" , "$1nnotice$2"  )
NewStr := RegExReplace( NewStr, "\b(U|u)nmanouverable\b" , "$1nmanoeuvrable" )
NewStr := RegExReplace( NewStr, "\b(U|u)nlikey\b" , "$1nlikely" )
NewStr := RegExReplace( NewStr, "\b(U|u)nliek\b" , "$1nlike" )
NewStr := RegExReplace( NewStr, "\b(U|u)nlaod(s?|ed|ing)\b" , "$1nload$2" )  
NewStr := RegExReplace( NewStr, "\b(U|u)nkown\b" , "$1nknown"  )
NewStr := RegExReplace( NewStr, "\b(U|u)niveri?s(?:iti|e?ti?)(y|ies)\b" , "$1niversit$2"  )
NewStr := RegExReplace( NewStr, "\b(U|u)nivercit(y|ies)\b" , "$1niversit$2"  )
NewStr := RegExReplace( NewStr, "\b(U|u)ninterr?uped\b" , "$1ninterrupted" )
NewStr := RegExReplace( NewStr, "\b(U|u)nihabited\b" , "$1ninhabited" )
NewStr := RegExReplace( NewStr, "\b(U|u)nforgiveable\b" , "$1nforgivable" )
NewStr := RegExReplace( NewStr, "\b(U|u)nforgetable\b" , "$1nforgettable" )
NewStr := RegExReplace( NewStr, "\b(U|u)ndoubtely\b" , "$1ndoubtedly" )
NewStr := RegExReplace( NewStr, "\b(U|u)ndetecable\b" , "$1ndetectable" )
NewStr := RegExReplace( NewStr, "\b(U|u)nderstoon\b" , "$1nderstood" )
NewStr := RegExReplace( NewStr, "\b(U|u)ncontitutional\b" , "$1nconstitutional" )
NewStr := RegExReplace( NewStr, "\b(U|u)ncompetive\b" , "$1ncompetitive" )
NewStr := RegExReplace( NewStr, "\b(U|u)nchall?engable\b" , "$1nchallengeable" )
NewStr := RegExReplace( NewStr, "\b(U|u)nbeleivable\b" , "$1nbelievable" )
NewStr := RegExReplace( NewStr, "\b(U|u)nballance\b" , "$1nbalance" )
NewStr := RegExReplace( NewStr, "\b(U|u)nathorised\b" , "$1nauthorized" )
NewStr := RegExReplace( NewStr, "\b(U|u)nahppy\b" , "$1nhappy" )
NewStr := RegExReplace( NewStr, "\b(U|u)na(?:mi|ny)[nm]ou(s|sly)\b" , "$1nanimou$2"  )
NewStr := RegExReplace( NewStr, "\b(U|u)n(?:[ia]latre|alater)a(l|lly)\b" , "$1nilatera$2"  )
NewStr := RegExReplace( NewStr, "\b(U|u)n(?:n?ec(?:ces?|e)|eces)sar(y|ily)\b" , "$1nnecessar$2"  )
NewStr := RegExReplace( NewStr, "\b(U|u)n(?:ive(?:ri?si?|si)|viersi)t(y|ies)\b" , "$1niversit$2"  )
NewStr := RegExReplace( NewStr, "\b(U|u)n(?:it|til)l\b" , "$1ntil"  )
NewStr := RegExReplace( NewStr, "\b(U|u)m(d|[nt][b-z]|v)\B" , "$1n$2"  )
NewStr := RegExReplace( NewStr, "\b(U|u)ltimely\b" , "$1ltimately" )
NewStr := RegExReplace( NewStr, "\b(U|u)kelele\b" , "$1kulele" )
NewStr := RegExReplace( NewStr, "\b(U|u)biquitious(|ly|ness)\b" , "$1biquitous$2"  )
NewStr := RegExReplace( NewStr, "\b(U|u)(?:dn|nd)erstnad\b" , "$1nderstand" )
NewStr := RegExReplace( NewStr, "\b(U|u)(?:dner|ndre)(stand|ground)\b" , "$1nder$2" )
NewStr := RegExReplace( NewStr, "\b(T|[Aa]?t)(?:ipic|ypci)al(|ly|ity|ness)\b" , "$1ypical$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t|[Uu]nt)ranslateable\b" , "$1ranslatable"  )
NewStr := RegExReplace( NewStr, "\b(T|t|[Uu]nt)owra(ds?)\b" , "$1owar$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t|[Nn]ont)ec(?:i?ni|hini?|ini?)(cal(ly|ity)?|ques?|cians?)\b" , "$1echni$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t|[Mm]alt|[Mm]ist)reateme?n(ts?)\b" , "$1reatmen$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t|[Ii]nt|[Ss]ubt)emp(?:a?r[ae]|ere?|)(te|tely|tures?|ment(s?|al|ally)|nce)\b" , "$1empera$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t|[Ii]nt)ractibl(e|y)\b" , "$1ractabl$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t|[Ii]nt)ol(?:l?eren|leran)(ces?|t|tly)\b" , "$1oleran$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t|[Ee]xt|[Nn]ont)radi(?:t|cti)on(s?|al|ally|alis[mt]s?)\b" , "$1radition$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t|[Ee]xtrat)errestial(s?|ly)\b" , "$1errestrial$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)[jgt]he\b" , "$1he" )
NewStr := RegExReplace( NewStr, "\b(T|t)yr(?:ran?|a)n(y|ical(|ly|ness)|ous(|ly)|iz(e[sd]?|ing))\b" , "$1yrann$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)wpo\b" , "$1wo" )
NewStr := RegExReplace( NewStr, "\b(T|t)won(s|ships?)?\b" , "$1own$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)wel(?:f|th)(s?)\b" , "$1welfth$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)ut(ala|ali|ale|ele|eli|ila|ile|ili)ge\b" , "$1utelage"  )
NewStr := RegExReplace( NewStr, "\b(T|t)ust(s|ing|worthy)?\b" , "$1rust$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)uscon\b" , "Tucson"  )
NewStr := RegExReplace( NewStr, "\b(T|t)urnk\b" , "$1runk" )
NewStr := RegExReplace( NewStr, "\b(T|t)ryed\b" , "$1ried" )
NewStr := RegExReplace( NewStr, "\b(T|t)ru(?:le|el)y\b" , "$1ruly" )
NewStr := RegExReplace( NewStr, "\b(T|t)roling\b" , "$1rolling" )
NewStr := RegExReplace( NewStr, "\b(T|t)riology\b" , "$1rilogy"  )
NewStr := RegExReplace( NewStr, "\b(T|t)rigg?uered\b" , "$1riggered" )
NewStr := RegExReplace( NewStr, "\b(T|t)riathalon\b" , "$1riathlon" )
NewStr := RegExReplace( NewStr, "\b(T|t)remelo(s)?\b" , "$1remolo$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)ran[cs]end(ed|ing|s)?\b" , "$1ranscend$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)ranspora(tion|ble|bility)\b" , "$1ransporta$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)ransp(?:[^a]r.|ar[^e])n(t|tly|ce|cy|tness)\b" , "$1ransparen$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)ransmis?sab(l[ey]|ility)\b" , "$1ransmissib$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)ranslate(rs?)\b" , "$1ranslato$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)ransformaton(s)?\b" , "$1ransformation$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)ranses?xual(s)?\b" , "$1ranssexual$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)ranscripting\b" , "$1ranscribing" )
NewStr := RegExReplace( NewStr, "\b(T|t)ranscep(ts?)\b" , "$1ransep$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)ranscendentational\b" , "$1ranscendental" )
NewStr := RegExReplace( NewStr, "\b(T|t)ranscendan(tal|tally|ce)?\b" , "$1ranscenden$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)ranscation(s?|al)\b" , "$1ransaction$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)rans?fe(re[dr]|ring?)\b" , "$1ransfer$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)rans(?:is)?tion(s|al)?\b" , "$1ransition$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)ranform(s?|ed|ers?|ing|ati(ons?|ve)|able)\b" , "$1ransform$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)railor(s?|ed|ing|able)\b" , "$1railer$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)raff?ic(s|ed|ing)\b" , "$1raffick$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)rad(?:t?io|ition|ititio)nal(ly)?\b" , "$1raditional$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)owords\b" , "$1owards" )
NewStr := RegExReplace( NewStr, "\b(T|t)oursi(m|ts?)\b" , "$1ouris$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)oung(e[ds]?|ing)\b" , "$1ongu$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)oubles\b" , "$1roubles" )
NewStr := RegExReplace( NewStr, "\b(T|t)ou?r[an](ments?)\b" , "$1ourna$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)orpe(?:adoe?|do)(d|s)\b" , "$1orpedoe$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)ormenters\b" , "$1ormentors" )
NewStr := RegExReplace( NewStr, "\b(T|t)on(?:ihgt|giht)\b" , "$1onight" )
NewStr := RegExReplace( NewStr, "\b(T|t)omatos\b" , "$1omatoes"  )
NewStr := RegExReplace( NewStr, "\b(T|t)om(?:mor?|o)ro(ws?)\b" , "$1omorro$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)odya\b" , "$1oday" )
NewStr := RegExReplace( NewStr, "\b(T|t)odays\b" , "$1oday's" )
NewStr := RegExReplace( NewStr, "\b(T|t)kaing(s)?\b" , "$1aking$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)kae\b" , "$1ake" )
NewStr := RegExReplace( NewStr, "\b(T|t)kaes\b" , "$1akes" )
NewStr := RegExReplace( NewStr, "\b(T|t)je\b" , "$1he" )
NewStr := RegExReplace( NewStr, "\b(T|t)imn(e[sd]?|ely|ing)\b" , "$1im$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)ightning\b" , "$1ightening"  )
NewStr := RegExReplace( NewStr, "\b(T|t)iget\b" , "$1iger" )
NewStr := RegExReplace( NewStr, "\b(T|t)iem\b" , "$1ime" )
NewStr := RegExReplace( NewStr, "\b(T|t)hw\b" , "$1he" )
NewStr := RegExReplace( NewStr, "\b(T|t)husfar\b" , "$1hus far"  )
NewStr := RegExReplace( NewStr, "\b(T|t)hsoe\b" , "$1hose"  )
NewStr := RegExReplace( NewStr, "\b(T|t)hrough(ly|ness)\b" , "$1horough$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)hrorough\b" , "$1horough" )
NewStr := RegExReplace( NewStr, "\b(T|t)hri(ds?|dly)\b" , "$1hir$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)hree(es?)\b" , "$1hre$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)hreatr(es?|ics?|ical|ically)\b" , "$1heatr$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)hreatn(ed|ing|s)\b" , "$1hreaten$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)hreatend\b" , "$1hreatened" )
NewStr := RegExReplace( NewStr, "\b(T|t)houghout\b" , "$1hroughout"  )
NewStr := RegExReplace( NewStr, "\b(T|t)hne?\b" , "$1hen" )
NewStr := RegExReplace( NewStr, "\b(T|t)his\s+this\b" , "$1his"  )
NewStr := RegExReplace( NewStr, "\b(T|t)higsn\b" , "$1hings"  )
NewStr := RegExReplace( NewStr, "\b(T|t)hi(?:kn|unk)(|s|ing)\b" , "$1hink$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)hge\b" , "$1he"  )
NewStr := RegExReplace( NewStr, "\b(T|t)he\s+the\b" , "$1he"  )
NewStr := RegExReplace( NewStr, "\b(T|t)he[hw]?\b" , "$1he" )
NewStr := RegExReplace( NewStr, "\b(T|t)hey;?(r|v)e?\b" , "$1hey'$2e" )
NewStr := RegExReplace( NewStr, "\b(T|t)her(after|by)\b" , "$1here$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)heor(u?m)\b" , "$1heorem"  )
NewStr := RegExReplace( NewStr, "\b(T|t)hei(f|ves|very|ving)\b" , "$1hie$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)heese\b" , "$1hese"  )
NewStr := RegExReplace( NewStr, "\b(T|t)heather\b" , "$1heatre" )
NewStr := RegExReplace( NewStr, "\b(T|t)he(?:mself|irselve)s\b" , "$1hemselves"  )
NewStr := RegExReplace( NewStr, "\b(T|t)hansk\b" , "$1hanks" )
NewStr := RegExReplace( NewStr, "\b(T|t)ha(?:ts|st)\b" , "$1hat's" )
NewStr := RegExReplace( NewStr, "\b(T|t)h(n|t|w)a\b" , "$1ha$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)h(?:ign|nig)(|s)\b" , "$1hing$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)h(?:eri|ier)\b" , "$1heir"  )
NewStr := RegExReplace( NewStr, "\b(T|t)ete-a-tete(s)?\b" , "$1ête-à-tête$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)esticlular\b" , "$1esticular" )
NewStr := RegExReplace( NewStr, "\b(T|t)erroist\b" , "$1errorist" )
NewStr := RegExReplace( NewStr, "\b(T|t)erritoy\b" , "$1erritory" )
NewStr := RegExReplace( NewStr, "\b(T|t)erritorist(s?|ic)\b" , "$1errorist$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)ermoil\b" , "$1urmoil" )
NewStr := RegExReplace( NewStr, "\b(T|t)er(?:ri|it|rat)or(y|ies|ial)\b" , "$1erritor$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)epmorarily\b" , "$1emporarily" )
NewStr := RegExReplace( NewStr, "\b(T|t)endan?c(y|ies)\b" , "$1endenc$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)enacle\b" , "$1entacle" )
NewStr := RegExReplace( NewStr, "\b(T|t)enacles\b" , "$1entacles" )
NewStr := RegExReplace( NewStr, "\b(T|t)emprary\b" , "$1emporary" )
NewStr := RegExReplace( NewStr, "\b(T|t)emp(?:eratu|are?a?tur|re?atur|a?rea?tur)(es?)\b" , "$1emperatur$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)em(?:perta|erat)ure(s)?\b" , "$1emperature$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)elphony\b" , "$1elephony" )
NewStr := RegExReplace( NewStr, "\b(T|t)elivi[sz](e[sd]?|i(ng|on)s?|ors?|ual)\b" , "$1elevis$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)elevize\b" , "$1elevise" )
NewStr := RegExReplace( NewStr, "\b(T|t)elev(?:si|is)o(ns?)\b" , "$1elevisio$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)elelevision\b" , "$1elevision" )
NewStr := RegExReplace( NewStr, "\b(T|t)echnitian(s)?\b" , "$1echnician$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)echic(ians?|al|ally)\b" , "$1echnic$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)ech(?:nol|nolo)g(ies|y)\b" , "$1echnolog$2" )
NewStr := RegExReplace( NewStr, "\b(T|t)eached\b" , "$1aught"  )
NewStr := RegExReplace( NewStr, "\b(T|t)axanom(y|ic|ists?)\b" , "$1axonom$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)atoo\b" , "$1attoo" )
NewStr := RegExReplace( NewStr, "\b(T|t)ast\b" , "$1aste" )
NewStr := RegExReplace( NewStr, "\b(T|t)argett(ed|ing)\b" , "$1arget$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)allent(s|ed)?\b" , "$1alent$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)alekd\b" , "$1alked"  )
NewStr := RegExReplace( NewStr, "\b(T|t)ahn\b" , "$1han" )
NewStr := RegExReplace( NewStr, "\b(T|t)a(t+)ooes\b" , "$1a$2oos"  )
NewStr := RegExReplace( NewStr, "\b(T|t)(?:|abb?[ao]c?|obbac?|oba)c(os?|nists?)\b" , "$1obacc$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)(?:yhe|ehy|hey)(?:ll|;l)\b" , "$1hey'll" )
NewStr := RegExReplace( NewStr, "\b(T|t)(?:yhe|ehy)\b" , "$1hey" )
NewStr := RegExReplace( NewStr, "\b(T|t)(?:oghet|iogeth|ogeht)her\b" , "$1ogether" )
NewStr := RegExReplace( NewStr, "\b(T|t)(?:laking|alkign)\b" , "$1alking" )
NewStr := RegExReplace( NewStr, "\b(T|t)(?:ihs|hsi|ghis)\b" , "$1his" )
NewStr := RegExReplace( NewStr, "\b(T|t)(?:hrou[gh]|hrought|hrouhg)(out)?\b" , "$1hrough$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)(?:h?ress|h?reshh|resh)old(s?)\b" , "$1hreshold$2"  )
NewStr := RegExReplace( NewStr, "\b(T|t)(?:(?:yh|h[gy])at|ath|aht)\b" , "$1hat" )
NewStr := RegExReplace( NewStr, "\b(S|[Aa]?s|[Aa]ntis)ymetr(y|ies|ical(|ly))\b" , "$1ymmetr$2"  )
NewStr := RegExReplace( NewStr, "\b(S|[Aa]?s)tingen(t|tly|cy)\b" , "$1tringen$2"  )
NewStr := RegExReplace( NewStr, "\b(S|[Aa]?s)exua?ly\b" , "$1exually"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Uu]ns)ucc[cs]ess?(ful|fully|es)\b" , "$1uccess$2" )
NewStr := RegExReplace( NewStr, "\b(S|s|[Uu]ns)uccess(?:fulyl|ully)\b" , "$1uccessfully" )
NewStr := RegExReplace( NewStr, "\b(S|s|[Uu]ns)u(?:pri[sz]|rpriz)(e[ds]?|ing|ingly)\b" , "$1urpris$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Uu]ns)u(?:c+e|ces+)sful?(l|lly)\b" , "$1uccessfu$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Uu]ns)(?:oph|ofist|uphist)icat(e[ds]?|ing|ion)\b" , "$1ophisticat$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Rr]es)each(|ed|er?s?|ing)\b" , "$1earch$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Ii]ns|[Nn]ons)ign(?:i?fi?gan|(?:i?f|fi?)can|if(?:ac[ae]n|icen|ica))(t|tly|ce)\b" , "$1ignifican$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Ii]ns)uf(?:[if]cie|f?icei?|f?icia?)n(t|tly|cy|cies)\b" , "$1ufficien$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Ii]ns)ubordin?[ae]nt(e[sd]?|or|ive|ly|ions?)\b" , "$1ubordinat$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Ii]ns)tablili(ty|ties|[sz](e[drs]?|ing))\b" , "$1tabili$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Ii]ns)oluab(l[ey]|ility)\b" , "$1olub$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Ii]ns)incerle?y\b" , "$1incerely"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Ii]ns)ig(?:inifica|nficia|nifac?)n(t|ce|tly)\b" , "$1ignifican$2" )
NewStr := RegExReplace( NewStr, "\b(S|s|[Ii]ns)ep(?:e?r|are)a(bl[ey]|te[sd]?|tely|ti(on|s[mt]|ng)s?)\b" , "$1epara$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Ii]ns)ec(?:rui|ui?re?)t(y|ies)\b" , "$1ecurit$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Ii]nfras|[Mm]icros|[Rr]es|[Ss]ubs|[Ss]upers)t(?:ucu?|rucu)tur(e[ds]?|al|ally)\b" , "$1tructur$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[IiUu]ns)ubsta(?:nc?|t)ia(l?|lly|lity|te[ds]?|ting)\b" , "$1ubstantia$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Ff]rees|[Ll]ifes)(?:ytl|tly)((?:|i[sz])(?:e[sd]?|ings?)|ist(?:|ic)s?|ish(?:|ly))\b" , "$1tyl$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Dd]iss|[Vv]eris)im(?:(?:mili?|[ua]l|ili)ari?|ilari)(|ly|ity)\b" , "$1imilar$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s|[Dd]iss|[Uu]ns)ati?sif(y|ying|ie[ds]|act(ion|ory|orily))\b" , "$1atisf$2" )
NewStr := RegExReplace( NewStr, "\b(S|s|[Bb]es)ei([gv]e[sd]?|[gv]ing)\b" , "$1ie$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)[yi]phyl+[iu](s|tic)\b" , "$1yphili$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)[yi]non[oa]mou(s|sly)\b" , "$1ynonymou$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ysmatically\b" , "$1ystematically" )
NewStr := RegExReplace( NewStr, "\b(S|s)yrap\b" , "$1yrup"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ynphony\b" , "$1ymphony" )
NewStr := RegExReplace( NewStr, "\b(S|s)ynonymns\b" , "$1ynonyms" )
NewStr := RegExReplace( NewStr, "\b(S|s)ynogog(s?|ues?|al|ical)\b" , "$1ynagog$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)yncronization\b" , "$1ynchronization" )
NewStr := RegExReplace( NewStr, "\b(S|s)ynchoniz(e[drs]?|ations?|ing)\b" , "$1ynchroniz$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ynagouge\b" , "$1ynagogue" )
NewStr := RegExReplace( NewStr, "\b(S|s)ym(?:ettric|metral)\b" , "$1ymmetric" )
NewStr := RegExReplace( NewStr, "\b(S|s)y(?:pmtom|mpton)(atic|s)?\b" , "$1ymptom$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)wiming\b" , "$1wimming"  )
NewStr := RegExReplace( NewStr, "\b(S|s)wepth\b" , "$1wept" )
NewStr := RegExReplace( NewStr, "\b(S|s)wae([rt](s?|ing)|te[dr])\b" , "$1wea$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)vae(s|d)?\b" , "$1ave$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)uspention\b" , "$1uspension" )
NewStr := RegExReplace( NewStr, "\b(S|s)useptable\b" , "$1usceptible" )
NewStr := RegExReplace( NewStr, "\b(S|s)urvivied\b" , "$1urvived" )
NewStr := RegExReplace( NewStr, "\b(S|s)urveye(rs?)\b" , "$1urveyo$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)urveill\b" , "$1urveil"  )
NewStr := RegExReplace( NewStr, "\b(S|s)urstromming\b" , "$1urströmming" )
NewStr := RegExReplace( NewStr, "\b(S|s)urroud(ed|ing|s)?\b" , "$1urround$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)urr?(?:e?peti|ep)tiou(s|sly)\b" , "$1urreptitiou$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)urfce\b" , "$1urface" )
NewStr := RegExReplace( NewStr, "\b(S|s)ur?viv(?:io|e)(rs?)\b" , "$1urvivo$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ur(?:r?under|rend)(s?|ed|ing)\b" , "$1urrender$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)uppy\b" , "$1upply" )
NewStr := RegExReplace( NewStr, "\b(S|s)upposingly\b" , "$1upposedly" )
NewStr := RegExReplace( NewStr, "\b(S|s)upp?o(?:ss)?(ed|edly|ing)\b" , "$1uppos$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)uperintendan(ts?)\b" , "$1uperintenden$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)uperce+(de[ds]?|ding|ssions?)\b" , "$1uperse$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)up(?:|pp+)ort(s?|ers?|ed|ing|ive(|ness|ly))\b" , "$1upport$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)up(?:l[ai]e?|pla)ment(al|ed|s|ing)?\b" , "$1upplement$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)uop\b" , "$1oup" )
NewStr := RegExReplace( NewStr, "\b(S|s)unglases\b" , "$1unglasses" )
NewStr := RegExReplace( NewStr, "\b(S|s)um(?:a|e|me(?!ry))r(y|ily|i[sz](ation|e[ds]?|ing))\b" , "$1ummar$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)uggestable\b" , "$1uggestible" )
NewStr := RegExReplace( NewStr, "\b(S|s)ugest(s?|ed|ing|ive(|ly|ness)|ions?|ible|ibility)\b" , "$1uggest$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ufferr(ed|ing)\b" , "$1uffer$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)uf(?:f?e|e?)rag(e|ett(es?|ism)|is[tm]s?)\b" , "$1uffrag$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ucidial\b" , "$1uicidal" )
NewStr := RegExReplace( NewStr, "\b(S|s)ucid(es?|al)\b" , "$1uicid$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ucessot\b" , "$1uccessor" )
NewStr := RegExReplace( NewStr, "\b(S|s)ucc(ceed|edd?)(s|ed|ing)\b" , "$1ucceed$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)uc?septi((ve|ble)(|ness)|bility|vity)\b" , "$1uscepti$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)uc(?:es?|ce)si(ve|vely|ons?)\b" , "$1uccessi$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)uc(?:c?s|)e(ed(s?|ed|ing)|ss(|es|(ful|ive)(|ly)|ions?|ors?))\b" , "$1ucce$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ubur(?:bia|burba)(n|nites?)\b" , "$1uburba$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ubter?rania(n|nly)\b" , "$1ubterranea$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ubstract(s?|ed|ing|ion)\b" , "$1ubtract$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ubstituded\b" , "$1ubstituted" )
NewStr := RegExReplace( NewStr, "\b(S|s)ubsid(?:u?a|i?e)r(y|ies)\b" , "$1ubsidiar$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ubpecies\b" , "$1ubspecies" )
NewStr := RegExReplace( NewStr, "\b(S|s)ubmachne\b" , "$1ubmachine" )
NewStr := RegExReplace( NewStr, "\b(S|s)ubjudgation\b" , "$1ubjugation" )
NewStr := RegExReplace( NewStr, "\b(S|s)ub(?:sta|tan)ce(s?)\b" , "$1ubstance$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)u(?:rpp?res?|p?pre|pres?)s(|e[sd]|ing|ion|ive(|ly)|ants?|ible|[eo]rs?)\b" , "$1uppress$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)u(?:rburb|burburb)(s?|an(|ism|ites?)|ed)\b" , "$1uburb$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)u(?:r?|rp)plant(s?|ed|ing)\b" , "$1upplant$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)turcture(s|d)?\b" , "$1tructure$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)tugg?ling\b" , "$1truggling" )
NewStr := RegExReplace( NewStr, "\b(S|s)tudnet(s)?\b" , "$1tudent$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)tuding\b" , "$1tudying"  )
NewStr := RegExReplace( NewStr, "\b(S|s)tuddy\b" , "$1tudy"  )
NewStr := RegExReplace( NewStr, "\b(S|s)tub(?:bor|orn?)nes?s\b" , "$1tubbornness"  )
NewStr := RegExReplace( NewStr, "\b(S|s)trnad\b" , "$1trand" )
NewStr := RegExReplace( NewStr, "\b(S|s)trikely\b" , "$1trikingly" )
NewStr := RegExReplace( NewStr, "\b(S|s)trictist\b" , "$1trictest"  )
NewStr := RegExReplace( NewStr, "\b(S|s)trenou(s|sly)\b" , "$1trenuou$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)trengh?t(s?|en(s?|ed|ing|ers?))\b" , "$1trength$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)treemlining\b" , "$1treamlining" )
NewStr := RegExReplace( NewStr, "\b(S|s)tre(?:gth|nt?gh)(en(ed|ing|s)?)?\b" , "$1trength$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)trat\b" , "$1tart" )
NewStr := RegExReplace( NewStr, "\b(S|s)tpo\b" , "$1top"  )
NewStr := RegExReplace( NewStr, "\b(S|s)tornegst\b" , "$1trongest"  )
NewStr := RegExReplace( NewStr, "\b(S|s)tor(?:eis|ise)\b" , "$1tories" )
NewStr := RegExReplace( NewStr, "\b(S|s)tong\b" , "$1trong" )
NewStr := RegExReplace( NewStr, "\b(S|s)tnad\b" , "$1tand" )
NewStr := RegExReplace( NewStr, "\b(S|s)tirrs\b" , "$1tirs" )
NewStr := RegExReplace( NewStr, "\b(S|s)tird(y|i(e[drs]|est|ly|ness))\b" , "$1turd$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)tir(ed|ing)\b" , "$1tirr$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)tilus\b" , "$1tylus"  )
NewStr := RegExReplace( NewStr, "\b(S|s)tiffl(e[sd]?|ing)\b" , "$1tifl$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)teri?otyp(e[sd]?|ing|ical(|ly))\b" , "$1tereotyp$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)tep-((?:fa|mo|bro)ther|parent|daughter|son|sister|child(?:|ren))(s)?\b" , "$1tep$2$3"  )
NewStr := RegExReplace( NewStr, "\b(S|s)tep-((?:fa|mo)ther|parent|daughter|son|child(?:|ren))(s)?\b" , "$1tep$2$3"  )
NewStr := RegExReplace( NewStr, "\b(S|s)tateman\b" , "$1tatesman" )
NewStr := RegExReplace( NewStr, "\b(S|s)tat(?:men|emem)(ts?)\b" , "$1tatemen$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)tange(ness|ly)?\b" , "$1trange$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)tandars\b" , "$1tandards" )
NewStr := RegExReplace( NewStr, "\b(S|s)taion(ed|s)?\b" , "$1tation$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)tainlees\b" , "$1tainless" )
NewStr := RegExReplace( NewStr, "\b(S|s)taf\b" , "$1taff"  )
NewStr := RegExReplace( NewStr, "\b(S|s)t(?:ruggel|rugle|uggle)(s|d)?\b" , "$1truggle$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)t(?:art[ae]|rat[ai]|rade)g(y|ies|ic|ically|i[sz](e[ds]?|ing))\b" , "$1trateg$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)qaure(s)?\b" , "$1quare$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)p[pr]ech(es)?\b" , "$1peech$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)pri(?:t|ri)ual(s?|ly|ity|is[mt]s?)\b" , "$1piritual$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)pre(?:ade)?d\b" , "$1pread"  )
NewStr := RegExReplace( NewStr, "\b(S|s)poonfulls\b" , "$1poonfuls" )
NewStr := RegExReplace( NewStr, "\b(S|s)pontan(?:[eiou]{1,2})(s|sly)\b" , "$1pontaneou$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)pon(?:se|zo)r(s?|ed|ing|ships?)\b" , "$1ponsor$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)poace\b" , "$1pace" )
NewStr := RegExReplace( NewStr, "\b(S|s)permatozoan\b" , "$1permatozoon" )
NewStr := RegExReplace( NewStr, "\b(S|s)pendour\b" , "$1plendour" )
NewStr := RegExReplace( NewStr, "\b(S|s)peices\b" , "$1pecies" )
NewStr := RegExReplace( NewStr, "\b(S|s)pectauc?la(rs?|rly)\b" , "$1pectacula$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)pect(?:um|al?)\b" , "$1pectr$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)peciman\b" , "$1pecimen"  )
NewStr := RegExReplace( NewStr, "\b(S|s)pecifiying\b" , "$1pecifying" )
NewStr := RegExReplace( NewStr, "\b(S|s)pecifica?ly\b" , "$1pecifically"  )
NewStr := RegExReplace( NewStr, "\b(S|s)pecifc(s?|ity|ally|ations?)\b" , "$1pecific$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)pecialli([sz](e[sd]?|ing|ations?))\b" , "$1peciali$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)pec(?:if|fi)(cs?|city)\b" , "$1pecifi$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)parce(|r|st|ly|ness)\b" , "$1parse$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)pag(?:et?|he)t(i|ini)\b" , "$1paghett$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)overe?ignity\b" , "$1overeignty"  )
NewStr := RegExReplace( NewStr, "\b(S|s)oveit(s)?\b" , "$1oviet$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)ov(?:reig?|erie?g)g(ns?|nty)\b" , "$1overeig$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ouvenier(s?)\b" , "$1ouvenir$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ourth(|er([ns]?|ly|lies|nmost)|(ea|we)st(|er(n?|ly|lies)))\b" , "$1outh$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ountrack\b" , "$1oundtrack" )
NewStr := RegExReplace( NewStr, "\b(S|s)ouffle(s)?\b" , "$1oufflé$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)oudn(s)?\b" , "$1ound$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)or?r[cs]eror(s?)\b" , "$1orcerer$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)omewaht\b" , "$1omewhat" )
NewStr := RegExReplace( NewStr, "\b(S|s)omet(?:hign|ing)\b" , "$1omething" )
NewStr := RegExReplace( NewStr, "\b(S|s)omene\b" , "$1omeone" )
NewStr := RegExReplace( NewStr, "\b(S|s)olist(s)?\b" , "$1oloist$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)oliliqu(y|ies|i[sz](e[sd]?|ing)|ists?)\b" , "$1oliloqu$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)oliders\b" , "$1oldiers" )
NewStr := RegExReplace( NewStr, "\b(S|s)olat[ae]ry\b" , "$1olitary"  )
NewStr := RegExReplace( NewStr, "\b(S|s)oilde(rs?|ring)\b" , "$1oldie$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ohw\b" , "$1how" )
NewStr := RegExReplace( NewStr, "\b(S|s)of(?:ware|twares)\b" , "$1oftware"  )
NewStr := RegExReplace( NewStr, "\b(S|s)oe?m(body|[dw]ays?|how|one|place|thing|times?|what|where)\b" , "$1ome$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ocities\b" , "$1ocieties" )
NewStr := RegExReplace( NewStr, "\b(S|s)o(?:ical|cal)(ism|ists?|ites?)?\b" , "$1ocial$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)o(?:f|ph)mor(es?|ic|ically)\b" , "$1ophomor$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)neeks\b" , "$1neaks" )
NewStr := RegExReplace( NewStr, "\b(S|s)ne?es(e[ds]?)\b" , "$1neez$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)moothe\b" , "$1mooth" )
NewStr := RegExReplace( NewStr, "\b(S|s)mae\b" , "$1ame" )
NewStr := RegExReplace( NewStr, "\b(S|s)lowy\b" , "$1lowly" )
NewStr := RegExReplace( NewStr, "\b(S|s)lighl?tl?y\b" , "$1lightly"  )
NewStr := RegExReplace( NewStr, "\b(S|s)laugterhouses\b" , "$1laughterhouses" )
NewStr := RegExReplace( NewStr, "\b(S|s)kateing\b" , "$1kating" )
NewStr := RegExReplace( NewStr, "\b(S|s)itutat(e[sd]?|ing|ions?)\b" , "$1ituat$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)itll(ness)?\b" , "$1till$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)ingsog\b" , "$1ingsong"  )
NewStr := RegExReplace( NewStr, "\b(S|s)implier\b" , "$1impler"  )
NewStr := RegExReplace( NewStr, "\b(S|s)imp(?:ley|yl)\b" , "$1imply"  )
NewStr := RegExReplace( NewStr, "\b(S|s)im(?:ultani?|altan[eou])[eou]{1,2}(s|sly)\b" , "$1imultaneou$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ign[ei]t(o|u)r(es?|y|ies)\b" , "$1ignat$2r$3"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ignfies\b" , "$1ignifies" )
NewStr := RegExReplace( NewStr, "\b(S|s)ie([zn](e[ds]?|ing)|zures?|ners?)\b" , "$1ei$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)icne\b" , "$1ince"  )
NewStr := RegExReplace( NewStr, "\b(S|s)hrinked\b" , "$1hrunk" )
NewStr := RegExReplace( NewStr, "\b(S|s)hre[ai]k(s?|ed|ing)\b" , "$1hriek$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)howinf\b" , "$1howing" )
NewStr := RegExReplace( NewStr, "\b(S|s)houdl\b" , "$1hould"  )
NewStr := RegExReplace( NewStr, "\b(S|s)hou(?:dln'|den)t\b" , "$1houldn't" )
NewStr := RegExReplace( NewStr, "\b(S|s)horly\b" , "$1hortly" )
NewStr := RegExReplace( NewStr, "\b(S|s)hopkeeepers\b" , "$1hopkeepers" )
NewStr := RegExReplace( NewStr, "\b(S|s)hip(ed|ing)\b" , "$1hipp$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)hineing\b" , "$1hining"  )
NewStr := RegExReplace( NewStr, "\b(S|s)herif\b" , "$1heriff" )
NewStr := RegExReplace( NewStr, "\b(S|s)heperd(s?|ed|ing)\b" , "$1hepherd$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)heild(s?|ed|ing)\b" , "$1hield$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)hcool\b" , "$1chool" )
NewStr := RegExReplace( NewStr, "\b(S|s)haddow(s?|ed|ing)\b" , "$1hadow$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)evice\b" , "$1ervice" )
NewStr := RegExReplace( NewStr, "\b(S|s)everle?y\b" , "$1everely" )
NewStr := RegExReplace( NewStr, "\b(S|s)ett(?:ele|l)ment(s)?\b" , "$1ettlement$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)ervent(s?)\b" , "$1ervant$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)errious(|ly|ness)\b" , "$1erious$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)epulchure\b" , "$1epulcher" )
NewStr := RegExReplace( NewStr, "\b(S|s)epin(as?)\b" , "$1ubpoen$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)entanc(e[sd]?|ings?|ers?)\b" , "$1entenc$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)enstive\b" , "$1ensitive" )
NewStr := RegExReplace( NewStr, "\b(S|s)enarios\b" , "$1cenarios" )
NewStr := RegExReplace( NewStr, "\b(S|s)electoin\b" , "$1election" )
NewStr := RegExReplace( NewStr, "\b(S|s)einor\b" , "$1enior" )
NewStr := RegExReplace( NewStr, "\b(S|s)eing\b" , "$1eeing" )
NewStr := RegExReplace( NewStr, "\b(S|s)eh\b" , "$1he" )
NewStr := RegExReplace( NewStr, "\b(S|s)eguoys\b" , "$1egues" )
NewStr := RegExReplace( NewStr, "\b(S|s)egement(s?|ed|ing|ations?)\b" , "$1egment$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)ectino\b" , "$1ection" )
NewStr := RegExReplace( NewStr, "\b(S|s)ecr(?:at[ae]r|eter|etart)(y|ies|ia[lt])\b" , "$1ecretar$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)ec(?:c?e|ces)sion(s?|al|ists?|ism)\b" , "$1ecession$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)e(?:rvera|v[aei]r[ei]a?|v[ai]r[aei])l\b" , "$1everal"  )
NewStr := RegExReplace( NewStr, "\b(S|s)cupture?(s?)\b" , "$1culpture$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)crutinity\b" , "$1crutiny" )
NewStr := RegExReplace( NewStr, "\b(S|s)creenwrighter\b" , "$1creenwriter" )
NewStr := RegExReplace( NewStr, "\b(S|s)coll(s?)\b" , "$1croll$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)cirpt(s?)\b" , "$1cript$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)cine?ce\b" , "$1cience" )
NewStr := RegExReplace( NewStr, "\b(S|s)cient(?:if|fi)c\b" , "$1cientific" )
NewStr := RegExReplace( NewStr, "\b(S|s)cholarstic\b" , "$1cholastic" )
NewStr := RegExReplace( NewStr, "\b(S|s)cholarhip\b" , "$1cholarship" )
NewStr := RegExReplace( NewStr, "\b(S|s)cavanged\b" , "$1cavenged" )
NewStr := RegExReplace( NewStr, "\b(S|s)caricity\b" , "$1carcity" )
NewStr := RegExReplace( NewStr, "\b(S|s)caleabl(e|y)\b" , "$1calabl$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)axaphone\b" , "$1axophone" )
NewStr := RegExReplace( NewStr, "\b(S|s)atric(|al|ally)\b" , "satiric$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)atisfactority\b" , "$1atisfactorily" )
NewStr := RegExReplace( NewStr, "\b(S|s)at(?:e|tel?|t?al?)lite(s?)\b" , "$1atellite$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)arg(e?a|e)nt\b" , "$1ergeant" )
NewStr := RegExReplace( NewStr, "\b(S|s)andw(?:hi|it)ch(|e[ds]|ing)\b" , "$1andwich$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)andess\b" , "$1adness" )
NewStr := RegExReplace( NewStr, "\b(S|s)an(?:tio|c?tion)n(ed|ing|s)?\b" , "$1anction$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)alery\b" , "$1alary"  )
NewStr := RegExReplace( NewStr, "\b(S|s)afte?y\b" , "$1afety"  )
NewStr := RegExReplace( NewStr, "\b(S|s)acr[ae]fic(e[ds]?|ing|ial(|ly))\b" , "$1acrific$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)acrifical\b" , "$1acrificial" )
NewStr := RegExReplace( NewStr, "\b(S|s)acr(?:[ae]l[ei]d?|ilid?|iled)g(es?|ious)\b" , "$1acrileg$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)abatog(e[sd]?|ing)\b" , "$1abotag$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)(?:ur(?:ou|ro)|orr?(?:o?u))nd(s?|ed|ings?)\b" , "$1urround$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)(?:otry|topry|toyr|troy)\b" , "$1tory" )
NewStr := RegExReplace( NewStr, "\b(S|s)(?:moe|oem)(what|where|thing|one|body)\b" , "$1ome$2" )
NewStr := RegExReplace( NewStr, "\b(S|s)(?:edere|ideri?)al\b" , "$1idereal"  )
NewStr := RegExReplace( NewStr, "\b(S|s)(?:chedu[ae]|cedu[ae]?|hedu[ae]?)l(es?|ed|ing)\b" , "$1chedul$2"  )
NewStr := RegExReplace( NewStr, "\b(S|s)(?:aught|eeked)\b" , "$1ought" )
NewStr := RegExReplace( NewStr, "\b(S|s)(?:asy|yas)\b" , "$1ays" )
NewStr := RegExReplace( NewStr, "\b(R|r|[Uu]nr)epenten(t|tly|ce)\b" , "$1epentan$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r|[Uu]nr)eliablity\b" , "$1eliability"  )
NewStr := RegExReplace( NewStr, "\b(R|r|[Ii]rr)espon(?:s[ae]b|sibi|isb)(l[ey])\b" , "$1esponsib$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r|[Ii]rr)espon(?:s[ae]?bili|sibli|sibil|isbili)t(y|ies)\b" , "$1esponsibilit$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r|[Ii]rr)esistabl(e|y)\b" , "$1esistibl$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r|[Ii]rr)el(?:l+[ae]v[ae]|av[ae]|evea?)n(c[ey]|t|tly)\b" , "$1elevan$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r|[Ii]rr)egu(?:lar(?:il)?y|arly)\b" , "$1egularly"  )
NewStr := RegExReplace( NewStr, "\b(R|r|L|l)eagion(s?|al(s?|ly|ism|i[sz]e[ds]?)|ary|aries)\b" , "$1egion$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)ussi(?:on|na)\b" , "$1ussian" )
NewStr := RegExReplace( NewStr, "\b(R|r)un(?:nun|in)g\b" , "$1unning" )
NewStr := RegExReplace( NewStr, "\b(R|r)umers\b" , "$1umors" )
NewStr := RegExReplace( NewStr, "\b(R|r)ulle\b" , "$1ule" )
NewStr := RegExReplace( NewStr, "\b(R|r)ud[ae]mentar(y|ily|iness)\b" , "$1udimentar$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)udimentatry\b" , "$1udimentary" )
NewStr := RegExReplace( NewStr, "\b(R|r)ucuperate\b" , "$1ecuperate" )
NewStr := RegExReplace( NewStr, "\b(R|r)oomat(es?)\b" , "$1oommat$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)ococco\b" , "$1ococo" )
NewStr := RegExReplace( NewStr, "\b(R|r)ised\b" , "$1ose" )
NewStr := RegExReplace( NewStr, "\b(R|r)ininging\b" , "$1inging" )
NewStr := RegExReplace( NewStr, "\b(R|r)igourous\b" , "$1igorous" )
NewStr := RegExReplace( NewStr, "\b(R|r)igeur\b" , "$1igueur" )
NewStr := RegExReplace( NewStr, "\b(R|r)ichochet(s?|ed)\b" , "$1icochet$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)hytmic\b" , "$1hythmic" )
NewStr := RegExReplace( NewStr, "\b(R|r)hymme\b" , "$1hyme" )
NewStr := RegExReplace( NewStr, "\b(R|r)hinocerous(|es)\b" , "$1hinoceros$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)e[sc]ind(s?|ed|ing)" , "$1escind$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)e[ao]?c(?:cur?|u)r(ed|ing|ent(|ly)|ence)\b" , "$1ecurr$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)ewriet\b" , "$1ewrite" )
NewStr := RegExReplace( NewStr, "\b(R|r)ewitten\b" , "$1ewritten" )
NewStr := RegExReplace( NewStr, "\b(R|r)evolutionar\b" , "$1evolutionary" )
NewStr := RegExReplace( NewStr, "\b(R|r)eversable\b" , "$1eversible" )
NewStr := RegExReplace( NewStr, "\b(R|r)everal\b" , "$1eversal" )
NewStr := RegExReplace( NewStr, "\b(R|r)evaluated\b" , "$1eevaluated" )
NewStr := RegExReplace( NewStr, "\b(R|r)eult\b" , "$1esult" )
NewStr := RegExReplace( NewStr, "\b(R|r)eturnd\b" , "$1eturned" )
NewStr := RegExReplace( NewStr, "\b(R|r)etreive\b" , "$1etrieve" )
NewStr := RegExReplace( NewStr, "\b(R|r)etalitation\b" , "$1etaliation" )
NewStr := RegExReplace( NewStr, "\b(R|r)etalitated\b" , "$1etaliated" )
NewStr := RegExReplace( NewStr, "\b(R|r)esurgance\b" , "$1esurgence" )
NewStr := RegExReplace( NewStr, "\b(R|r)esumé\b" , "$1ésumé" )
NewStr := RegExReplace( NewStr, "\b(R|r)esumés\b" , "$1ésumés" )
NewStr := RegExReplace( NewStr, "\b(R|r)est[ae]u?rant[eo]u?(rs?)" , "$1estaurateu$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)estauration\b" , "$1estoration" )
NewStr := RegExReplace( NewStr, "\b(R|r)estaraunteur\b" , "$1estaurateur" )
NewStr := RegExReplace( NewStr, "\b(R|r)estaraunteurs\b" , "$1estaurateurs" )
NewStr := RegExReplace( NewStr, "\b(R|r)establish(|e[ds]|ing|ment)\b" , "$1eestablish$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)esssurecting\b" , "$1esurrecting" )
NewStr := RegExReplace( NewStr, "\b(R|r)essembl(e[sd]?|ing|[ae]nces?)\b" , "$1esembl$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)espomd\b" , "$1espond" )
NewStr := RegExReplace( NewStr, "\b(R|r)espo(?:n|nns)ibilit(y|ies)\b" , "$1esponsibilit$2" )
NewStr := RegExReplace( NewStr, "\b(R|r)esollution\b" , "$1esolution" )
NewStr := RegExReplace( NewStr, "\b(R|r)esevoir(s)?\b" , "$1eservoir$2" )
NewStr := RegExReplace( NewStr, "\b(R|r)esembes\b" , "$1esembles" )
NewStr := RegExReplace( NewStr, "\b(R|r)es(?:[cs]usc?|[cs]?uss?|[cs]?uc[cs]?)ita(t(e[ds]?|ors?|ing|ive|ions?)|ble|nts?)\b" , "$1esuscita$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)es(?:taurau|t[aeu]rau?|trau|tuara|aura)n(ts?)\b" , "$1estauran$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)ep[ei]to(ires?|ry|ries|rial)\b" , "$1eperto$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)epsectively\b" , "$1espectively" )
NewStr := RegExReplace( NewStr, "\b(R|r)epr[ae]mand(s?|ed|ings?)\b" , "$1eprimand$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)eprtoire\b" , "$1epertoire" )
NewStr := RegExReplace( NewStr, "\b(R|r)eproducable\b" , "$1eproducible" )
NewStr := RegExReplace( NewStr, "\b(R|r)epresentativs\b" , "$1epresentatives" )
NewStr := RegExReplace( NewStr, "\b(R|r)epres(?:etn|nt)(s|ed|atives?)?\b" , "$1epresent$2" )
NewStr := RegExReplace( NewStr, "\b(R|r)epres(?:anta|en)tive(s)?\b" , "$1epresentative$2" )
NewStr := RegExReplace( NewStr, "\b(R|r)eportadly\b" , "$1eportedly" )
NewStr := RegExReplace( NewStr, "\b(R|r)epid\b" , "$1apid" )
NewStr := RegExReplace( NewStr, "\b(R|r)epeteadly\b" , "$1epeatedly" )
NewStr := RegExReplace( NewStr, "\b(R|r)ep(?:e|ti)tion(s)?\b" , "$1epetition$2" )
NewStr := RegExReplace( NewStr, "\b(R|r)eorganision\b" , "$1eorganization" )
NewStr := RegExReplace( NewStr, "\b(R|r)entors\b" , "$1enters" )
NewStr := RegExReplace( NewStr, "\b(R|r)enewl\b" , "$1enewal" )
NewStr := RegExReplace( NewStr, "\b(R|r)ende[vz]ous\b" , "$1endezvous" )
NewStr := RegExReplace( NewStr, "\b(R|r)em[ei]n[ae]nt\b" , "$1emnant" )
NewStr := RegExReplace( NewStr, "\b(R|r)eminsi?cent\b" , "$1eminiscent" )
NewStr := RegExReplace( NewStr, "\b(R|r)ememb(?:er[ae]|re)nc(er?s?)\b" , "$1emembranc$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)emeber(s?|ed|ing)\b" , "$1emember$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)emaing\b" , "$1emaining" )
NewStr := RegExReplace( NewStr, "\b(R|r)em(?:ines?|enis?|ini)c(e[ds]?|ing|en(ces?|t|tly))\b" , "$1eminisc$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)eluctent\b" , "$1eluctant" )
NewStr := RegExReplace( NewStr, "\b(R|r)elpacement(s)?\b" , "$1eplacement$2" )
NewStr := RegExReplace( NewStr, "\b(R|r)elized\b" , "$1ealized" )
NewStr := RegExReplace( NewStr, "\b(R|r)elinqushment\b" , "$1elinquishment" )
NewStr := RegExReplace( NewStr, "\b(R|r)eligios(|ly|ness)\b" , "$1eligious$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)elient\b" , "$1eliant" )
NewStr := RegExReplace( NewStr, "\b(R|r)eleive(rs?|s|d)?\b" , "$1elieve$2" )
NewStr := RegExReplace( NewStr, "\b(R|r)elected\b" , "$1eelected" )
NewStr := RegExReplace( NewStr, "\b(R|r)ela\b" , "$1eal" )
NewStr := RegExReplace( NewStr, "\b(R|r)elatiopnship\b" , "$1elationship" )
NewStr := RegExReplace( NewStr, "\b(R|r)el(?:ige?|gi)o(ns?|nless|us(|ly|ness)|se|sity|nis[tm])\b" , "$1eligio$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)eknow(n|ned)\b" , "$1enow$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)ejuv[ai]nat(e[ds]?|ing|ion|ors?)\b" , "$1ejuvenat$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)eigining\b" , "$1eigning" )
NewStr := RegExReplace( NewStr, "\b(R|r)eicarnation\b" , "$1eincarnation" )
NewStr := RegExReplace( NewStr, "\b(R|r)ehers(als?|e[sd]?|ing)\b" , "$1ehears$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)egulaotr(s)?\b" , "$1egulator$2" )
NewStr := RegExReplace( NewStr, "\b(R|r)egulaion(s)?\b" , "$1egulation$2" )
NewStr := RegExReplace( NewStr, "\b(R|r)eguardless\b" , "$1egardless"  )
NewStr := RegExReplace( NewStr, "\b(R|r)egluar(ity|ly)?\b" , "$1egular$2" )
NewStr := RegExReplace( NewStr, "\b(R|r)egardes\b" , "$1egards" )
NewStr := RegExReplace( NewStr, "\b(R|r)efusla\b" , "$1efusal" )
NewStr := RegExReplace( NewStr, "\b(R|r)efromist\b" , "$1eformist" )
NewStr := RegExReplace( NewStr, "\b(R|r)efridgerator\b" , "$1efrigerator" )
NewStr := RegExReplace( NewStr, "\b(R|r)efridgeration\b" , "$1efrigeration" )
NewStr := RegExReplace( NewStr, "\b(R|r)efrers\b" , "$1efers" )
NewStr := RegExReplace( NewStr, "\b(R|r)effer(s?|ee?[ds]?|en[cs](e[ds]?|ing)|ent(s?|ial))\b" , "$1efer$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)eferrs\b" , "$1efers" )
NewStr := RegExReplace( NewStr, "\b(R|r)eferiang\b" , "$1eferring" )
NewStr := RegExReplace( NewStr, "\b(R|r)eferens(e[ds]?|ing)\b" , "$1eferenc$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)efedendum\b" , "$1eferendum" )
NewStr := RegExReplace( NewStr, "\b(R|r)efect\b" , "$1eflect" )
NewStr := RegExReplace( NewStr, "\b(R|r)ef?fer(ed|ing|als?)\b" , "$1eferr$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)eenforced\b" , "$1einforced" )
NewStr := RegExReplace( NewStr, "\b(R|r)eedeming\b" , "$1edeeming" )
NewStr := RegExReplace( NewStr, "\b(R|r)edic+ulous(|ly|ness)\b" , "$1idiculous$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)ecuiting\b" , "$1ecruiting" )
NewStr := RegExReplace( NewStr, "\b(R|r)ecrut(s?|ing|ed|ments?|ers?)\b" , "$1ecruit$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)ecrational\b" , "$1ecreational" )
NewStr := RegExReplace( NewStr, "\b(R|r)eco[ng]i([sz](e[ds]?|ing|abl[ey])|tions?)\b" , "$1ecogni$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)econ[cs]il(?:li|)at(ions?|ory)\b" , "$1econciliat$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)econtructed\b" , "$1econstructed" )
NewStr := RegExReplace( NewStr, "\b(R|r)ecommedations\b" , "$1ecommendations" )
NewStr := RegExReplace( NewStr, "\b(R|r)ecivership\b" , "$1eceivership" )
NewStr := RegExReplace( NewStr, "\b(R|r)ecipi(es?)\b" , "$1ecip$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)eciept\b" , "$1eceipt" )
NewStr := RegExReplace( NewStr, "\b(R|r)eciepents\b" , "$1ecipients" )
NewStr := RegExReplace( NewStr, "\b(R|r)ecid(es|ed|ents?|ing)?\b" , "$1eside$2" )
NewStr := RegExReplace( NewStr, "\b(R|r)eched\b" , "$1eached" )
NewStr := RegExReplace( NewStr, "\b(R|r)ec?quirment(s)?\b" , "$1equirement$2" )
NewStr := RegExReplace( NewStr, "\b(R|r)ec(?:ro|or)d(s|ings?|ed)?\b" , "$1ecord$2" )
NewStr := RegExReplace( NewStr, "\b(R|r)ec(?:c+on+[aeiou]+s+[aei]+|c*on(?:nn+|)+[aeiou]+s+[aei]+|c*on+(?:[eiou]?[aeiou]?|[aeiou]?[aeou]?)s+[aei]+|c*on+[aeiou]+s(?:ss+|)[aei]+|c*on+[aeiou]+s+(?:[ei]|ai))nce(s|)\b" , "$1econnaissance$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)ebounce\b" , "$1ebound" )
NewStr := RegExReplace( NewStr, "\b(R|r)ebllions\b" , "$1ebellions" )
NewStr := RegExReplace( NewStr, "\b(R|r)ebiulding\b" , "$1ebuilding" )
NewStr := RegExReplace( NewStr, "\b(R|r)eb(?:bel?|e)l(ed|ing|ions?|ious(|ly|ness))\b" , "$1ebell$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)eamain(s?|ed|ing|ders?)\b" , "$1emain$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)ealsitic\b" , "$1ealistic" )
NewStr := RegExReplace( NewStr, "\b(R|r)eala?t(e[ds]?|ion(s?|al|ships?)|iv(ely|es?|ity|is[mt]s?))\b" , "$1elat$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)eadmition\b" , "$1eadmission" )
NewStr := RegExReplace( NewStr, "\b(R|r)eadibility\b" , "$1eadability"  )
NewStr := RegExReplace( NewStr, "\b(R|r)eacll\b" , "$1ecall" )
NewStr := RegExReplace( NewStr, "\b(R|r)eacing\b" , "$1eaching" )
NewStr := RegExReplace( NewStr, "\b(R|r)ea?lita?ve(ly|s)?\b" , "$1elative$2" )
NewStr := RegExReplace( NewStr, "\b(R|r)e(?:sera|asear)ch(|ed|er?s?|ing|ists?|able)\b" , "$1esearch$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)e(?:pons|sponc|spoms)(es?|ive(|ly)|ibl[ey]|ibilit(y|ies))\b" , "$1espons$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)e(?:cqui?|qu)re(s|d)?\b" , "$1equire$2" )
NewStr := RegExReplace( NewStr, "\b(R|r)e(?:cc[ao]m?|co|om)mend(s?|ed|ers?|ing|ations?|atory|able)\b" , "$1ecommend$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)e(?:al[ae]a?|la?e)s(e[ds]?|ing)\b" , "$1eleas$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)atehr\b" , "$1ather" )
NewStr := RegExReplace( NewStr, "\b(R|r)asberry\b" , "$1aspberry" )
NewStr := RegExReplace( NewStr, "\b(R|r)ancourous\b" , "$1ancorous" )
NewStr := RegExReplace( NewStr, "\b(R|r)ailraod(s?|ing|ed|ers?)\b" , "$1ailroad$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)adify\b" , "$1atify" )
NewStr := RegExReplace( NewStr, "\b(R|r)adiactive\b" , "$1adioactive" )
NewStr := RegExReplace( NewStr, "\b(R|r)abinnical\b" , "$1abbinical" )
NewStr := RegExReplace( NewStr, "\b(R|r)a(?:ca|uc)u(s|sly)\b" , "$1aucou$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)(?:yth[iey]?|hyth[iey])m(s?|ic(s?|al|ally)|ists?)\b" , "$1hythm$2"  )
NewStr := RegExReplace( NewStr, "\b(R|r)(?:el?a|ael)ly\b" , "$1eally" )
NewStr := RegExReplace( NewStr, "\b(R|r)ésume\b" , "$1ésumé" )
NewStr := RegExReplace( NewStr, "\b(R|r)ésumes\b" , "$1ésumés" )
NewStr := RegExReplace( NewStr, "\b(Q|q|[Dd]isq)ualifi(y|ying)\b" , "$1ualif$2"  )
NewStr := RegExReplace( NewStr, "\b(Q|q)uizes\b" , "$1uizzes" )
NewStr := RegExReplace( NewStr, "\b(Q|q)uitted\b" , "$1uit" )
NewStr := RegExReplace( NewStr, "\b(Q|q)uinessential\b" , "$1uintessential" )
NewStr := RegExReplace( NewStr, "\b(Q|q)uicklyu\b" , "$1uickly" )
NewStr := RegExReplace( NewStr, "\b(Q|q)uestiosn\b" , "$1uestions" )
NewStr := RegExReplace( NewStr, "\b(Q|q)uestionnair\b" , "$1uestionnaire" )
NewStr := RegExReplace( NewStr, "\b(Q|q)uest(?:ionn|on)ab(le|ly|leness|ility)\b" , "$1uestionab$2"  )
NewStr := RegExReplace( NewStr, "\b(Q|q)ue(?:sion|stoin|tion|stiom)(s?|ed|ing|ers?)\b" , "$1uestion$2" )
NewStr := RegExReplace( NewStr, "\b(Q|q)uater(s|ed|ing|ly|lies|finals?|back(?:s?|ing|ed))?\b" , "$1uarter$2"  )
NewStr := RegExReplace( NewStr, "\b(Q|q)uarantaine(s)?\b" , "$1uarantine$2" )
NewStr := RegExReplace( NewStr, "\b(Q|q)uant(?:at|iti)y\b" , "$1uantity" )
NewStr := RegExReplace( NewStr, "\b(Q|q)ua(?:n|nit)it(y|ies)\b" , "$1uantit$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Uu]np|[Mm]isp|[Aa]pp)(?:rec[ei]+|ercie)v(e[ds]?|ing|abl[ey])\b" , "$1erceiv$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Uu]np)ub(?:ish|lis)(|ed|ing|er?s?|able)\b" , "$1ublish$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Uu]np)la?esant(|ly|ness)\b" , "$1leasant$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Uu]np)ar(?:rall?e|r?alel?|r?allel)l(s?|i[sz]e[ds]?|isms?|epipeds?|ograms?|ed)\b" , "$1arallel$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Uu]nderp)riv(?:iled|[ae]l[ei]d?|ili)g(e[dsr]?|ing)\b" , "$1rivileg$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Rr]ep)recussi(ons?|ve|vely)\b" , "$1ercussi$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Nn]onp)er?form(?:en|n?a)(ces?)\b" , "$1erforman$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Ii]mp)rision(s?|ers?|ed|ing|ment)\b" , "$1rison$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Ii]mp)os(?:s?ibl|ibil)it(y|ies)\b" , "$1ossibilit$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Ii]mp)ersonaly\b" , "$1ersonally"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Ii]mp)er(?:man[ai]|m[ei]n[aei]|n[aei]m[aei])n(ts?|c[ey]|tly)\b" , "$1ermanen$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Dd]isp|[Rr]ep)os+es(e[ds]|i(ng|ve)(|ly))\b" , "$1ossess$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Dd]isp|[Rr]ep)os(?:es?|se)s(e[sd]|ing|ions?|ive(s?|ly|ness)|ors?)\b" , "$1ossess$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Dd]isp|[Ii]mp|[Rr]ep|[Cc]omp|[Ss]upp)os(?:ititi?|[io]sti|ti)(on(s?|ed|ing|al|ally)|ve(s?|ly))\b" , "$1ositi$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Dd]isp)roportiat(e|ely)\b" , "$1roportionat$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p|[Aa]pp|[Ii]mp|[Dd]isp|[Dd]isapp|[Rr]ep)roov(e[dnrs]?|ing(|ly)|abl[ey])\b" , "$1rov$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)woer\b" , "$1ower" )
NewStr := RegExReplace( NewStr, "\b(P|p)uting\b" , "$1utting" )
NewStr := RegExReplace( NewStr, "\b(P|p)ususading\b" , "$1ersuading" )
NewStr := RegExReplace( NewStr, "\b(P|p)ursua(de[sd]?|ding|si(on|ve|vely))\b" , "$1ersua$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)urpotedly\b" , "$1urportedly" )
NewStr := RegExReplace( NewStr, "\b(P|p)urposedly\b" , "$1urposely" )
NewStr := RegExReplace( NewStr, "\b(P|p)uritannical\b" , "$1uritanical" )
NewStr := RegExReplace( NewStr, "\b(P|p)umkin\b" , "$1umpkin" )
NewStr := RegExReplace( NewStr, "\b(P|p)uchasing\b" , "$1urchasing" )
NewStr := RegExReplace( NewStr, "\b(P|p)ublically\b" , "$1ublicly" )
NewStr := RegExReplace( NewStr, "\b(P|p)togress\b" , "$1rogress" )
NewStr := RegExReplace( NewStr, "\b(P|p)suedo\b" , "$1seudo"  )
NewStr := RegExReplace( NewStr, "\b(P|p)seudononymous\b" , "$1seudonymous" )
NewStr := RegExReplace( NewStr, "\b(P|p)s(?:eu|ue)donyn(s)?\b" , "$1seudonym$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)roximty\b" , "$1roximity" )
NewStr := RegExReplace( NewStr, "\b(P|p)rovisonal(ly)?\b" , "$1rovisional$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)rovi(?:ni)?cial\b" , "$1rovincial" )
NewStr := RegExReplace( NewStr, "\b(P|p)rovded\b" , "$1rovided" )
NewStr := RegExReplace( NewStr, "\b(P|p)rovacative\b" , "$1rovocative" )
NewStr := RegExReplace( NewStr, "\b(P|p)rouncements\b" , "$1ronouncements" )
NewStr := RegExReplace( NewStr, "\b(P|p)rot[ao]ganis(ts?)\b" , "$1rotagonis$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)rotruberance(s)?\b" , "$1rotuberance$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)rotocal\b" , "$1rotocol" )
NewStr := RegExReplace( NewStr, "\b(P|p)rotie(n(|ase|oid|uria)s?|ds?)\b" , "$1rotei$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)roseletyzing\b" , "$1roselytizing" )
NewStr := RegExReplace( NewStr, "\b(P|p)ropper(ly)?\b" , "$1roper$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)ropotions\b" , "$1roportions" )
NewStr := RegExReplace( NewStr, "\b(P|p)ropostion\b" , "$1roposition" )
NewStr := RegExReplace( NewStr, "\b(P|p)ropogat(e[ds]?|ing|ion)\b" , "$1ropagat$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)ropogand(a|is[tm]s?|istic(|ally)|iz(e[ds]?|ers?|ing))\b" , "$1ropagand$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)ropmted\b" , "$1rompted" )
NewStr := RegExReplace( NewStr, "\b(P|p)rophacy\b" , "$1rophecy" )
NewStr := RegExReplace( NewStr, "\b(P|p)rop(?:ieta|rieto)r(y|ily|ies)\b" , "$1roprietar$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)ronounciatio(ns?)\b" , "$1ronunciatio$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)ronounched\b" , "$1ronounced" )
NewStr := RegExReplace( NewStr, "\b(P|p)ronomial\b" , "$1ronominal" )
NewStr := RegExReplace( NewStr, "\b(P|p)romotted\b" , "$1romoted" )
NewStr := RegExReplace( NewStr, "\b(P|p)romiscous\b" , "$1romiscuous" )
NewStr := RegExReplace( NewStr, "\b(P|p)rologomena\b" , "$1rolegomena" )
NewStr := RegExReplace( NewStr, "\b(P|p)rohabition\b" , "$1rohibition" )
NewStr := RegExReplace( NewStr, "\b(P|p)rogramable\b" , "$1rogrammable" )
NewStr := RegExReplace( NewStr, "\b(P|p)rogessed\b" , "$1rogressed" )
NewStr := RegExReplace( NewStr, "\b(P|p)rofilic\b" , "$1rolific" )
NewStr := RegExReplace( NewStr, "\b(P|p)rofesion(als?|ally|s)?\b" , "$1rofession$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)rofes(?:o|se)r(s)?\b" , "$1rofessor$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)rof+i[stc]i[ea]n(t|cy|tly)\b" , "$1roficien$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)rof(?:fes+ion+al?|esion+al?|essionnal?|essional)l(s?|ly|ism)?\b" , "$1rofessional$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)rof(?:es{2,}|fes?)s(or(s?|ships?)|ion(s?|als?|ally)|e[ds]|ing)?\b" , "$1rofess$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)roclam(e[dsr]|ing)\b" , "$1roclaim$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)rocl(?:ai|o)mation(s)?\b" , "$1roclamation$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)roces\b" , "$1rocess" )
NewStr := RegExReplace( NewStr, "\b(P|p)rocesser(s)?\b" , "$1rocessor$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)roceedure\b" , "$1rocedure" )
NewStr := RegExReplace( NewStr, "\b(P|p)roceding\b" , "$1roceeding" )
NewStr := RegExReplace( NewStr, "\b(P|p)rocedings\b" , "$1roceedings" )
NewStr := RegExReplace( NewStr, "\b(P|p)rocedger\b" , "$1rocedure" )
NewStr := RegExReplace( NewStr, "\b(P|p)rocede\b" , "$1roceed" )
NewStr := RegExReplace( NewStr, "\b(P|p)rocedes\b" , "$1roceeds" )
NewStr := RegExReplace( NewStr, "\b(P|p)roceded\b" , "$1roceeded" )
NewStr := RegExReplace( NewStr, "\b(P|p)rocces+(|e[ds]|ing|ors?|ions?)\b" , "$1rocess$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)robelm\b" , "$1roblem" )
NewStr := RegExReplace( NewStr, "\b(P|p)robelms\b" , "$1roblems" )
NewStr := RegExReplace( NewStr, "\b(P|p)roball?y\b" , "$1robably"  )
NewStr := RegExReplace( NewStr, "\b(P|p)robalibity\b" , "$1robability" )
NewStr := RegExReplace( NewStr, "\b(P|p)robablly\b" , "$1robably" )
NewStr := RegExReplace( NewStr, "\b(P|p)robablistic\b" , "$1robabilistic" )
NewStr := RegExReplace( NewStr, "\b(P|p)robabilaty\b" , "$1robability" )
NewStr := RegExReplace( NewStr, "\b(P|p)rivte\b" , "$1rivate" )
NewStr := RegExReplace( NewStr, "\b(P|p)rivledge\b" , "$1rivilege" )
NewStr := RegExReplace( NewStr, "\b(P|p)rivilage\b" , "$1rivilege" )
NewStr := RegExReplace( NewStr, "\b(P|p)rivelleges\b" , "$1rivileges" )
NewStr := RegExReplace( NewStr, "\b(P|p)rimordal\b" , "$1rimordial" )
NewStr := RegExReplace( NewStr, "\b(P|p)rimative\b" , "$1rimitive" )
NewStr := RegExReplace( NewStr, "\b(P|p)rimatives\b" , "$1rimitives" )
NewStr := RegExReplace( NewStr, "\b(P|p)rimatively\b" , "$1rimitively" )
NewStr := RegExReplace( NewStr, "\b(P|p)rimarly\b" , "$1rimarily"  )
NewStr := RegExReplace( NewStr, "\b(P|p)riestood\b" , "$1riesthood" )
NewStr := RegExReplace( NewStr, "\b(P|p)ri(?:ci|nc)p(als?|ally|le[ds]?)\b" , "$1rincip$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)revivous\b" , "$1revious" )
NewStr := RegExReplace( NewStr, "\b(P|p)reverse\b" , "$1erverse" )
NewStr := RegExReplace( NewStr, "\b(P|p)retect(ion|ed|s|ive|ively)?\b" , "$1rotect$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)resum(?:abe|ib)ly\b" , "$1resumably" )
NewStr := RegExReplace( NewStr, "\b(P|p)respective\b" , "$1erspective" )
NewStr := RegExReplace( NewStr, "\b(P|p)res(?:edenti|idenit)al\b" , "$1residential" )
NewStr := RegExReplace( NewStr, "\b(P|p)res(?:anc|ens)e\b" , "$1resence" )
NewStr := RegExReplace( NewStr, "\b(P|p)rer?iod(s|ic|icals?|ically)?\b" , "$1eriod$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)repondance\b" , "$1repondence"  )
NewStr := RegExReplace( NewStr, "\b(P|p)repartion\b" , "$1reparation" )
NewStr := RegExReplace( NewStr, "\b(P|p)repair\b" , "$1repare" )
NewStr := RegExReplace( NewStr, "\b(P|p)reocupation\b" , "$1reoccupation" )
NewStr := RegExReplace( NewStr, "\b(P|p)remission\b" , "$1ermission" )
NewStr := RegExReplace( NewStr, "\b(P|p)reminence\b" , "$1reeminence" )
NewStr := RegExReplace( NewStr, "\b(P|p)remillenial\b" , "$1remillennial" )
NewStr := RegExReplace( NewStr, "\b(P|p)reliferation\b" , "$1roliferation" )
NewStr := RegExReplace( NewStr, "\b(P|p)reist(s?|ly|hoods?)\b" , "$1riest$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)reg(?:a|ne)n(cy|cies|t)\b" , "$1regnanc$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)referrably\b" , "$1referably" )
NewStr := RegExReplace( NewStr, "\b(P|p)refernece(s)?\b" , "$1reference$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)redomiantly\b" , "$1redominately" )
NewStr := RegExReplace( NewStr, "\b(P|p)redicitons\b" , "$1redictions" )
NewStr := RegExReplace( NewStr, "\b(P|p)redicatble\b" , "$1redictable" )
NewStr := RegExReplace( NewStr, "\b(P|p)red(?:[ai][cs]+es+[eo]|[aie](?:s|[cs]{2,})es+[eo]|[aie][cs]+es[eo]|[aie][cs]+es+e)r(s?)\b" , "$1redecessor$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)recurser\b" , "$1recursor" )
NewStr := RegExReplace( NewStr, "\b(P|p)recisly\b" , "$1recisely" )
NewStr := RegExReplace( NewStr, "\b(P|p)recentage\b" , "$1ercentage" )
NewStr := RegExReplace( NewStr, "\b(P|p)receed\b" , "$1recede" )
NewStr := RegExReplace( NewStr, "\b(P|p)receeds\b" , "$1recedes" )
NewStr := RegExReplace( NewStr, "\b(P|p)recedessor\b" , "$1redecessor" )
NewStr := RegExReplace( NewStr, "\b(P|p)reample\b" , "$1reamble" )
NewStr := RegExReplace( NewStr, "\b(P|p)re-Colombian\b" , "$1re-Columbian" )
NewStr := RegExReplace( NewStr, "\b(P|p)racticly\b" , "$1ractically" )
NewStr := RegExReplace( NewStr, "\b(P|p)ractially\b" , "$1ractically" )
NewStr := RegExReplace( NewStr, "\b(P|p)racti(?:ci)?oner(s)?\b" , "$1ractitioner$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)ra(?:iry|rie)(s)?\b" , "$1rairie$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)r?o(?:tr|rt)a(y(?:als?|s|ed|ing)?|it(?:ure)?s?)\b" , "$1ortra$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)r(?:opo|apa)gand(as?|i[sz]e[ds]?|ists?)\b" , "$1ropagand$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)r(?:imie|eme?i)r(s?|e[ds]?|ing)\b" , "$1remier$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)owerfull\b" , "$1owerful"  )
NewStr := RegExReplace( NewStr, "\b(P|p)otatos\b" , "$1otatoes" )
NewStr := RegExReplace( NewStr, "\b(P|p)otatoe\b" , "$1otato" )
NewStr := RegExReplace( NewStr, "\b(P|p)osthomous\b" , "$1osthumous" )
NewStr := RegExReplace( NewStr, "\b(P|p)ost(?:h?umos|humousl)(|ly)\b" , "$1osthumous$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)ossib(?:il|lili?)ty\b" , "$1ossibility" )
NewStr := RegExReplace( NewStr, "\b(P|p)ossessess\b" , "$1ossesses" )
NewStr := RegExReplace( NewStr, "\b(P|p)oss(?:ab|ibi)l(e|y)\b" , "$1ossibl$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)osess\b" , "$1ossess" )
NewStr := RegExReplace( NewStr, "\b(P|p)orvide\b" , "$1rovide" )
NewStr := RegExReplace( NewStr, "\b(P|p)ortugu?ee?u?se\b" , "$1ortuguese"  )
NewStr := RegExReplace( NewStr, "\b(P|p)ortraing\b" , "$1ortraying" )
NewStr := RegExReplace( NewStr, "\b(P|p)orblem\b" , "$1roblem" )
NewStr := RegExReplace( NewStr, "\b(P|p)orblems\b" , "$1roblems" )
NewStr := RegExReplace( NewStr, "\b(P|p)opulare\b" , "$1opular" )
NewStr := RegExReplace( NewStr, "\b(P|p)opularaty\b" , "$1opularity" )
NewStr := RegExReplace( NewStr, "\b(P|p)oportional\b" , "$1roportional" )
NewStr := RegExReplace( NewStr, "\b(P|p)op(?:ulati|luatio|oulatio)(ns?)\b" , "$1opulatio$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)omotion\b" , "$1romotion" )
NewStr := RegExReplace( NewStr, "\b(P|p)omegranite\b" , "$1omegranate" )
NewStr := RegExReplace( NewStr, "\b(P|p)olysacc?(?:aride|charid)(s)?\b" , "$1olysaccharide$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)olyphonyic\b" , "$1olyphonic" )
NewStr := RegExReplace( NewStr, "\b(P|p)olut(ed|es?|ing|ion)\b" , "$1ollute$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)olt?ical\b" , "$1olitical" )
NewStr := RegExReplace( NewStr, "\b(P|p)olsa\b" , "$1ölsa" )
NewStr := RegExReplace( NewStr, "\b(P|p)oliti(?:ti|c)an(s?)\b" , "$1olitician$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)olitcal(|ly)\b" , "$1olitical$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)olinator(s)?\b" , "$1ollinator$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)o?eo(?:lpe|pel)(s)?\b" , "$1eople$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)o(?:ver|we)ful\b" , "$1owerful" )
NewStr := RegExReplace( NewStr, "\b(P|p)o(?:isi|sio)n(s|ed|ous|ing)?\b" , "$1oison$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)lum(?:met|et?)t(s?|ing|ed)\b" , "$1lummet$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)lebicite\b" , "$1lebiscite" )
NewStr := RegExReplace( NewStr, "\b(P|p)leasent(ly)?\b" , "$1leasant$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)lay(?:right|write)(s?)\b" , "$1laywright$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)lausable\b" , "$1lausible" )
NewStr := RegExReplace( NewStr, "\b(P|p)laug(e[ds]?)\b" , "$1lagu$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)lateu\b" , "$1lateau" )
NewStr := RegExReplace( NewStr, "\b(P|p)lat(?:ni?|ini)um(s?)\b" , "$1latinum$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)lantiff\b" , "$1laintiff" )
NewStr := RegExReplace( NewStr, "\b(P|p)lanation\b" , "$1lantation" )
NewStr := RegExReplace( NewStr, "\b(P|p)lan(?:at[ae]|ete)r(y|iums?|ia)\b" , "$1lanetar$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)lagarism\b" , "$1lagiarism" )
NewStr := RegExReplace( NewStr, "\b(P|p)lacque(s?)\b" , "$1laque$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)ion(?:n|n?ee)e+r(s|ed|ing)?\b" , "$1ioneer$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)inoneered\b" , "$1ioneered" )
NewStr := RegExReplace( NewStr, "\b(P|p)inn?app?le(s)?\b" , "$1ineapple$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)ilgrimmage\b" , "$1ilgrimage" )
NewStr := RegExReplace( NewStr, "\b(P|p)ilgrimmages\b" , "$1ilgrimages" )
NewStr := RegExReplace( NewStr, "\b(P|p)ich\b" , "$1itch" )
NewStr := RegExReplace( NewStr, "\b(P|p)hongraph\b" , "$1honograph" )
NewStr := RegExReplace( NewStr, "\b(P|p)hisic(s?|ists?|al(s?|ly|ity|is[mt]s?)|ize[sd]?|ians?)\b" , "$1hysic$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)hilisophy\b" , "$1hilosophy" )
NewStr := RegExReplace( NewStr, "\b(P|p)hilisopher\b" , "$1hilosopher" )
NewStr := RegExReplace( NewStr, "\b(P|p)hil(?:osa?|a?so)ph(ers?|ic(|al|ally)|y|ies|i[sz]e[drs]?)\b" , "$1hilosoph$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)henonmena\b" , "$1henomena" )
NewStr := RegExReplace( NewStr, "\b(P|p)henomenonly\b" , "$1henomenally" )
NewStr := RegExReplace( NewStr, "\b(P|p)henomenonal\b" , "$1henomenal" )
NewStr := RegExReplace( NewStr, "\b(P|p)henom(?:on)?(?:enom|onon)\b" , "$1henomenon"  )
NewStr := RegExReplace( NewStr, "\b(P|p)h(?:ill?i|yll?o)sophical(ly)?\b" , "$1hilosophical$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)etetion\b" , "$1etition" )
NewStr := RegExReplace( NewStr, "\b(P|p)essiary\b" , "$1essary" )
NewStr := RegExReplace( NewStr, "\b(P|p)ertubation\b" , "$1erturbation" )
NewStr := RegExReplace( NewStr, "\b(P|p)ertubations\b" , "$1erturbations" )
NewStr := RegExReplace( NewStr, "\b(P|p)ersuded\b" , "$1ersuaded" )
NewStr := RegExReplace( NewStr, "\b(P|p)ersonn?ell\b" , "$1ersonnel" )
NewStr := RegExReplace( NewStr, "\b(P|p)erson(nages?)\b" , "$1erso$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)ersistance\b" , "$1ersistence" )
NewStr := RegExReplace( NewStr, "\b(P|p)erse(?:rver[ae]|vere)n(ce|t|tly)\b" , "$1erseveran$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)erscri(be[sd]?|bing|bers?|pti(ons?|ve|vely|ble|vis[tm]s?))\b" , "$1rescri$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)erpindicular\b" , "$1erpendicular" )
NewStr := RegExReplace( NewStr, "\b(P|p)erosnality\b" , "$1ersonality" )
NewStr := RegExReplace( NewStr, "\b(P|p)eronal\b" , "$1ersonal" )
NewStr := RegExReplace( NewStr, "\b(P|p)erogativ(e[sd]?)\b" , "$1rerogativ$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)ermissable\b" , "$1ermissible" )
NewStr := RegExReplace( NewStr, "\b(P|p)erjor[ai]ti(ves?|vely|ons?)\b" , "$1ejorati$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)erjery\b" , "$1erjury" )
NewStr := RegExReplace( NewStr, "\b(P|p)eripherial(s|ly)?\b" , "$1eripheral$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)eripathetic\b" , "$1eripatetic" )
NewStr := RegExReplace( NewStr, "\b(P|p)erimite(rs?)\b" , "$1erimete$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)erformes\b" , "$1erforms" )
NewStr := RegExReplace( NewStr, "\b(P|p)ereniall?y\b" , "$1erennially" )
NewStr := RegExReplace( NewStr, "\b(P|p)ercepted\b" , "$1erceived" )
NewStr := RegExReplace( NewStr, "\b(P|p)erade\b" , "$1arade" )
NewStr := RegExReplace( NewStr, "\b(P|p)er(?:iste|sista)nt\b" , "$1ersistent" )
NewStr := RegExReplace( NewStr, "\b(P|p)er(?:hasp|heaps|hpas|phas)\b" , "$1erhaps" )
NewStr := RegExReplace( NewStr, "\b(P|p)eom(s)?\b" , "$1oem$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)enerator\b" , "$1enetrator" )
NewStr := RegExReplace( NewStr, "\b(P|p)en(?:n?is|nins|sin)ula(r)?\b" , "$1eninsula$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)eleton\b" , "$1eloton" )
NewStr := RegExReplace( NewStr, "\b(P|p)eic(e[ds]?|ing|emeal|ework)\b" , "$1iec$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)edestrain(s?|ism)\b" , "$1edestrian$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)eculure\b" , "$1eculiar" )
NewStr := RegExReplace( NewStr, "\b(P|p)eageant\b" , "$1ageant" )
NewStr := RegExReplace( NewStr, "\b(P|p)eacefull\b" , "$1eaceful"  )
NewStr := RegExReplace( NewStr, "\b(P|p)e(?:for|rfo)m(s?|ed|ers?|ing|able|ances?)\b" , "$1erform$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)citure\b" , "$1icture" )
NewStr := RegExReplace( NewStr, "\b(P|p)aymetn(s)?\b" , "$1ayment$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)avillion\b" , "$1avilion" )
NewStr := RegExReplace( NewStr, "\b(P|p)attented\b" , "$1atented" )
NewStr := RegExReplace( NewStr, "\b(P|p)atrol(ing|e[dr])\b" , "$1atroll$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)as[st]tim(es?)\b" , "$1astim$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)astural\b" , "$1astoral" )
NewStr := RegExReplace( NewStr, "\b(P|p)asserbys\b" , "$1assersby" )
NewStr := RegExReplace( NewStr, "\b(P|p)asengers\b" , "$1assengers" )
NewStr := RegExReplace( NewStr, "\b(P|p)ased\b" , "$1assed" )
NewStr := RegExReplace( NewStr, "\b(P|p)ary\b" , "$1arty" )
NewStr := RegExReplace( NewStr, "\b(P|p)articu(?:lar|all?|arl|laril)y\b" , "$1articularly"  )
NewStr := RegExReplace( NewStr, "\b(P|p)arrakeets\b" , "$1arakeets" )
NewStr := RegExReplace( NewStr, "\b(P|p)arr?al(?:ell|lel)?y\b" , "$1arallelly" )
NewStr := RegExReplace( NewStr, "\b(P|p)araphenalia\b" , "$1araphernalia" )
NewStr := RegExReplace( NewStr, "\b(P|p)aranthesis\b" , "$1arenthesis" )
NewStr := RegExReplace( NewStr, "\b(P|p)ar?l[ai]i?ment(s?|ary|arians?)\b" , "$1arliament$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)ar(?:r+is+h?i?|is+i?|is+h)oner(s?|ship)\b" , "$1arishioner$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)ar(?:ituclar|ticualr)\b" , "$1articular" )
NewStr := RegExReplace( NewStr, "\b(P|p)ar(?:el?|a)lels\b" , "$1arallels" )
NewStr := RegExReplace( NewStr, "\b(P|p)apaer\b" , "$1aper" )
NewStr := RegExReplace( NewStr, "\b(P|p)antomine\b" , "$1antomime" )
NewStr := RegExReplace( NewStr, "\b(P|p)am[fp]let\b" , "$1amphlet" )
NewStr := RegExReplace( NewStr, "\b(P|p)allete\b" , "$1alette" )
NewStr := RegExReplace( NewStr, "\b(P|p)alce\b" , "$1lace" )
NewStr := RegExReplace( NewStr, "\b(P|p)aitience\b" , "$1atience" )
NewStr := RegExReplace( NewStr, "\b(P|p)a(?:rticlu?|ticul)a(rs?|rly|ri(ty|ties|s[mt]|ze[sdr]?)|te[sdr]?|ting|tion)\b" , "$1articula$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)a(?:ide|yed)\b" , "$1aid" )
NewStr := RegExReplace( NewStr, "\b(P|p)(api?er[- ][Mm]ache|api?er[- ][Mm]aché|apier mâché)\b" , "$1apier-mâché"  )
NewStr := RegExReplace( NewStr, "\b(P|p)(?:syh|ysc)ic(s)?\b" , "$1sychic$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)(?:soi|os[st]i)tion(s|ed|al|ally)?\b" , "$1osition$2" )
NewStr := RegExReplace( NewStr, "\b(P|p)(?:r?up|upr)os(e([sd]?|ful|less)(|ly)|ing)\b" , "$1urpos$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)(?:hych|syc)(es?|(|edel|ot)ics?|iatri(c|st)s?|olog(y|ical(|ly)|ists?))\b" , "$1sych$2"  )
NewStr := RegExReplace( NewStr, "\b(P|p)(?:eotr|oet)y\b" , "$1oetry" )
NewStr := RegExReplace( NewStr, "\b(P|p)(?:eop[el]|oeple)(d?|s)\b" , "$1eople$2"  )
NewStr := RegExReplace( NewStr, "\b(P|a)racti(?:cle|al)\b" , "$1ractical"  )
NewStr := RegExReplace( NewStr, "\b(O|o|[Uu]no)r(?:gi|ig)ni?a(l|lly|ted?|ting|t(e|ion|or)s?)\b" , "$1rigina$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o|[Uu]no)f?fici?aly\b" , "$1fficially"  )
NewStr := RegExReplace( NewStr, "\b(O|o|[Uu]no)f(?:ficai?|icia)l(s?|ly|dom|ism)\b" , "$1fficial$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o|[Uu]no)c(?:u|c?up)p(y|ie[sd]|ying|ants?)\b" , "$1ccup$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o|[Ss]u|[Pp]resu)pos(e[ds]?|ing|it(e|ion)s?|(ite|ed|ing)ly)\b" , "$1ppos$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o|[Dd]iso|[Rr]eo)rg(?:an|i?ni)(s|z)(e[ds]?|ing|ation(s?|al))\b" , "$1rgani$2$3"  )
NewStr := RegExReplace( NewStr, "\b(O|o|[Dd]iso)bedian(t|ce|tly)\b" , "$1bedien$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o|[Aa]ntio)xiden(ts?)\b" , "$1xidan$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)xi(?:moron|gen)\b" , "$1xy$2" )
NewStr := RegExReplace( NewStr, "\b(O|o)verwheliming\b" , "$1verwhelming" )
NewStr := RegExReplace( NewStr, "\b(O|o)vershaddowed\b" , "$1vershadowed" )
NewStr := RegExReplace( NewStr, "\b(O|o)ver(id(es?|den|ing)|ode)\b" , "$1verr$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)ver(?:id|r?i)den\b" , "$1verridden"  )
NewStr := RegExReplace( NewStr, "\b(O|o)utter(|most|wear)\b" , "$1uter$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)ur's\b" , "$1urs"  )
NewStr := RegExReplace( NewStr, "\b(O|o)uevr(es?)\b" , "$1euvr$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)tu\b" , "$1ut" )
NewStr := RegExReplace( NewStr, "\b(O|o)therw\b" , "$1thers" )
NewStr := RegExReplace( NewStr, "\b(O|o)therhand\b" , "$1ther hand"  )
NewStr := RegExReplace( NewStr, "\b(O|o)rthagonal(ly|s)?\b" , "$1rthogonal$2" )
NewStr := RegExReplace( NewStr, "\b(O|o)rphan(ges?)\b" , "$1rphana$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)rigional\b" , "$1riginal" )
NewStr := RegExReplace( NewStr, "\b(O|o)rig(?:[aie]nn?aly|in[in]ally)\b" , "$1riginally"  )
NewStr := RegExReplace( NewStr, "\b(O|o)ridinarily\b" , "$1rdinarily" )
NewStr := RegExReplace( NewStr, "\b(O|o)rgin\b" , "$1rigin" )
NewStr := RegExReplace( NewStr, "\b(O|o)rganiztion\b" , "$1rganization" )
NewStr := RegExReplace( NewStr, "\b(O|o)rganim\b" , "$1rganism" )
NewStr := RegExReplace( NewStr, "\b(O|o)rded\b" , "$1rdered" )
NewStr := RegExReplace( NewStr, "\b(O|o)rch[aiou]?stra(s?|ted?|tions?|ting|ters?|l|lly)\b" , "$1rchestra$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)ptomism\b" , "$1ptimism" )
NewStr := RegExReplace( NewStr, "\b(O|o)ptmizations\b" , "$1ptimizations" )
NewStr := RegExReplace( NewStr, "\b(O|o)pthal?m(olog(y|ists?)|ic)\b" , "$1phthalm$2" )
NewStr := RegExReplace( NewStr, "\b(O|o)pressive\b" , "$1ppressive" )
NewStr := RegExReplace( NewStr, "\b(O|o)pression\b" , "$1ppression" )
NewStr := RegExReplace( NewStr, "\b(O|o)pposse(d|s)?\b" , "$1ppose$2" )
NewStr := RegExReplace( NewStr, "\b(O|o)pposible\b" , "$1pposable" )
NewStr := RegExReplace( NewStr, "\b(O|o)ppononent\b" , "$1pponent" )
NewStr := RegExReplace( NewStr, "\b(O|o)ppinion\b" , "$1pinion" )
NewStr := RegExReplace( NewStr, "\b(O|o)ppenly\b" , "$1penly" )
NewStr := RegExReplace( NewStr, "\b(O|o)pp?ositition\b" , "$1pposition" )
NewStr := RegExReplace( NewStr, "\b(O|o)pp(?:osit|osate|asite)(s)?\b" , "$1pposite$2" )
NewStr := RegExReplace( NewStr, "\b(O|o)peness\b" , "$1penness" )
NewStr := RegExReplace( NewStr, "\b(O|o)p(?:pr?o|p[eu]r|or)tuni(ty|ties|s[tm]s?|stic(|ally))\b" , "$1pportuni$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)p(?:pe|er)rationn?al(|ly)\b" , "$1perational$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)p(?:pe|er)rat(e[sd]?|ing|ion(s?|al|ally))\b" , "$1perat$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)p(?:pen?|en)ning(s?)\b" , "$1pening$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)p(?:o|pe)(nents?|se[ds]?|sing|sites?)\b" , "$1ppo$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)nyl\b" , "$1nly" )
NewStr := RegExReplace( NewStr, "\b(O|o)nomatopeo?i(a|c|cally)\b" , "$1nomatopoei$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)mniverously\b" , "$1mnivorously" )
NewStr := RegExReplace( NewStr, "\b(O|o)mmitting\b" , "$1mitting" )
NewStr := RegExReplace( NewStr, "\b(O|o)mm?ision(s)?\b" , "$1mission$2" )
NewStr := RegExReplace( NewStr, "\b(O|o)mlette\b" , "$1melette" )
NewStr := RegExReplace( NewStr, "\b(O|o)merta\b" , "$1mertà"  )
NewStr := RegExReplace( NewStr, "\b(O|o)m(?:ni|en|min)ou(s|sly)\b" , "$1minou$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)mm?itt?(ed|ing)\b" , "$1mitt$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)f\s+of\b" , "$1f"  )
NewStr := RegExReplace( NewStr, "\b(O|o)ftenly\b" , "$1ften" )
NewStr := RegExReplace( NewStr, "\b(O|o)ft(|en)[-\s]+times\b" , "$1ft$2times"  )
NewStr := RegExReplace( NewStr, "\b(O|o)ffereings\b" , "$1fferings" )
NewStr := RegExReplace( NewStr, "\b(O|o)ffcially\b" , "$1fficially" )
NewStr := RegExReplace( NewStr, "\b(O|o)ffcers\b" , "$1fficers" )
NewStr := RegExReplace( NewStr, "\b(O|o)eprator\b" , "$1perator" )
NewStr := RegExReplace( NewStr, "\b(O|o)dourous\b" , "$1dorous" )
NewStr := RegExReplace( NewStr, "\b(O|o)douriferous\b" , "$1doriferous" )
NewStr := RegExReplace( NewStr, "\b(O|o)ctohedr(ons?|al?|ally)\b" , "$1ctahedr$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)ctiv(es?|al)\b" , "$1ctav$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)cc?a(?:s[st]|t|is)io?n(s?|al|ally|ed|ing)\b" , "$1ccasion$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)c(?:urr?|co?urr)(s)?\b" , "$1ccur$2" )
NewStr := RegExReplace( NewStr, "\b(O|o)c(?:c?urr?a|cure|urr?e)n(ces?|t)\b" , "$1ccurren$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)c(?:as?|cai?s|cai)si?on(s|al|ally|ed|ing)?\b" , "$1ccasion$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)bviou?suly\b" , "$1bviously"  )
NewStr := RegExReplace( NewStr, "\b(O|o)bstruced\b" , "$1bstructed" )
NewStr := RegExReplace( NewStr, "\b(O|o)bsta(?:cal|ncle)(s)?\b" , "$1bstacle$2" )
NewStr := RegExReplace( NewStr, "\b(O|o)bsolecence\b" , "$1bsolescence" )
NewStr := RegExReplace( NewStr, "\b(O|o)bselete(d?|s|ly)\b" , "$1bsolete$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)b(?:sses+|ses|ess)(|e[ds]|i(ng|ve|ons?)(|ly)|ors?)\b" , "$1bsess$2"  )
NewStr := RegExReplace( NewStr, "\b(O|o)(?:teh|hte)r(s)?\b" , "$1ther$2" )
NewStr := RegExReplace( NewStr, "\b(N|n|[Uu]nn)otic[ai]bl(e|y)\b" , "$1oticeabl$2"  )
NewStr := RegExReplace( NewStr, "\b(N|n|[Uu]nn)e(?:ss?|cc?)e(?:ss?|cc?)ar(y|ily)\b" , "$1ecessar$2"  )
NewStr := RegExReplace( NewStr, "\b(N|n|[Uu]nn)e(?:cass|ssas)ar(y|ily)\b" , "$1ecessar$2" )
NewStr := RegExReplace( NewStr, "\b(N|n|[Uu]nn)atur(?:el?|a|uru?al?)ly\b" , "$1aturally"  )
NewStr := RegExReplace( NewStr, "\b(N|n|[Rr]en)egocia(ted?|ting|t(e|ion|or)s?|bl[ey]|bility|nts?)\b" , "$1egotia$2"  )
NewStr := RegExReplace( NewStr, "\b(N|n|[Aa]bn)ormaly\b" , "$1ormally"  )
NewStr := RegExReplace( NewStr, "\b(N|n)wo\b" , "$1ow" )
NewStr := RegExReplace( NewStr, "\b(N|n)we\b" , "$1ew" )
NewStr := RegExReplace( NewStr, "\b(N|n)ver\b" , "$1ever" )
NewStr := RegExReplace( NewStr, "\b(N|n)uturing\b" , "$1urturing" )
NewStr := RegExReplace( NewStr, "\b(N|n)utritent(s)?\b" , "$1utrient$2" )
NewStr := RegExReplace( NewStr, "\b(N|n)uptual\b" , "$1uptial" )
NewStr := RegExReplace( NewStr, "\b(N|n)umber[ai]ca(l|lly)\b" , "$1umerica$2"  )
NewStr := RegExReplace( NewStr, "\b(N|n)um(?:eri|ber)ous(|ness|ly)\b" , "$1umerous$2"  )
NewStr := RegExReplace( NewStr, "\b(N|n)ucule?ar\b" , "$1uclear" )
NewStr := RegExReplace( NewStr, "\b(N|n)u(?:isans|sanc)e\b" , "$1uisance" )
NewStr := RegExReplace( NewStr, "\b(N|n)owe\b" , "$1ow" )
NewStr := RegExReplace( NewStr, "\b(N|n)owdays\b" , "$1owadays"  )
NewStr := RegExReplace( NewStr, "\b(N|n)oveau\b" , "$1ouveau" )
NewStr := RegExReplace( NewStr, "\b(N|n)otwhithstanding\b" , "$1otwithstanding" )
NewStr := RegExReplace( NewStr, "\b(N|n)otive(s|d)?\b" , "$1otice$2" )
NewStr := RegExReplace( NewStr, "\b(N|n)oticeing\b" , "$1oticing" )
NewStr := RegExReplace( NewStr, "\b(N|n)otib(l[ey]|ility)\b" , "$1otab$2" )
NewStr := RegExReplace( NewStr, "\b(N|n)oth\b" , "$1orth" )
NewStr := RegExReplace( NewStr, "\b(N|n)othign\b" , "$1othing" )
NewStr := RegExReplace( NewStr, "\b(N|n)oteriety\b" , "$1otoriety" )
NewStr := RegExReplace( NewStr, "\b(N|n)oteab(les?|ility)\b" , "$1otab$2"  )
NewStr := RegExReplace( NewStr, "\b(N|n)ot(?:able|eabl)y\b" , "$1otably" )
NewStr := RegExReplace( NewStr, "\b(N|n)orthereastern\b" , "$1ortheastern" )
NewStr := RegExReplace( NewStr, "\b(N|n)ontheless\b" , "$1onetheless" )
NewStr := RegExReplace( NewStr, "\b(N|n)onsenc(e|ical(|ly))\b" , "$1onsens$2"  )
NewStr := RegExReplace( NewStr, "\b(N|n)oncombatents\b" , "$1oncombatants" )
NewStr := RegExReplace( NewStr, "\b(N|n)o(?:r?her|r?the|ther?)(n|ners?|nmost|ly)\b" , "$1orther$2"  )
NewStr := RegExReplace( NewStr, "\b(N|n)mae\b" , "$1ame" )
NewStr := RegExReplace( NewStr, "\b(N|n)int(y|ieths?|eenth|een)\b" , "$1inet$2"  )
NewStr := RegExReplace( NewStr, "\b(N|n)inet(hs?)\b" , "$1int$2"  )
NewStr := RegExReplace( NewStr, "\b(N|n)ightime\b" , "$1ighttime" )
NewStr := RegExReplace( NewStr, "\b(N|n)ickle(ic|ous|iferous|odeons?)?\b" , "$1ickel$2"  )
NewStr := RegExReplace( NewStr, "\b(N|n)ewstand(s?)\b" , "$1ewsstand$2" )
NewStr := RegExReplace( NewStr, "\b(N|n)ewletters\b" , "$1ewsletters" )
NewStr := RegExReplace( NewStr, "\b(N|n)everthless\b" , "$1evertheless" )
NewStr := RegExReplace( NewStr, "\b(N|n)estin\b" , "$1esting" )
NewStr := RegExReplace( NewStr, "\b(N|n)eice\b" , "$1iece" )
NewStr := RegExReplace( NewStr, "\b(N|n)egot(?:ia|at)(e[ds]?|ing|ion|ors?)\b" , "$1egotiat$2" )
NewStr := RegExReplace( NewStr, "\b(N|n)egli(?:ga)?ble\b" , "$1egligible" )
NewStr := RegExReplace( NewStr, "\b(N|n)ecessiate\b" , "$1ecessitate" )
NewStr := RegExReplace( NewStr, "\b(N|n)ec(?:ces?|e)sit(y|ies|ate[sd]?|ating)\b" , "$1ecessit$2"  )
NewStr := RegExReplace( NewStr, "\b(N|n)aturual(ly)?\b" , "$1atural$2" )
NewStr := RegExReplace( NewStr, "\b(N|n)(ever|one)(?:the\s+|\s+the)\s?less\b" , "$1$2theless"  )
NewStr := RegExReplace( NewStr, "\b(N|n)(?:eih?g|iegh)bo(u?r)(s?|ed|ing|hoods?|ly|liness)\b" , "$1eighbo$2$3"  )
NewStr := RegExReplace( NewStr, "\b(N|n)(?:églige|eglige|eglige)e?(s)?\b" , "$1égligée$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m|[Uu]nm)istakeabl(y|e)\b" , "$1istakabl$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m|[Oo]utm)an(|o)(?:u|ue|e)ver(ed|s?|ing)\b" , "$1an$2euver$3"  )
NewStr := RegExReplace( NewStr, "\b(M|m|[Mm]ism)an(?:ag|ge)(ments?|ab(l[ey]|leness|ility))\b" , "$1anage$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)yu\b" , "$1y" )
NewStr := RegExReplace( NewStr, "\b(M|m)ysterous\b" , "$1ysterious" )
NewStr := RegExReplace( NewStr, "\b(M|m)ysogyny\b" , "$1isogyny" )
NewStr := RegExReplace( NewStr, "\b(M|m)ysogynist\b" , "$1isogynist" )
NewStr := RegExReplace( NewStr, "\b(M|m)ysef\b" , "$1yself" )
NewStr := RegExReplace( NewStr, "\b(M|m)ysefl\b" , "$1yself" )
NewStr := RegExReplace( NewStr, "\b(M|m)yraid\b" , "$1yriad" )
NewStr := RegExReplace( NewStr, "\b(M|m)utiliated\b" , "$1utilated" )
NewStr := RegExReplace( NewStr, "\b(M|m)usi?cial([se]?|ly|ity)\b" , "$1usical$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)usem(s?)\b" , "$1useum$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)uscician\b" , "$1usician" )
NewStr := RegExReplace( NewStr, "\b(M|m)uscicians\b" , "$1usicians" )
NewStr := RegExReplace( NewStr, "\b(M|m)unnicipality\b" , "$1unicipality" )
NewStr := RegExReplace( NewStr, "\b(M|m)un(?:in?c?pi?|icipi|cip)al(|ly|ity|ities)\b" , "$1unicipal$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)ultiplers\b" , "$1ultipliers" )
NewStr := RegExReplace( NewStr, "\b(M|m)ultipled\b" , "$1ultiplied" )
NewStr := RegExReplace( NewStr, "\b(M|m)ulticultralism\b" , "$1ulticulturalism" )
NewStr := RegExReplace( NewStr, "\b(M|m)ulipl(e[stx]?|y|ie[srd]|ying|ica(tions?|tive|nds?)|iable|icity)\b" , "$1ultipl$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)uder\b" , "$1urder" )
NewStr := RegExReplace( NewStr, "\b(M|m)udering\b" , "$1urdering" )
NewStr := RegExReplace( NewStr, "\b(M|m)ucuous\b" , "$1ucous" )
NewStr := RegExReplace( NewStr, "\b(M|m)roe\b" , "$1ore" )
NewStr := RegExReplace( NewStr, "\b(M|m)rak\b" , "$1ark" )
NewStr := RegExReplace( NewStr, "\b(M|m)ovment\b" , "$1ovement" )
NewStr := RegExReplace( NewStr, "\b(M|m)ovei\b" , "$1ovie" )
NewStr := RegExReplace( NewStr, "\b(M|m)ounth\b" , "$1onth" )
NewStr := RegExReplace( NewStr, "\b(M|m)ountai?nious(|ly)\b" , "$1ountainous$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)ou(?:tai|n?tia)n(s?|eer(s?|ing)|ous)\b" , "$1ountain$2" )
NewStr := RegExReplace( NewStr, "\b(M|m)otiviated\b" , "$1otivated" )
NewStr := RegExReplace( NewStr, "\b(M|m)osture\b" , "$1oisture" )
NewStr := RegExReplace( NewStr, "\b(M|m)orgag(e[eds]?|ing)\b" , "$1ortgag$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)ontypic\b" , "$1onotypic" )
NewStr := RegExReplace( NewStr, "\b(M|m)onts\b" , "$1onths" )
NewStr := RegExReplace( NewStr, "\b(M|m)ontanous\b" , "$1ountainous" )
NewStr := RegExReplace( NewStr, "\b(M|m)ontains\b" , "$1ountains" )
NewStr := RegExReplace( NewStr, "\b(M|m)onolite\b" , "$1onolithic" )
NewStr := RegExReplace( NewStr, "\b(M|m)onkies\b" , "$1onkeys" )
NewStr := RegExReplace( NewStr, "\b(M|m)oniter(s?|ed|ing)\b" , "$1onitor$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)onickers\b" , "$1onikers" )
NewStr := RegExReplace( NewStr, "\b(M|m)on(?:est[ae]?|asta?)r(y|ies|ial)\b" , "$1onaster$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)omento(e?s?)\b" , "$1emento$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)oleclues\b" , "$1olecules" )
NewStr := RegExReplace( NewStr, "\b(M|m)oire\b" , "$1oiré"  )
NewStr := RegExReplace( NewStr, "\b(M|m)oeny\b" , "$1oney" )
NewStr := RegExReplace( NewStr, "\b(M|m)oent\b" , "$1oment" )
NewStr := RegExReplace( NewStr, "\b(M|m)odle\b" , "$1odel" )
NewStr := RegExReplace( NewStr, "\b(M|m)oderm\b" , "$1odem" )
NewStr := RegExReplace( NewStr, "\b(M|m)kea\b" , "$1ake" )
NewStr := RegExReplace( NewStr, "\b(M|m)kaing\b" , "$1aking" )
NewStr := RegExReplace( NewStr, "\b(M|m)kae\b" , "$1ake" )
NewStr := RegExReplace( NewStr, "\b(M|m)kaes\b" , "$1akes" )
NewStr := RegExReplace( NewStr, "\b(M|m)istery\b" , "$1ystery" )
NewStr := RegExReplace( NewStr, "\b(M|m)isteryous\b" , "$1ysterious" )
NewStr := RegExReplace( NewStr, "\b(M|m)isterious\b" , "$1ysterious" )
NewStr := RegExReplace( NewStr, "\b(M|m)issonary\b" , "$1issionary" )
NewStr := RegExReplace( NewStr, "\b(M|m)issle(s?)\b" , "$1issile$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)issen\b" , "$1izzen" )
NewStr := RegExReplace( NewStr, "\b(M|m)ispell(s?|ings?|ed)\b" , "$1isspell$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)isile\b" , "$1issile" )
NewStr := RegExReplace( NewStr, "\b(M|m)isfourtunes\b" , "$1isfortunes" )
NewStr := RegExReplace( NewStr, "\b(M|m)isdameanor\b" , "$1isdemeanor" )
NewStr := RegExReplace( NewStr, "\b(M|m)isdameanors\b" , "$1isdemeanors" )
NewStr := RegExReplace( NewStr, "\b(M|m)ischei(f|vous(|ly|ness))\b" , "$1ischie$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)isch(?:ei?vi?|ievi)ous(|ly|ness)\b" , "$1ischievous$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)iscellanous\b" , "$1iscellaneous" )
NewStr := RegExReplace( NewStr, "\b(M|m)iscellanious\b" , "$1iscellaneous" )
NewStr := RegExReplace( NewStr, "\b(M|m)iscelaneous\b" , "$1iscellaneous" )
NewStr := RegExReplace( NewStr, "\b(M|m)irrorred\b" , "$1irrored" )
NewStr := RegExReplace( NewStr, "\b(M|m)in[ai]tur(es?|iz(e[ds]?|ation|ing))\b" , "$1iniatur$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)inumum\b" , "$1inimum" )
NewStr := RegExReplace( NewStr, "\b(M|m)instry\b" , "$1inistry" )
NewStr := RegExReplace( NewStr, "\b(M|m)instries\b" , "$1inistries" )
NewStr := RegExReplace( NewStr, "\b(M|m)inistery\b" , "$1inistry" )
NewStr := RegExReplace( NewStr, "\b(M|m)inerial\b" , "$1ineral" )
NewStr := RegExReplace( NewStr, "\b(M|m)in(?:si|en?s|ins)t(ers?|ry|ries)\b" , "$1inist$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)imic(ing|ed)\b" , "$1imick$2" )
NewStr := RegExReplace( NewStr, "\b(M|m)iltary\b" , "$1ilitary" )
NewStr := RegExReplace( NewStr, "\b(M|m)illon\b" , "$1illion" )
NewStr := RegExReplace( NewStr, "\b(M|m)illioniare\b" , "$1illionaire" )
NewStr := RegExReplace( NewStr, "\b(M|m)illepede\b" , "$1illipede" )
NewStr := RegExReplace( NewStr, "\b(M|m)iliraty\b" , "$1ilitary" )
NewStr := RegExReplace( NewStr, "\b(M|m)ilion\b" , "$1illion" )
NewStr := RegExReplace( NewStr, "\b(M|m)ileu\b" , "$1ilieu" )
NewStr := RegExReplace( NewStr, "\b(M|m)ileau\b" , "$1ilieu" )
NewStr := RegExReplace( NewStr, "\b(M|m)ightly\b" , "$1ightily" )
NewStr := RegExReplace( NewStr, "\b(M|m)idwifes\b" , "$1idwives" )
NewStr := RegExReplace( NewStr, "\b(M|m)icoscopy\b" , "$1icroscopy" )
NewStr := RegExReplace( NewStr, "\b(M|m)i(?:llit[ae]|milite)r(y|ies|ily|is[tm]s?|istic|i[sz](e[ds]?|ing|ation))\b" , "$1ilitar$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)eto?erolog(y|ists?|ic(|al(|ly)))\b" , "$1eteorolog$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)ethaphor\b" , "$1etaphor" )
NewStr := RegExReplace( NewStr, "\b(M|m)ethaphors\b" , "$1etaphors" )
NewStr := RegExReplace( NewStr, "\b(M|m)etaphoricial\b" , "$1etaphorical" )
NewStr := RegExReplace( NewStr, "\b(M|m)etamorphysis\b" , "$1etamorphosis" )
NewStr := RegExReplace( NewStr, "\b(M|m)etalurgy\b" , "$1etallurgy" )
NewStr := RegExReplace( NewStr, "\b(M|m)etalurgic\b" , "$1etallurgic" )
NewStr := RegExReplace( NewStr, "\b(M|m)etalurgical\b" , "$1etallurgical" )
NewStr := RegExReplace( NewStr, "\b(M|m)etalic\b" , "$1etallic" )
NewStr := RegExReplace( NewStr, "\b(M|m)essenging\b" , "$1essaging" )
NewStr := RegExReplace( NewStr, "\b(M|m)esseg(e[rds]?|ing)\b" , "$1essag$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)essanger\b" , "$1essenger" )
NewStr := RegExReplace( NewStr, "\b(M|m)esage\b" , "$1essage" )
NewStr := RegExReplace( NewStr, "\b(M|m)esages\b" , "$1essages" )
NewStr := RegExReplace( NewStr, "\b(M|m)erchent\b" , "$1erchant" )
NewStr := RegExReplace( NewStr, "\b(M|m)erchendi(s|z)(e[drs]?|ers|ing[s]?)\b" , "$1erchandi$2$3"  )
NewStr := RegExReplace( NewStr, "\b(M|m)ercentile\b" , "$1ercantile" )
NewStr := RegExReplace( NewStr, "\b(M|m)enat\b" , "$1eant" )
NewStr := RegExReplace( NewStr, "\b(M|m)enally\b" , "$1entally" )
NewStr := RegExReplace( NewStr, "\b(M|m)emio(rs?|rists?)\b" , "$1emoi$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)embranaphone\b" , "$1embranophone" )
NewStr := RegExReplace( NewStr, "\b(M|m)elieux\b" , "$1ilieux" )
NewStr := RegExReplace( NewStr, "\b(M|m)eerkrat\b" , "$1eerkat" )
NewStr := RegExReplace( NewStr, "\b(M|m)ediciney\b" , "$1edicine" )
NewStr := RegExReplace( NewStr, "\b(M|m)edevial\b" , "$1edieval" )
NewStr := RegExReplace( NewStr, "\b(M|m)ede?(ia?)e?v[aei]l(|ly|is[mt]s?)\b" , "$1ed$2eval$3"  )
NewStr := RegExReplace( NewStr, "\b(M|m)edacine\b" , "$1edicine" )
NewStr := RegExReplace( NewStr, "\b(M|m)ed(?:[ea]tt?er?|itt?e|itter)ran[ea]{1,2}n\b" , "$1editerranean"  )
NewStr := RegExReplace( NewStr, "\b(M|m)echandise\b" , "$1erchandise" )
NewStr := RegExReplace( NewStr, "\b(M|m)eaninng\b" , "$1eaning" )
NewStr := RegExReplace( NewStr, "\b(M|m)chanics\b" , "$1echanics" )
NewStr := RegExReplace( NewStr, "\b(M|m)ccarthyst\b" , "$1ccarthyist" )
NewStr := RegExReplace( NewStr, "\b(M|m)ayon(?:n?ais|ais?)s(es?)\b" , "$1ayonnais$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)atheticians\b" , "$1athematicians" )
NewStr := RegExReplace( NewStr, "\b(M|m)athematicas\b" , "$1athematics" )
NewStr := RegExReplace( NewStr, "\b(M|m)athematican\b" , "$1athematician" )
NewStr := RegExReplace( NewStr, "\b(M|m)atha?matic(s?|ians?|al|ally)\b" , "$1athematic$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)ateralists\b" , "$1aterialist" )
NewStr := RegExReplace( NewStr, "\b(M|m)ataphysical\b" , "$1etaphysical" )
NewStr := RegExReplace( NewStr, "\b(M|m)asterbation\b" , "$1asturbation" )
NewStr := RegExReplace( NewStr, "\b(M|m)asquarad(e[sdr]?|ing)\b" , "$1asquerad$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)asculinlity\b" , "$1asculinity"  )
NewStr := RegExReplace( NewStr, "\b(M|m)arryied\b" , "$1arried" )
NewStr := RegExReplace( NewStr, "\b(M|m)arrtyred\b" , "$1artyred" )
NewStr := RegExReplace( NewStr, "\b(M|m)arraige\b" , "$1arriage" )
NewStr := RegExReplace( NewStr, "\b(M|m)armelade\b" , "$1armalade" )
NewStr := RegExReplace( NewStr, "\b(M|m)arketting\b" , "$1arketing" )
NewStr := RegExReplace( NewStr, "\b(M|m)arkes\b" , "$1arks" )
NewStr := RegExReplace( NewStr, "\b(M|m)arjority\b" , "$1ajority" )
NewStr := RegExReplace( NewStr, "\b(M|m)ariage\b" , "$1arriage" )
NewStr := RegExReplace( NewStr, "\b(M|m)ar+[aie]ge(s?|able)\b" , "$1arriage$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)anufacturedd\b" , "$1anufactured" )
NewStr := RegExReplace( NewStr, "\b(M|m)anoeuverability\b" , "$1aneuverability" )
NewStr := RegExReplace( NewStr, "\b(M|m)anisfestations\b" , "$1anifestations" )
NewStr := RegExReplace( NewStr, "\b(M|m)anifestion\b" , "$1anifestation" )
NewStr := RegExReplace( NewStr, "\b(M|m)anhatten\b" , "$1anhattan"  )
NewStr := RegExReplace( NewStr, "\b(M|m)an(?:afac?|[au]fa)tur(e[sd]?|ers?|ing)\b" , "$1anufactur$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)amal\b" , "$1ammal" )
NewStr := RegExReplace( NewStr, "\b(M|m)amalian\b" , "$1ammalian" )
NewStr := RegExReplace( NewStr, "\b(M|m)akse\b" , "$1akes" )
NewStr := RegExReplace( NewStr, "\b(M|m)aked\b" , "$1arked" )
NewStr := RegExReplace( NewStr, "\b(M|m)ajoroty\b" , "$1ajority" )
NewStr := RegExReplace( NewStr, "\b(M|m)aintioned\b" , "$1entioned" )
NewStr := RegExReplace( NewStr, "\b(M|m)aintinaing\b" , "$1aintaining" )
NewStr := RegExReplace( NewStr, "\b(M|m)ailny\b" , "$1ainly" )
NewStr := RegExReplace( NewStr, "\b(M|m)ai?nt(?:[ae]i?n[ae]|ian[ae]|[ae]|ene)nce\b" , "$1aintenance"  )
NewStr := RegExReplace( NewStr, "\b(M|m)agolia\b" , "$1agnolia" )
NewStr := RegExReplace( NewStr, "\b(M|m)agnificient\b" , "$1agnificent" )
NewStr := RegExReplace( NewStr, "\b(M|m)agincian\b" , "$1agician" )
NewStr := RegExReplace( NewStr, "\b(M|m)agasine\b" , "$1agazine" )
NewStr := RegExReplace( NewStr, "\b(M|m)acrame\b" , "$1acramé"  )
NewStr := RegExReplace( NewStr, "\b(M|m)ackeral\b" , "$1ackerel" )
NewStr := RegExReplace( NewStr, "\b(M|m)a(?:i?ntia|ntai)n(s?|e[dr]|ing|able|ability)\b" , "$1aintain$2"  )
NewStr := RegExReplace( NewStr, "\b(M|m)(?:énage a|enage à|enage a) trois\b" , "$1énage à trois"  )
NewStr := RegExReplace( NewStr, "\b(Mahatma|Mohandas(|\s+K\.)|Indira|Sonia)\s+[Gg](?:ha|ah)ndi\b" , "$1 Gandhi"  )
NewStr := RegExReplace( NewStr, "\b(L|[Gg]?l|[Uu]nl|[Mm]o)istn(s?|ed|er(?:ship)?s?|ing|able)\b" , "$1isten$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l|[Uu]nl|[Rr]el)eran(s?|t|ed|ing)\b" , "$1earn$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l|[Ii]ll)it(?:ara|eri?)(tes?|ture|cy|l|lly|tim?|ry|lis[mt]s?)\b" , "$1itera$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l|[Cc]oll)eaugu?e(r?s?|d)\b" , "$1eague$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l)uckilly\b" , "$1uckily"  )
NewStr := RegExReplace( NewStr, "\b(L|l)sat\b" , "$1ast" )
NewStr := RegExReplace( NewStr, "\b(L|l)oosly\b" , "$1oosely"  )
NewStr := RegExReplace( NewStr, "\b(L|l)ookign\b" , "$1ooking" )
NewStr := RegExReplace( NewStr, "\b(L|l)onle?y\b" , "$1onely" )
NewStr := RegExReplace( NewStr, "\b(L|l)ongitudonal\b" , "$1ongitudinal" )
NewStr := RegExReplace( NewStr, "\b(L|l)o([nv]e|rd|w)ly(ness|est|er)\b" , "$1o$2li$3"  )
NewStr := RegExReplace( NewStr, "\b(L|l)o([nv]e|rd|w)l(?:ynes?|ine)s\b" , "$1o$2liness"  )
NewStr := RegExReplace( NewStr, "\b(L|l)mits\b" , "$1imits" )
NewStr := RegExReplace( NewStr, "\b(L|l)ivley\b" , "$1ively" )
NewStr := RegExReplace( NewStr, "\b(L|l)iveing\b" , "$1iving" )
NewStr := RegExReplace( NewStr, "\b(L|l)iuke\b" , "$1ike" )
NewStr := RegExReplace( NewStr, "\b(L|l)itterateur\b" , "$1ittérateur" )
NewStr := RegExReplace( NewStr, "\b(L|l)itterally\b" , "$1iterally" )
NewStr := RegExReplace( NewStr, "\b(L|l)itt(?:tle|el)\b" , "$1ittle" )
NewStr := RegExReplace( NewStr, "\b(L|l)itature\b" , "$1iterature" )
NewStr := RegExReplace( NewStr, "\b(L|l)isc?en(c|s)(ed?|ing|(ee?|ure|or)s?)\b" , "$1icen$2$3"  )
NewStr := RegExReplace( NewStr, "\b(L|l)iqour(s?|ed|ices?)\b" , "$1iquor$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l)ikly\b" , "$1ikely" )
NewStr := RegExReplace( NewStr, "\b(L|l)ikley\b" , "$1ikely"  )
NewStr := RegExReplace( NewStr, "\b(L|l)iftime\b" , "$1ifetime" )
NewStr := RegExReplace( NewStr, "\b(L|l)iev\b" , "$1ive" )
NewStr := RegExReplace( NewStr, "\b(L|l)ieved\b" , "$1ived" )
NewStr := RegExReplace( NewStr, "\b(L|l)iesur(e|ely)\b" , "$1eisur$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l)iek\b" , "$1ike" )
NewStr := RegExReplace( NewStr, "\b(L|l)iekd\b" , "$1iked" )
NewStr := RegExReplace( NewStr, "\b(L|l)ieing\b" , "$1ying"  )
NewStr := RegExReplace( NewStr, "\b(L|l)ibr(?:ar|e)ry\b" , "$1ibrary" )
NewStr := RegExReplace( NewStr, "\b(L|l)ibitarianisn\b" , "$1ibertarianism" )
NewStr := RegExReplace( NewStr, "\b(L|l)ibguist(s?|ic(s?|ally))\b" , "$1inguist$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l)ibell\b" , "$1ibel"  )
NewStr := RegExReplace( NewStr, "\b(L|l)ibar(y|ies|ians?)\b" , "$1ibrar$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l)iasi?o(ns?)\b" , "$1iaiso$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l)ev[ae]tat(e[ds]?|ing|ions?|ors?)\b" , "$1evitat$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l)evle\b" , "$1evel"  )
NewStr := RegExReplace( NewStr, "\b(L|l)et;s\b" , "$1et's" )
NewStr := RegExReplace( NewStr, "\b(L|l)enian(t|tly|c[ey])\b" , "$1enien$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l)en(?:ght|th)(s?|y|en(s?|e[dr]|ing)|ways|wise|ily|iness)\b" , "$1ength$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l)egitmate\b" , "$1egitimate" )
NewStr := RegExReplace( NewStr, "\b(L|l)egionaire?(s?)\b" , "$1egionnaire$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l)egende?ry\b" , "$1egendary"  )
NewStr := RegExReplace( NewStr, "\b(L|l)efted\b" , "$1eft" )
NewStr := RegExReplace( NewStr, "\b(L|l)eathal\b" , "$1ethal" )
NewStr := RegExReplace( NewStr, "\b(L|l)earnign\b" , "$1earning" )
NewStr := RegExReplace( NewStr, "\b(L|l)eage\b" , "$1eague" )
NewStr := RegExReplace( NewStr, "\b(L|l)azyness\b" , "$1aziness" )
NewStr := RegExReplace( NewStr, "\b(L|l)azer\b" , "$1aser" )
NewStr := RegExReplace( NewStr, "\b(L|l)ayed\b" , "$1aid"  )
NewStr := RegExReplace( NewStr, "\b(L|l)avr?ae\b" , "$1arvae"  )
NewStr := RegExReplace( NewStr, "\b(L|l)aunhed\b" , "$1aunched" )
NewStr := RegExReplace( NewStr, "\b(L|l)aunchs\b" , "$1aunch" )
NewStr := RegExReplace( NewStr, "\b(L|l)attitude\b" , "$1atitude" )
NewStr := RegExReplace( NewStr, "\b(L|l)astr\b" , "$1ast" )
NewStr := RegExReplace( NewStr, "\b(L|l)astest\b" , "$1atest"  )
NewStr := RegExReplace( NewStr, "\b(L|l)asoo\b" , "$1asso" )
NewStr := RegExReplace( NewStr, "\b(L|l)arg\b" , "$1arge" )
NewStr := RegExReplace( NewStr, "\b(L|l)argst\b" , "$1argest" )
NewStr := RegExReplace( NewStr, "\b(L|l)arg(elle?|e?le)y\b" , "$1argely"  )
NewStr := RegExReplace( NewStr, "\b(L|l)aquer(s?|ed|ing|ers?)\b" , "$1acquer$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l)ang(?:aua?|u|uan)ge(s?)\b" , "$1anguage$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l)andler\b" , "$1ändler" )
NewStr := RegExReplace( NewStr, "\b(L|l)aguage(s?)\b" , "$1anguage$2" )
NewStr := RegExReplace( NewStr, "\b(L|l)abourious\b" , "$1aborious" )
NewStr := RegExReplace( NewStr, "\b(L|l)abor[iou]{1,2}s(|ly|ness)\b" , "$1aborious$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l)abled\b" , "$1abelled" )
NewStr := RegExReplace( NewStr, "\b(L|l)ab(?:r?a|or)tor(y|ies)\b" , "$1aborator$2"  )
NewStr := RegExReplace( NewStr, "\b(L|l)(?:voe|veo|oev)\b" , "$1ove" )
NewStr := RegExReplace( NewStr, "\b(L|l)(?:euten[ae]|ieutent[ae]|ieutene)n(ts?|cy)\b" , "$1ieutenan$2"  )
NewStr := RegExReplace( NewStr, "\b(K|k|[Aa]ck)nowl[de]ge([ds]?|abl[ey]|ableness|ability)\b" , "$1nowledge$2"  )
NewStr := RegExReplace( NewStr, "\b(K|k)ummel\b" , "$1ümmel" )
NewStr := RegExReplace( NewStr, "\b(K|k)rouzek\b" , "$1rouek" )
NewStr := RegExReplace( NewStr, "\b(K|k)nive\b" , "$1nife" )
NewStr := RegExReplace( NewStr, "\b(K|k)nifes\b" , "$1nives" )
NewStr := RegExReplace( NewStr, "\b(K|k)lenex\b" , "$1leenex" )
NewStr := RegExReplace( NewStr, "\b(K|k)in[dt]erga(?:t|rd)(ens?)\b" , "$1indergart$2"  )
NewStr := RegExReplace( NewStr, "\b(K|k)aldolmar\b" , "$1åldolmar" )
NewStr := RegExReplace( NewStr, "\b(K|k)(?:wno|onw|nwo)(n?|s)\b" , "$1now$2" )
NewStr := RegExReplace( NewStr, "\b(J|j)uvinil(es?|ity|eness|ely|ia)\b" , "$1uvenil$2"  )
NewStr := RegExReplace( NewStr, "\b(J|j)uristiction(s?)\b" , "$1urisdiction$2" )
NewStr := RegExReplace( NewStr, "\b(J|j)ugment\b" , "$1udgment" )
NewStr := RegExReplace( NewStr, "\b(J|j)udisuary\b" , "$1udiciary" )
NewStr := RegExReplace( NewStr, "\b(J|j)ud(?:uci|ic)al\b" , "$1udicial" )
NewStr := RegExReplace( NewStr, "\b(J|j)s(?:ut|tu)\b" , "$1ust" )
NewStr := RegExReplace( NewStr, "\b(J|j)ournies\b" , "$1ourneys" )
NewStr := RegExReplace( NewStr, "\b(J|j)ournied\b" , "$1ourneyed" )
NewStr := RegExReplace( NewStr, "\b(J|j)ounr(al(s?|ism|ists?|l?ing)|ey(s?|ed|m[ae]n))\b" , "$1ourn$2"  )
NewStr := RegExReplace( NewStr, "\b(J|j)ouney\b" , "$1ourney" )
NewStr := RegExReplace( NewStr, "\b(J|j)ewl(|le)ry\b" , "$1ewel$2ry"  )
NewStr := RegExReplace( NewStr, "\b(J|j)ewelery\b" , "$1ewellery" )
NewStr := RegExReplace( NewStr, "\b(J|j)eapardy\b" , "$1eopardy" )
NewStr := RegExReplace( NewStr, "\b(J|j)ardiniere\b" , "$1ardinière" )
NewStr := RegExReplace( NewStr, "\b(J|j)aques\b" , "$1acques" )
NewStr := RegExReplace( NewStr, "\b(J|j)alapeno(s)?\b" , "$1alapeño$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i|[Rr]ei)nt[aeo]r?duc(e[ds]?|ing|tions?|tory)\b" , "$1ntroduc$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i|[Nn]oni)nfectuous(|ly|ness)\b" , "$1nfectious$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i|[Mm]isi|[Rr]ei)nte(?:pre|rper?e?)t(s?|ed|ers?|ations?|ive(|ly))\b" , "$1nterpret$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i|[Dd]isi)nt(?:re|er)s(ts?|ting|ted)\b" , "$1nteres$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)[mn]psir(ed?|es|ing|ation(|al))\b" , "$1nspir$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)tnerest(ed|ing|ingly|s)?\b" , "$1nterest$2" )
NewStr := RegExReplace( NewStr, "\b(I|i)titial\b" , "$1nitial" )
NewStr := RegExReplace( NewStr, "\b(I|i)t;s\b" , "$1t's" )
NewStr := RegExReplace( NewStr, "\b(I|i)ssueing\b" , "$1ssuing" )
NewStr := RegExReplace( NewStr, "\b(I|i)snt\b" , "$1sn't" )
NewStr := RegExReplace( NewStr, "\b(I|i)rreplacable\b" , "$1rreplaceable" )
NewStr := RegExReplace( NewStr, "\b(I|i)ronicly\b" , "$1ronically" )
NewStr := RegExReplace( NewStr, "\b(I|i)rita(te[ds]?|ble)\b" , "$1rrita$2" )
NewStr := RegExReplace( NewStr, "\b(I|i)resist[ai]bl(e|y)\b" , "$1rresistible" )
NewStr := RegExReplace( NewStr, "\b(I|i)relevent\b" , "$1rrelevant" )
NewStr := RegExReplace( NewStr, "\b(I|i)nvolvment\b" , "$1nvolvement"  )a
NewStr := RegExReplace( NewStr, "\b(I|i)nvinc(?:e[ia]?|a)b(l[ey]|ility|leness)\b" , "$1nvincib$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nvestingate\b" , "$1nvestigate" )
NewStr := RegExReplace( NewStr, "\b(I|i)nvesment(s?)\b" , "$1nvestment$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nvertibrate(s)?\b" , "$1nvertebrate$2" )
NewStr := RegExReplace( NewStr, "\b(I|i)nvente(rs?)\b" , "$1nvento$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nudstry\b" , "$1ndustry" )
NewStr := RegExReplace( NewStr, "\b(I|i)ntra-(murals?|state|uterine)\b" , "$1ntra$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)ntially\b" , "$1nitially" )
NewStr := RegExReplace( NewStr, "\b(I|i)nti?uti(ons?|ve|vely)\b" , "$1ntuiti$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nterrugum\b" , "$1nterregnum" )
NewStr := RegExReplace( NewStr, "\b(I|i)nternation\b" , "$1nternational" )
NewStr := RegExReplace( NewStr, "\b(I|i)nterg(ers?|rity|ra(ls?|n[dt]s?|ble|bility|te[sd]?|tors?|ti(ve|ng|on(|ist)s?)))\b" , "$1nteg$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nterfereing\b" , "$1nterfering"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nterelat(e[ds]?|ions?)\b" , "$1nterrelat$2" )
NewStr := RegExReplace( NewStr, "\b(I|i)ntercontinetal\b" , "$1ntercontinental" )
NewStr := RegExReplace( NewStr, "\b(I|i)nter(?:u|ri)?m\b" , "$1nterim" )
NewStr := RegExReplace( NewStr, "\b(I|i)nter(?:ive|vei)w(s?|ed|ing|ers?)\b" , "$1nterview$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)ntepretator\b" , "$1nterpreter" )
NewStr := RegExReplace( NewStr, "\b(I|i)ntelectual\b" , "$1ntellectual" )
NewStr := RegExReplace( NewStr, "\b(I|i)ntel(?:[eil]|l[ae])gen(cer?s?|t|tly|tsia)\b" , "$1ntelligen$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nte(?:rvin|ve)e(s|d)?\b" , "$1ntervene$2" )
NewStr := RegExReplace( NewStr, "\b(I|i)nte(?:rnati|[nr]atio?)nal(s?|ly)\b" , "$1nternational$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nsurence\b" , "$1nsurance" )
NewStr := RegExReplace( NewStr, "\b(I|i)nstutionalized\b" , "$1nstitutionalized" )
NewStr := RegExReplace( NewStr, "\b(I|i)nstution(s)?\b" , "$1ntuition$2" )
NewStr := RegExReplace( NewStr, "\b(I|i)nstument(al|s)?\b" , "$1nstrument$2" )
NewStr := RegExReplace( NewStr, "\b(I|i)nstuction\b" , "$1nstruction" )
NewStr := RegExReplace( NewStr, "\b(I|i)nstatance\b" , "$1nstance" )
NewStr := RegExReplace( NewStr, "\b(I|i)nstaleld\b" , "$1nstalled" )
NewStr := RegExReplace( NewStr, "\b(I|i)nst(?:ade|ed)\b" , "$1nstead"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nsensative\b" , "$1nsensitive" )
NewStr := RegExReplace( NewStr, "\b(I|i)nsectiverous\b" , "$1nsectivorous" )
NewStr := RegExReplace( NewStr, "\b(I|i)npenetrab(l[ey]|ilit(ies|y))" , "$1mpenetrab$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)not\b" , "$1nto" )
NewStr := RegExReplace( NewStr, "\b(I|i)nocence\b" , "$1nnocence" )
NewStr := RegExReplace( NewStr, "\b(I|i)nlu(de[ds]?|ding|sions?|sive(|ness))\b" , "$1nclu$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nlcuding\b" , "$1ncluding" )
NewStr := RegExReplace( NewStr, "\b(I|i)nitiaitive\b" , "$1nitiative" )
NewStr := RegExReplace( NewStr, "\b(I|i)nitation\b" , "$1nitiation" )
NewStr := RegExReplace( NewStr, "\b(I|i)nit(?:al|ia)ly\b" , "$1nitially"  )
NewStr := RegExReplace( NewStr, "\b(I|i)ni(?:ti|cia)ti(ves?|ons?)\b" , "$1nitiati$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nheritenc(es?)\b" , "$1nheritanc$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nhabitans\b" , "$1nhabitants" )
NewStr := RegExReplace( NewStr, "\b(I|i)ngreediants\b" , "$1ngredients" )
NewStr := RegExReplace( NewStr, "\b(I|i)ngenius\b" , "$1ngenious" )
NewStr := RegExReplace( NewStr, "\b(I|i)nfrigement\b" , "$1nfringement" )
NewStr := RegExReplace( NewStr, "\b(I|i)nfrantryman\b" , "$1nfantryman" )
NewStr := RegExReplace( NewStr, "\b(I|i)nformtion\b" , "$1nformation" )
NewStr := RegExReplace( NewStr, "\b(I|i)nformatoin\b" , "$1nformation" )
NewStr := RegExReplace( NewStr, "\b(I|i)nfluented\b" , "$1nfluenced" )
NewStr := RegExReplace( NewStr, "\b(I|i)nfluencial\b" , "$1nfluential"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nfluanc(es?|ed|ing)\b" , "$1nfluenc$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nflama(tions?|tory|bl[ey]|bility)\b" , "$1nflamma$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nfinit\b" , "$1nfinite" )
NewStr := RegExReplace( NewStr, "\b(I|i)nfanty\b" , "$1nfantry"  )
NewStr := RegExReplace( NewStr, "\b(I|i)nfall?ab(le|ility)\b" , "$1nfallib$2" )
NewStr := RegExReplace( NewStr, "\b(I|i)nev[ai]tible\b" , "$1nevitable" )
NewStr := RegExReplace( NewStr, "\b(I|i)nevititably\b" , "$1nevitably" )
NewStr := RegExReplace( NewStr, "\b(I|i)nefficienty\b" , "$1nefficiently" )
NewStr := RegExReplace( NewStr, "\b(I|i)ndviduals\b" , "$1ndividuals" )
NewStr := RegExReplace( NewStr, "\b(I|i)ndutrial\b" , "$1ndustrial" )
NewStr := RegExReplace( NewStr, "\b(I|i)ndulgue\b" , "$1ndulge" )
NewStr := RegExReplace( NewStr, "\b(I|i)ndite\b" , "$1ndict" )
NewStr := RegExReplace( NewStr, "\b(I|i)ndigine?ou(s|sly)\b" , "$1ndigenou$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)ndictement\b" , "$1ndictment" )
NewStr := RegExReplace( NewStr, "\b(I|i)ndefineable\b" , "$1ndefinable" )
NewStr := RegExReplace( NewStr, "\b(I|i)ndecate\b" , "$1ndicate" )
NewStr := RegExReplace( NewStr, "\b(I|i)ncunabla\b" , "$1ncunabula" )
NewStr := RegExReplace( NewStr, "\b(I|i)ncuding\b" , "$1ncluding" )
NewStr := RegExReplace( NewStr, "\b(I|i)ncramentally\b" , "$1ncrementally" )
NewStr := RegExReplace( NewStr, "\b(I|i)ncorruptable\b" , "$1ncorruptible" )
NewStr := RegExReplace( NewStr, "\b(I|i)ncorprates\b" , "$1ncorporates" )
NewStr := RegExReplace( NewStr, "\b(I|i)ncorportaed\b" , "$1ncorporated" )
NewStr := RegExReplace( NewStr, "\b(I|i)ncomptetent\b" , "$1ncompetent" )
NewStr := RegExReplace( NewStr, "\b(I|i)ncomptable\b" , "$1ncompatible" )
NewStr := RegExReplace( NewStr, "\b(I|i)nclud\b" , "$1nclude" )
NewStr := RegExReplace( NewStr, "\b(I|i)ncludng\b" , "$1ncluding" )
NewStr := RegExReplace( NewStr, "\b(I|i)nclreased\b" , "$1ncreased" )
NewStr := RegExReplace( NewStr, "\b(I|i)ncidently\b" , "$1ncidentally" )
NewStr := RegExReplace( NewStr, "\b(I|i)ncidentially\b" , "$1ncidentally" )
NewStr := RegExReplace( NewStr, "\b(I|i)ncarcirated\b" , "$1ncarcerated" )
NewStr := RegExReplace( NewStr, "\b(I|i)nbetween\b" , "$1n between"  )
NewStr := RegExReplace( NewStr, "\b(I|i)naugures\b" , "$1naugurates" )
NewStr := RegExReplace( NewStr, "\b(I|i)nate\b" , "$1nnate" )
NewStr := RegExReplace( NewStr, "\b(I|i)nappropiate\b" , "$1nappropriate" )
NewStr := RegExReplace( NewStr, "\b(I|i)nadquate\b" , "$1nadequate" )
NewStr := RegExReplace( NewStr, "\b(I|i)nadiquate\b" , "$1nadequate" )
NewStr := RegExReplace( NewStr, "\b(I|i)nablility\b" , "$1nability" )
NewStr := RegExReplace( NewStr, "\b(I|i)na(?:gu|ugau?|uge)ra(te[ds]?|ting|tor|tions?|ls?)\b" , "$1naugura$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)n(p[b-gi-tv-z]|m[b-np-z]|b[a-npqstv-z])\B" , "$1m$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)n(fact|them?|some|m?any|spite|particular)\b" , "$1n $2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)n(?:ti|it)al(ly)?\b" , "$1nitial$2" )
NewStr := RegExReplace( NewStr, "\b(I|i)n(?:noc?|oc)cula(t(e[sd]?|or[ys]?)|ti(ng|ons?|ve)|b(le|ility)|nts?)\b" , "$1nocula$2"  )
NewStr := RegExReplace( NewStr, "\b(I|I)n(?:nac?|a)cura(cy|cies|te|tely)\b" , "$1naccura$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)mput(s?|ting|ted)\b" , "$1nput$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)mprovision\b" , "$1mprovisation" )
NewStr := RegExReplace( NewStr, "\b(I|i)mprov(?:me|em)nt(s)?\b" , "$1mprovement$2" )
NewStr := RegExReplace( NewStr, "\b(I|i)mpriso(?:ne|)ment\b" , "$1mprisonment"  )
NewStr := RegExReplace( NewStr, "\b(I|i)mpri(?:son|o)ned\b" , "$1mprisoned" )
NewStr := RegExReplace( NewStr, "\b(I|i)mpossable\b" , "$1mpossible" )
NewStr := RegExReplace( NewStr, "\b(I|i)mport(?:na|en|am)(t|ce)\b" , "$1mportan$2" )
NewStr := RegExReplace( NewStr, "\b(I|i)mpl[ia]ment(s?|e[dr]?|al|ing|ations?)\b" , "$1mplement$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)mpedenc(es?)\b" , "$1mpedanc$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)mpecabbly\b" , "$1mpeccably" )
NewStr := RegExReplace( NewStr, "\b(I|i)mp(?:re|or)v(e[ds]?|ing|ements?|is(e[sd]?|ing|ations?))\b" , "$1mprov$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)mmunosupressant\b" , "$1mmunosuppressant" )
NewStr := RegExReplace( NewStr, "\b(I|i)mmitat(ors?|e[ds]?|ing)\b" , "$1mitat$2" )
NewStr := RegExReplace( NewStr, "\b(I|i)mmensly\b" , "$1mmensely"  )
NewStr := RegExReplace( NewStr, "\b(I|i)mense\b" , "$1mmense" )
NewStr := RegExReplace( NewStr, "\b(I|i)mcomplete\b" , "$1ncomplete" )
NewStr := RegExReplace( NewStr, "\b(I|i)manent\b" , "$1mminent" )
NewStr := RegExReplace( NewStr, "\b(I|i)magin\b" , "$1magine" )
NewStr := RegExReplace( NewStr, "\b(I|i)magenary\b" , "$1maginary" )
NewStr := RegExReplace( NewStr, "\b(I|i)m+ediate?ley\b" , "$1mmediately"  )
NewStr := RegExReplace( NewStr, "\b(I|i)m(d[ac-z][a-ce-z]|n[b-z]|t[a-hj-qs-z]|v)\B" , "$1n$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)m(?:m+idi?|(?:mm+)?ea?di?|m+ea?d|m+eadi?)ate?(|ly)\b" , "$1mmediate$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)l[ln]ess\b" , "$1llness" )
NewStr := RegExReplace( NewStr, "\b(I|i)lumination\b" , "$1llumination" )
NewStr := RegExReplace( NewStr, "\b(I|i)logical\b" , "$1llogical" )
NewStr := RegExReplace( NewStr, "\b(I|i)llution\b" , "$1llusion" )
NewStr := RegExReplace( NewStr, "\b(I|i)lliegal\b" , "$1llegal" )
NewStr := RegExReplace( NewStr, "\b(I|i)llegitmate\b" , "$1llegitimate" )
NewStr := RegExReplace( NewStr, "\b(I|i)llegimacy\b" , "$1llegitimacy" )
NewStr := RegExReplace( NewStr, "\b(I|i)gnoren(t|tly|ce)\b" , "$1gnoran$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)d[ie]osync(?:h?rac|hras)(y|ies)\b" , "$1diosyncras$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)deosyncratic\b" , "$1diosyncratic" )
NewStr := RegExReplace( NewStr, "\b(I|i)dentofy\b" , "$1dentify" )
NewStr := RegExReplace( NewStr, "\b(I|i)dentifers\b" , "$1dentifiers" )
NewStr := RegExReplace( NewStr, "\b(I|i)denticial\b" , "$1dentical" )
NewStr := RegExReplace( NewStr, "\b(I|i)denti(t|f)iy\b" , "$1denti$2y"  )
NewStr := RegExReplace( NewStr, "\b(I|i)dealogy\b" , "$1deology" )
NewStr := RegExReplace( NewStr, "\b(I|i)dealogies\b" , "$1deologies" )
NewStr := RegExReplace( NewStr, "\b(I|i)dae(s?)\b" , "$1dea$2" )
NewStr := RegExReplace( NewStr, "\b(I|i)conclast(ic)?\b" , "$1conoclast$2" )
NewStr := RegExReplace( NewStr, "\b(I|i)(?:tnro|ntru?|nctr[ou]?)duc?(e[ds]?|tions?|ing)\b" , "$1ntroduc$2" )
NewStr := RegExReplace( NewStr, "\b(I|i)(?:n|n{3,})umerab(l[ey]|ility|leness)\b" , "$1nnumerab$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)(?:n|n{3,})ovat(e[ds]?|ing|ions?|ive|or[sy]?)\b" , "$1nnovat$2"  )
NewStr := RegExReplace( NewStr, "\b(I|i)(?:cin[ea]|n?[cs]ina|nsin[ea])rat(e[sd]?|ing|ions?|ors?)\b" , "$1ncinerat$2"  )
NewStr := RegExReplace( NewStr, "\B(ic?|[a-z][entu])alyl?\b" , "$1ally"  )
NewStr := RegExReplace( NewStr, "\b(H|h|[Pp]reh)(?:istoric|sitor)i(c|ans?|cal(|ly))\b" , "$1istori$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h|[Kk]ilo[Hh]|[Mm]ega[Hh]|[Gg]iga[Hh])ertzs\b" , "$1ertz"  )
NewStr := RegExReplace( NewStr, "\b(H|h|[Ii]nh)ospitibl(e|y)\b" , "$1ospitabl$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h|[Dd]ish)ounour(s?|e[de]|ing|ifics?|abl[ey])\b" , "$1onour$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)ypocrit(s)?\b" , "$1ypocrite$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)ypocr(?:a[cs]|ic)(y|ies)\b" , "$1ypocris$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)ygein(e|i(c|st)s?)\b" , "$1ygien$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)ydr[oa]p(il|ob)(es?|i[ac]|icity)\b" , "$1ydroph$2$3"  )
NewStr := RegExReplace( NewStr, "\b(H|h)ydogen\b" , "$1ydrogen" )
NewStr := RegExReplace( NewStr, "\b(H|h)usban\b" , "$1usband" )
NewStr := RegExReplace( NewStr, "\b(H|h)undered(s?|ths?)\b" , "$1undred$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)um[ie]noi(ds?)\b" , "$1umanoi$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)umoural\b" , "$1umoral"  )
NewStr := RegExReplace( NewStr, "\b(H|h)umilat(e[ds]?|i(ng|ve|on)|or[sy]?)\b" , "$1umiliat$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)umer\b" , "$1umor" )
NewStr := RegExReplace( NewStr, "\b(H|h)umanites\b" , "$1umanities"  )
NewStr := RegExReplace( NewStr, "\b(H|h)um(?:e|o?u)rous(|ly|ness)\b" , "$1umorous$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)ttpL\b" , "$1ttp:" )
NewStr := RegExReplace( NewStr, "\b(H|h)ttp:\\\b" , "$1ttp://" )
NewStr := RegExReplace( NewStr, "\b(H|h)tp:\b" , "$1ttp:" )
NewStr := RegExReplace( NewStr, "\b(H|h)story\b" , "$1istory" )
NewStr := RegExReplace( NewStr, "\b(H|h)sa\b" , "$1as" )
NewStr := RegExReplace( NewStr, "\b(H|h)owver\b" , "$1owever" )
NewStr := RegExReplace( NewStr, "\b(H|h)ousr\b" , "$1ours" )
NewStr := RegExReplace( NewStr, "\b(H|h)osited\b" , "$1oisted" )
NewStr := RegExReplace( NewStr, "\b(H|h)or(?:rif[iy]?|iff?y?)(|ing)\b" , "$1orrify$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)onourific\b" , "$1onorific" )
NewStr := RegExReplace( NewStr, "\b(H|h)onourarium\b" , "$1onorarium" )
NewStr := RegExReplace( NewStr, "\b(H|h)onora?y\b" , "$1onorary"  )
NewStr := RegExReplace( NewStr, "\b(H|h)on(e[ds]?|ing)\s+in\s+on\b" , "$1om$2 in on"  )
NewStr := RegExReplace( NewStr, "\b(H|h)omogeneiz(e[sd]?|ing|ation)\b" , "$1omogeniz$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)ip(?:o|p?op)potamu(s|ses)\b" , "$1ippopotamu$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)ind(?:er[ea]|ren?)nc(es?)\b" , "$1indranc$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)illari(ty|ous(|ly|ness))\b" , "$1ilari$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)ier\b" , "$1eir" )
NewStr := RegExReplace( NewStr, "\b(H|h)ieght\b" , "$1eight" )
NewStr := RegExReplace( NewStr, "\b(H|h)i(?:mselv|smelf)\b" , "$1imself" )
NewStr := RegExReplace( NewStr, "\b(H|h)ge\b" , "$1e" )
NewStr := RegExReplace( NewStr, "\b(H|h)eyd(a|e)ys\b" , "$1eyd$2y"  )
NewStr := RegExReplace( NewStr, "\b(H|h)eterogen(ous|ity)\b" , "$1eterogene$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)esi(?:st[ae]|te)n(t|tly|cy)\b" , "$1esitan$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)ersuit\b" , "$1irsute" )
NewStr := RegExReplace( NewStr, "\b(H|h)eros\b" , "$1eroes"  )
NewStr := RegExReplace( NewStr, "\b(H|h)eroe\b" , "$1ero" )
NewStr := RegExReplace( NewStr, "\b(H|h)eridit(y|ary)\b" , "$1eredit$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)ere;s\b" , "$1ere's" )
NewStr := RegExReplace( NewStr, "\b(H|h)erat\b" , "$1eart" )
NewStr := RegExReplace( NewStr, "\b(H|h)er(?:ri|r?[ae])tage?(|s)\b" , "$1eritage$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)em(?:mor?|o)rh?ag(e[sd]?|ing|ic)\b" , "$1emorrhag$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)elpped\b" , "$1elped"  )
NewStr := RegExReplace( NewStr, "\b(H|h)elpfull\b" , "$1elpful"  )
NewStr := RegExReplace( NewStr, "\b(H|h)elment\b" , "$1elmet" )
NewStr := RegExReplace( NewStr, "\b(H|h)el(?:icopto|ecopte)r(s?)\b" , "$1elicopter$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)eathy\b" , "$1ealthy" )
NewStr := RegExReplace( NewStr, "\b(H|h)earign\b" , "$1earing" )
NewStr := RegExReplace( NewStr, "\b(H|h)eared\b" , "$1eard" )
NewStr := RegExReplace( NewStr, "\b(H|h)ealthercare\b" , "$1ealthcare" )
NewStr := RegExReplace( NewStr, "\b(H|h)ea?villy\b" , "$1eavily"  )
NewStr := RegExReplace( NewStr, "\b(H|h)da\b" , "$1ad" )
NewStr := RegExReplace( NewStr, "\b(H|h)aviest\b" , "$1eaviest"  )
NewStr := RegExReplace( NewStr, "\b(H|h)arassement\b" , "$1arassment" )
NewStr := RegExReplace( NewStr, "\b(H|h)ar(?:ras+|r?as|r+as+e)(|e[sd]|ing(s?|ly)|ments?)\b" , "$1arass$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)apen(ing|s|ed)?\b" , "$1appen$2" )
NewStr := RegExReplace( NewStr, "\b(H|h)ap(?:p?en[dn]e|pen)d\b" , "$1appened"  )
NewStr := RegExReplace( NewStr, "\b(H|h)al(?:l?owea|owe[ea]?)n\b" , "$1alloween"  )
NewStr := RegExReplace( NewStr, "\b(H|h)aitus\b" , "$1iatus"  )
NewStr := RegExReplace( NewStr, "\b(H|h)aemorrage\b" , "$1emorrhage" )
NewStr := RegExReplace( NewStr, "\b(H|h)ace\b" , "$1are" )
NewStr := RegExReplace( NewStr, "\b(H|h)absbourg\b" , "$1absburg"  )
NewStr := RegExReplace( NewStr, "\b(H|h)abitue\b" , "$1abitué" )
NewStr := RegExReplace( NewStr, "\b(H|h)aba?eus\b" , "$1abeas"  )
NewStr := RegExReplace( NewStr, "\b(H|h)(?:ie|ei)ra(?:ch|rc)(y?|ies|(|ic)(|al|ally))\b" , "$1ierarch$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)(?:ierogl|eirogly)ph(s?|ic(s?|al|ally))\b" , "$1ieroglyph$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)(?:eigh|ig)(er|est|ness|ways?)\b" , "$1igh$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)(?:e?ighth)(|s|en(?:s?|ed|ing|ers?))\b" , "$1eight$2"  )
NewStr := RegExReplace( NewStr, "\b(H|h)(?:ave|va)ing\b" , "$1aving" )
NewStr := RegExReplace( NewStr, "\b(H|h)(?:al|le)p\b" , "$1elp" )
NewStr := RegExReplace( NewStr, "\b(H|h)(?:aev|vae)\b" , "$1ave" )
NewStr := RegExReplace( NewStr, "\b(G|g|[Uu]ng)re?atful(|ness|ly)\b" , "$1rateful$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g|[Oo]ng|[Ff]oreg|[Oo]utg)oign\b" , "$1oing"  )
NewStr := RegExReplace( NewStr, "\b(G|g|[Mm]isg)uidence\b" , "$1uidance"  )
NewStr := RegExReplace( NewStr, "\b(G|g|[Ii]nterg)alatic\b" , "$1alactic"  )
NewStr := RegExReplace( NewStr, "\b(G|g|[Dd]isg|[Uu]ng)ra(c|t)efull(|ly|ness)\b" , "$1ra$2eful$3"  )
NewStr := RegExReplace( NewStr, "\b(G|g)ut(?:u|t?a|t?e)ral(|ism|ness|ly)\b" , "$1uttural$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)usy\b" , "$1uys" )
NewStr := RegExReplace( NewStr, "\b(G|g)uidlines\b" , "$1uidelines" )
NewStr := RegExReplace( NewStr, "\b(G|g)uatamala(|ns?)\b" , "Guatemala$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)uag(e[ds]?|ing)\b" , "$1aug$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)rwo\b" , "$1row" )
NewStr := RegExReplace( NewStr, "\b(G|g)ridles\b" , "$1riddles" )
NewStr := RegExReplace( NewStr, "\b(G|g)ratui?tious(|ly|ness)\b" , "$1ratuitous$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)ran(?:|d-)((?:fa|mo)ther|parent|daughter|child(?:|ren))(s)?\b" , "$1rand$2$3"  )
NewStr := RegExReplace( NewStr, "\b(G|g)raf(?:it?|fit)t(i|o|ists?)\b" , "$1raffit$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)rae?t\b" , "$1reat" )
NewStr := RegExReplace( NewStr, "\b(G|g)r(?:opu|uop)(s?)\b" , "$1roup$2" )
NewStr := RegExReplace( NewStr, "\b(G|g)r(?:ievi|eiv)ous(|ly|ness)\b" , "$1rievous$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)overance\b" , "$1overnance"  )
NewStr := RegExReplace( NewStr, "\b(G|g)ov(?:orn?m|en?r?m|ermn?|ernmn|ernem)en?t(s?|al|ally)\b" , "$1overnment$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)ouvener\b" , "$1overnor" )
NewStr := RegExReplace( NewStr, "\b(G|g)ottleib\b" , "Gottlieb"  )
NewStr := RegExReplace( NewStr, "\b(G|g)onig\b" , "$1oing" )
NewStr := RegExReplace( NewStr, "\b(G|g)odounov\b" , "$1odunov"  )
NewStr := RegExReplace( NewStr, "\b(G|g)odes(s|ses)\b" , "$1oddes$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)naww(ed|ing|s)\b" , "$1naw$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)logg\b" , "$1lögg" )
NewStr := RegExReplace( NewStr, "\b(G|g)loabl\b" , "$1lobal" )
NewStr := RegExReplace( NewStr, "\b(G|g)iveing\b" , "$1iving" )
NewStr := RegExReplace( NewStr, "\b(G|g)irfr(?:ie|ei)nd(s?)\b" , "$1irlfriend$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)iid\b" , "$1ood" )
NewStr := RegExReplace( NewStr, "\b(G|g)ievn\b" , "$1iven" )
NewStr := RegExReplace( NewStr, "\b(G|g)et(?:ing|tin)\b" , "$1etting" )
NewStr := RegExReplace( NewStr, "\b(G|g)erat\b" , "$1reat" )
NewStr := RegExReplace( NewStr, "\b(G|g)eographicia(l|lly)\b" , "$1eographica$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)entlemens\b" , "$1entlemen's" )
NewStr := RegExReplace( NewStr, "\b(G|g)enociad(es?|al|ally)\b" , "$1enocid$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)enialia\b" , "$1enitalia" )
NewStr := RegExReplace( NewStr, "\b(G|g)eneraly\b" , "$1enerally"  )
NewStr := RegExReplace( NewStr, "\b(G|g)eneolog(y|ies|ical(|ly))\b" , "$1enealog$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)emeral\b" , "$1eneral" )
NewStr := RegExReplace( NewStr, "\b(G|g)auarana\b" , "$1uarana"  )
NewStr := RegExReplace( NewStr, "\b(G|g)arnison(s?|ed|ing)\b" , "$1arrison$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)anster\b" , "$1angster" )
NewStr := RegExReplace( NewStr, "\b(G|g)anes\b" , "$1ames" )
NewStr := RegExReplace( NewStr, "\b(G|g)alvini[sz](e[drs]?|ing|ation)\b" , "$1alvaniz$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)allax(y|ies)\b" , "$1alax$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)(?:[au]r[ae]|aur[ae]|uare)nte+([sd]?|ing)\b" , "$1uarantee$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)(?:uver?n[eo]|overne|venro)r(s?|ships?)\b" , "$1overnor$2"  )
NewStr := RegExReplace( NewStr, "\b(G|g)(?:una|au)nine\b" , "$1uanine"  )
NewStr := RegExReplace( NewStr, "\b(F|f|[Uu]nf)u(?:lfill+|fil?)l(s?|ed|ing|ment)\b" , "$1ulfill$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f|[Uu]nf)reind(s|ly|ships?|liness)\b" , "$1riend$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f|[Uu]nf)amillia(r|rly|l|rity)\b" , "$1amilia$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f|[Ii]nf|[Ii]ndef|[Dd]ef|[Aa]ff)(?:finite?|f?in[ae]te?|f?init)(s?|ly|ness)\b" , "$1init$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f|[Ii]nf|[DdMm]isinf|[Pp]?[DdRr]ef|[Cc]onf|[Mm]alf|[Tt]ransf)om+ati(on|ve|vely)\b" , "$1ormati$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f|[Hh]ydrof|[Dd]if|[Tt]rif|[Tt]etraf|[Pp]entaf|[Hh]exaf)lour(o|esc(e[sd]?|ing|en(t|ce))|i(c|[dn]es?|dat(e[sd]?|ing|ion)))\b" , "$1luor$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f|[Dd][yi]sf|[Mm]alf|[Cc]of)u[cn]tion(s?|al|ality|ed|ing)\b" , "$1unction$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f)we\b" , "$1ew" )
NewStr := RegExReplace( NewStr, "\b(F|f)uruther\b" , "$1urther" )
NewStr := RegExReplace( NewStr, "\b(F|f)urneral\b" , "$1uneral" )
NewStr := RegExReplace( NewStr, "\b(F|f)unguses\b" , "$1ungi" )
NewStr := RegExReplace( NewStr, "\b(F|f)und[^a]ment(s?|al(s?|is[mt]s?|ity|ly))\b" , "$1undament$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f)undametal(s?)\b" , "$1undamental$2" )
NewStr := RegExReplace( NewStr, "\b(F|f)ulfiled\b" , "$1ulfilled" )
NewStr := RegExReplace( NewStr, "\b(F|f)ued(s?|ing|ed|al)\b" , "$1eud$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f)rs(ts?|ly)\b" , "$1irs$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f)roniter\b" , "$1rontier" )
NewStr := RegExReplace( NewStr, "\b(F|f)rmo\b" , "$1rom" )
NewStr := RegExReplace( NewStr, "\b(F|f)requentily\b" , "$1requently" )
NewStr := RegExReplace( NewStr, "\b(F|f)ranchiz(e[ders]?|ing)(?!\s+[Bb]oy[sz])\b" , "$1ranchis$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f)r?omed\b" , "$1ormed" )
NewStr := RegExReplace( NewStr, "\b(F|f)outh\b" , "$1ourth" )
NewStr := RegExReplace( NewStr, "\b(F|f)ourties\b" , "$1orties" )
NewStr := RegExReplace( NewStr, "\b(F|f)ourt(y|ieth)\b" , "$1ort$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f)oundar(y|ies)\b" , "$1oundr$2" )
NewStr := RegExReplace( NewStr, "\b(F|f)oudn\b" , "$1ound" )
NewStr := RegExReplace( NewStr, "\b(F|f)oud?nation(s)?\b" , "$1oundation$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f)oucs\b" , "$1ocus" )
NewStr := RegExReplace( NewStr, "\b(F|f)orunner\b" , "$1orerunner" )
NewStr := RegExReplace( NewStr, "\b(F|f)orsaw\b" , "$1oresaw" )
NewStr := RegExReplace( NewStr, "\b(F|f)ormelly\b" , "$1ormerly" )
NewStr := RegExReplace( NewStr, "\b(F|f)ormaly\b" , "$1ormally" )
NewStr := RegExReplace( NewStr, "\b(F|f)ormalli([sz]ed?)\b" , "$1ormali$2" )
NewStr := RegExReplace( NewStr, "\b(F|f)orfiet\b" , "$1orfeit" )
NewStr := RegExReplace( NewStr, "\b(F|f)oreward\b" , "$1oreword" )
NewStr := RegExReplace( NewStr, "\b(F|f)orbiden\b" , "$1orbidden" )
NewStr := RegExReplace( NewStr, "\b(F|f)or(?:iegn|eing)(|ers?|isms?)\b" , "$1oreign$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f)oootball\b" , "$1ootball" )
NewStr := RegExReplace( NewStr, "\b(F|f)ollwo\b" , "$1ollow" )
NewStr := RegExReplace( NewStr, "\b(F|f)ollwoing\b" , "$1ollowing" )
NewStr := RegExReplace( NewStr, "\b(F|f)ol(?:o|l?)w(ing|ed|ers?)\b" , "$1ollow$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f)o(?:rw|wa)rd(s?)\b" , "$1orward$2" )
NewStr := RegExReplace( NewStr, "\b(F|f)luorish\b" , "$1lourish" )
NewStr := RegExReplace( NewStr, "\b(F|f)lorescent\b" , "$1luorescent" )
NewStr := RegExReplace( NewStr, "\b(F|f)leg(ed|e?ling|ing)\b" , "$1ledg$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f)lawess\b" , "$1lawless" )
NewStr := RegExReplace( NewStr, "\b(F|f)lamb[ou][ou]y[ae]n(t|ce|tly)\b" , "$1lamboyan$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f)lamable\b" , "$1lammable" )
NewStr := RegExReplace( NewStr, "\b(F|f)l(?:uoro|oure)sc(e[ds]?|ent|ence|ing)\b" , "$1luoresc$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f)isionable\b" , "$1issionable" )
NewStr := RegExReplace( NewStr, "\b(F|f)irts\b" , "$1irst" )
NewStr := RegExReplace( NewStr, "\b(F|f)irends\b" , "$1riends" )
NewStr := RegExReplace( NewStr, "\b(F|f)irc\b" , "$1urc" )
NewStr := RegExReplace( NewStr, "\b(F|f)inancai?l(ly)?\b" , "$1inancial$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f)inacial\b" , "$1inancial" )
NewStr := RegExReplace( NewStr, "\b(F|f)ilia?ment\b" , "$1ilament" )
NewStr := RegExReplace( NewStr, "\b(F|f)ightings\b" , "$1ighting" )
NewStr := RegExReplace( NewStr, "\b(F|f)iercly\b" , "$1iercely" )
NewStr := RegExReplace( NewStr, "\b(F|f)iel\b" , "$1ile" )
NewStr := RegExReplace( NewStr, "\b(F|f)iels\b" , "$1iles" )
NewStr := RegExReplace( NewStr, "\b(F|f)idn\b" , "$1ind" )
NewStr := RegExReplace( NewStr, "\b(F|f)icti(?:ci)?ous\b" , "$1ictitious" )
NewStr := RegExReplace( NewStr, "\b(F|f)iced\b" , "$1ixed" )
NewStr := RegExReplace( NewStr, "\b(F|f)ianll?y\b" , "$1inally"  )
NewStr := RegExReplace( NewStr, "\b(F|f)ianite\b" , "$1inite" )
NewStr := RegExReplace( NewStr, "\b(F|f)ertily\b" , "$1ertility" )
NewStr := RegExReplace( NewStr, "\b(F|f)eirce(r?|st|ly|ness)\b" , "$1ierce$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f)edreally\b" , "$1ederally" )
NewStr := RegExReplace( NewStr, "\b(F|f)easable\b" , "$1easible" )
NewStr := RegExReplace( NewStr, "\b(F|f)avoutrable\b" , "$1avorable" )
NewStr := RegExReplace( NewStr, "\b(F|f)av(ou?)rit(s?)\b" , "$1av$2rite$3"  )
NewStr := RegExReplace( NewStr, "\b(F|f)ascitis\b" , "$1asciitis" )
NewStr := RegExReplace( NewStr, "\b(F|f)ascitious\b" , "$1acetious" )
NewStr := RegExReplace( NewStr, "\b(F|f)anatism\b" , "$1anaticism" )
NewStr := RegExReplace( NewStr, "\b(F|f)amoust\b" , "$1amous" )
NewStr := RegExReplace( NewStr, "\b(F|f)am(?:ilai?|milia)r\b" , "$1amiliar" )
NewStr := RegExReplace( NewStr, "\b(F|f)aeture(s?)\b" , "$1eature$2" )
NewStr := RegExReplace( NewStr, "\b(F|f)acis(m|ts?|tic)\b" , "$1ascis$2"  )
NewStr := RegExReplace( NewStr, "\b(F|f)acinated\b" , "$1ascinated" )
NewStr := RegExReplace( NewStr, "\b(F|f)acillitate\b" , "$1acilitate" )
NewStr := RegExReplace( NewStr, "\b(F|f)acia\b" , "$1ascia" )
NewStr := RegExReplace( NewStr, "\b(F|f)(?:aught|ougth)\b" , "$1ought" )
NewStr := RegExReplace( NewStr, "\b(F|f)(?:amil|imili)es\b" , "$1amilies" )
NewStr := RegExReplace( NewStr, "\b(E|e|[Uu]ne)xpeced\b" , "$1xpected"  )
NewStr := RegExReplace( NewStr, "\b(E|e|[Uu]ne)xaminated\b" , "$1xamined"  )
NewStr := RegExReplace( NewStr, "\b(E|e|[Uu]ne)arnt\b" , "$1arned"  )
NewStr := RegExReplace( NewStr, "\b(E|e|[Ov]vere)xtentio(ns?)\b" , "$1xtensio$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e|[Nn]one|[Qq]uinte)s(?:sentai|sentua|sesita|sencia|en[tc]ia)l(s?|ly|ity|ities|ness)\b" , "$1ssential$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e|[Nn]one|[Pp]ree|[Cc]oe)xist[ai]nt(|ial(|ly))\b" , "$1xistent$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e|[Nn]one|[Pp]ree|[Cc]oe)xist(?:[aei]ns|[ai]nc)e\b" , "$1xistence"  )
NewStr := RegExReplace( NewStr, "\b(E|e|[Nn]one)quil(?:l?ib|libr)(iums?|ia|ate[ds]?|ating)\b" , "$1quilibr$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e|[Nn]one)ntitit(y|ies)\b" , "$1ntit$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e|[Ii]ne)xp(?:eria|iere)nc(e[ds]?|ing)\b" , "$1xperienc$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e|[Ii]ne)xcact\b" , "$1xact"  )
NewStr := RegExReplace( NewStr, "\b(E|e|[Ii]ne)l(?:lig[ai]|iga?)b(le|ility)\b" , "$1ligib$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e|[Ii]ne)ff[ei]ci?en(t|tly|cy|cies)\b" , "$1fficien$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e|[Ii]ne)fect(ive|ual)(|ly|ness)\b" , "$1ffect$2$3"  )
NewStr := RegExReplace( NewStr, "\b(E|e|[Dd]ise)ntaglemen(ts?)\b" , "$1ntanglemen$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e|[Dd]ise)ngagmen(ts?)\b" , "$1ngagemen$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)[sx]peciall?y\b" , "$1specially"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xtrordinar(y|ily)\b" , "$1xtraordinar$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xtremeophile\b" , "$1xtremophile" )
NewStr := RegExReplace( NewStr, "\b(E|e)xtrav[ae]n?g[ae]n(t|tly|ces?)\b" , "$1xtravagan$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xtradictio(ns?)\b" , "$1xtraditio$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xtra-(curricular|m(?:arit|ur)als?|terrestrials?)\b" , "$1xtra$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xtint\b" , "$1xtinct"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xtermist\b" , "$1xtremist" )
NewStr := RegExReplace( NewStr, "\b(E|e)xtered\b" , "$1xerted" )
NewStr := RegExReplace( NewStr, "\b(E|e)xtensivly\b" , "$1xtensively"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xt(?:eme|remem|rem)le?y\b" , "$1xtremely"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xress(ed|ions?|ive)\b" , "$1xpress$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xpropiat(e[ds]?|ing|ions?)\b" , "$1xpropriat$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xprience\b" , "$1xperience" )
NewStr := RegExReplace( NewStr, "\b(E|e)xprienced\b" , "$1xperienced" )
NewStr := RegExReplace( NewStr, "\b(E|e)xpresso\b" , "$1spresso" )
NewStr := RegExReplace( NewStr, "\b(E|e)xplo(?:ta|iti)ti(ons?|ve|vely)\b" , "$1xploitati$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xpla?inat(ions?|ory)\b" , "$1xplanat$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xperienc\b" , "$1xperience" )
NewStr := RegExReplace( NewStr, "\b(E|e)xpell(|s)\b" , "$1xpel$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xpe(?:ime|rima)nt(s?|al|ally)\b" , "$1xperiment$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xp(?:edit|iditi)o(ns?|nary)\b" , "$1xpeditio$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xp(?:ali|la)(ns?|ning)\b" , "$1xplai$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xoskelat(ons?|al)\b" , "$1xoskelet$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xonorate\b" , "$1xonerate"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xlud(es?|ing)\b" , "$1xclud$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xliled\b" , "$1xiled"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xinct\b" , "$1xtinct" )
NewStr := RegExReplace( NewStr, "\b(E|e)xicting\b" , "$1xciting" )
NewStr := RegExReplace( NewStr, "\b(E|e)xhalted\b" , "$1xalted"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xerp(ts?|ted|ting)\b" , "$1xcerp$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xerbat(e[sd]?|ing|ions?)\b" , "$1xacerbat$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xept(|ing|ional(|ly))\b" , "$1xcept$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xectued\b" , "$1xecuted" )
NewStr := RegExReplace( NewStr, "\b(E|e)xection\b" , "$1xecution" )
NewStr := RegExReplace( NewStr, "\b(E|e)xculsivly\b" , "$1xclusively"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xcitment\b" , "$1xcitement" )
NewStr := RegExReplace( NewStr, "\b(E|e)xcisted\b" , "$1xisted" )
NewStr := RegExReplace( NewStr, "\b(E|e)xcel(ls?)\b" , "$1xce$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xcecut(e[sd]?|ing|i(on|ve)s?)\b" , "$1xecut$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xapansi(ons?|ve|vely)\b" , "$1xpansi$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xampt\b" , "$1xempt" )
NewStr := RegExReplace( NewStr, "\b(E|e)xag(?:er?|ger)rat(e[sd]?|ing|ions?)\b" , "$1xaggerat$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)xacavat(e[ds]?|ing|ions?|ors?)\b" , "$1xcavat$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)x(?:isi|sis)t(s?|ing|ed|ence)\b" , "$1xist$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)x(?:ertern|trn|te[rn])al\b" , "$1xternal"  )
NewStr := RegExReplace( NewStr, "\b(E|e)x(?:em|ma)pl(es?)\b" , "$1xampl$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)x(?:ell?[ae]|cel[ae]|cella)n(t|tly|c[ey])\b" , "$1xcellen$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)x(?:chanch|ch?ang|chagn)(e[sd]?|ing)\b" , "$1xchang$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)x(?:cercis|ercies|ersi[sz]|ecis)(e[sdr]?|ing)\b" , "$1xercis$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)x(?:ced|ee)d(ed|ing|ingly)\b" , "$1xceed$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)videntally\b" , "$1vidently" )
NewStr := RegExReplace( NewStr, "\b(E|e)veyr\b" , "$1very" )
NewStr := RegExReplace( NewStr, "\b(E|e)verthing\b" , "$1verything"  )
NewStr := RegExReplace( NewStr, "\b(E|e)ven(?:htu|ti?)al(|ly|it(y|ies))\b" , "$1ventual$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)val[au]t(e[ds]?|ing|ion|ive|ors?)\b" , "$1valuat$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)ur(?:opi|po?e)a(ns?|ni[sz]e[sd]?|ni[sz]ation)\b" , "$1uropea$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)thnocentricm\b" , "$1thnocentrism"  )
NewStr := RegExReplace( NewStr, "\b(E|e)stab(?:ish|lis|ilish)(e[ds]?|ing|ments?)\b" , "$1stablish$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)ssens(es?)\b" , "$1ssenc$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)spesially\b" , "$1specially" )
NewStr := RegExReplace( NewStr, "\b(E|e)specally\b" , "$1specially" )
NewStr := RegExReplace( NewStr, "\b(E|e)sle\b" , "$1lse" )
NewStr := RegExReplace( NewStr, "\b(E|e)sitmat(es?|ed|ing|ions?)\b" , "$1stimat$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)sctasy\b" , "$1cstasy" )
NewStr := RegExReplace( NewStr, "\b(E|e)s+en[tc]ialy\b" , "$1ssentially"  )
NewStr := RegExReplace( NewStr, "\b(E|e)rrupt(s?|ed|ing|ions?)\b" , "$1rupt$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)rrect(s?|ing|ed|ions?|ly)\b" , "$1rect$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)rradica(bl[ey]|te[sd]?|tors?|ting|tions?)\b" , "$1radica$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)ratica?ly\b" , "$1rratically"  )
NewStr := RegExReplace( NewStr, "\b(E|e)rati(c|cally)\b" , "$1rrati$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)r(?:on[ei]?|roni?)ous(|ly)?\b" , "$1rroneous$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)quitorial\b" , "$1quatorial" )
NewStr := RegExReplace( NewStr, "\b(E|e)quip(ed|ing)\b" , "$1quipp$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)quilibrum\b" , "$1quilibrium" )
NewStr := RegExReplace( NewStr, "\b(E|e)qui(?:ale|v[aei]la|le|vlal[ea]|v[ei]le)n(ts?|tly|ces?)\b" , "$1quivalen$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)q(?:u?ip|iu?p?)pi?ment\b" , "$1quipment"  )
NewStr := RegExReplace( NewStr, "\b(E|e)p(?:idso|i?sio|isoi|ispo|siso)d(es?|ic|ical(|ly))\b" , "$1pisod$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)nvolutionary\b" , "$1volutionary" )
NewStr := RegExReplace( NewStr, "\b(E|e)nvi?(?:rion?|ro|orn?)men(ts?|tal(|ly|ists?))\b" , "$1nvironmen$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)ntrep(?:er?neu|r?enue?)r(s?|ed|ing|ships?|ial(ly)?)\b" , "$1ntrepreneur$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)ntitlied\b" , "$1ntitled"  )
NewStr := RegExReplace( NewStr, "\b(E|e)ntie?ri?([lt]y|ties)" , "$1ntire$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)nteratin(ments?|ing|s?|ed)\b" , "$1ntertain$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)nt(?:era|re)nc(e[sd]?|ing|ement)\b" , "$1ntranc$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)nsconsed\b" , "$1nsconced" )
NewStr := RegExReplace( NewStr, "\b(E|e)nourmou(s|sly)\b" , "$1normou$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)nought\b" , "$1nough" )
NewStr := RegExReplace( NewStr, "\b(E|e)nlargmen(ts?)\b" , "$1nlargemen$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)nglightenmen(ts?)\b" , "$1nlightenmen$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)ng(?:i?ene|n?e|in)er(s?|ed|ing)\b" , "$1ngineer$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)nforceing\b" , "$1nforcing"  )
NewStr := RegExReplace( NewStr, "\b(E|e)ndig\b" , "$1nding" )
NewStr := RegExReplace( NewStr, "\b(E|e)ndevo(u?rs?|u?red|u?ring)\b" , "$1ndeavo$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)ncylc?opedi(as?|c)\b" , "$1ncyclopedi$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)ncouraing\b" , "$1ncouraging" )
NewStr := RegExReplace( NewStr, "\b(E|e)nchancemen(ts?)\b" , "$1nhancemen$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)nameld\b" , "$1nameled" )
NewStr := RegExReplace( NewStr, "\b(E|e)n(p[a-gijkm-z]|m[a-df-hj-np-z]|b)\B" , "$1m$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)mph[as]is(|ed?|ing)\b" , "$1mphasis$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)mphys[iy]ma\b" , "$1mphysema"  )
NewStr := RegExReplace( NewStr, "\b(E|e)mphai([sz]ed?)\b" , "$1mphasi$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)mperic(al|ally|is[mt])\b" , "$1mpiric$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)mnity\b" , "$1nmity"  )
NewStr := RegExReplace( NewStr, "\b(E|e)mminently\b" , "$1minently" )
NewStr := RegExReplace( NewStr, "\b(E|e)mmigrat(e[sd]?|ing|ions?)\b" , "$1migrat$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)minate(s?|d)\b" , "$1manate$2" )
NewStr := RegExReplace( NewStr, "\b(E|e)mblamatic(|ally)\b" , "$1mblematic$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)mbezz?ell(e[drs]?|ing|ment)\b" , "$1mbezzl$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)mbargos\b" , "$1mbargoes" )
NewStr := RegExReplace( NewStr, "\b(E|e)mbar(?:ra|as)se?(ments?|ing|d)\b" , "$1mbarrass$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)mbar(?:as|ra)s(|e[ds]|ing(|ly)|ments?)\b" , "$1mbarrass$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)m(?:miss?ar?|m?isar?|m?iss?ar)r(y|ies)\b" , "$1missar$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)m(?:m?i|mit?)t(e[dr]|ing)\b" , "$1mitt$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)l[ei]ment(?:a|e?r)y\b" , "$1lementary"  )
NewStr := RegExReplace( NewStr, "\b(E|e)lphan(ts?)\b" , "$1lephan$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)llect(ed|ions?|ing|ive(s?|ly)|or(s?|al|ally|ates?)|able|ability|ioneer(s?|ed|ing))\b" , "$1lect$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)limenta(l|ry)\b" , "$1lementa$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)licid(ed|ing)\b" , "$1licit$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)let?tri(cs?|city|cians?|cal(|ly)|fy(|ing)|fi(e[ds]|cation))\b" , "$1lectri$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)les\b" , "$1els" )
NewStr := RegExReplace( NewStr, "\b(E|e)lectricly\b" , "$1lectrically"  )
NewStr := RegExReplace( NewStr, "\b(E|e)lectria(l|lly)\b" , "$1lectrica$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)le(?:ctric|trici)(ty|ans?)\b" , "$1lectrici$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)l(?:emin|imi)at(e[ds]?|ing|ions?)\b" , "$1liminat$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)iter\b" , "$1ither" )
NewStr := RegExReplace( NewStr, "\b(E|e)igth\b" , "$1ighth" )
NewStr := RegExReplace( NewStr, "\b(E|e)fort(s?)\b" , "$1ffort$1" )
NewStr := RegExReplace( NewStr, "\b(E|e)fel\b" , "$1vil" )
NewStr := RegExReplace( NewStr, "\b(E|e)f?fectivly\b" , "$1ffectively"  )
NewStr := RegExReplace( NewStr, "\b(E|e)earl(y|ier|iest)\b" , "$1arl$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)duact(ed?|es|ing|ors?|ion(|al|ally))\b" , "$1ducat$2" )
NewStr := RegExReplace( NewStr, "\b(E|e)ditt(ed|ing|or(|ial)s?)\b" , "$1dit$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)c[ce]onom(y|ies|ics?|ical|ically|ists?)\b" , "$1conom$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)ct\b" , "$1tc" )
NewStr := RegExReplace( NewStr, "\b(E|e)conomics(ts?)\b" , "$1conomis$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)comonic\b" , "$1conomic" )
NewStr := RegExReplace( NewStr, "\b(E|e)clisps?(e[sd]?|ing)\b" , "$1clips$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)arlies\b" , "$1arliest" )
NewStr := RegExReplace( NewStr, "\b(E|e)alier\b" , "$1arlier"  )
NewStr := RegExReplace( NewStr, "\b(E|e)ahc\b" , "$1ach" )
NewStr := RegExReplace( NewStr, "\b(E|e)achother\b" , "$1ach other"  )
NewStr := RegExReplace( NewStr, "\b(E|e)(?:m+i[stc]|mmi(?:ss?|t|c))io(ns?)\b" , "$1missio$2"  )
NewStr := RegExReplace( NewStr, "\b(E|e)(?:cc|g)lecti(cs?|cally|cism)\b" , "$1clecti$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Uu]nd)i[sc]ic?plin(e[ds]?|ing)\b" , "$1isciplin$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Uu]nd)esireab(les?|ly|ility)\b" , "$1esirab$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Uu]nd)ecidely\b" , "$1ecidedly"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Uu]nd)ecideabl(e|y)\b" , "$1ecidabl$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Uu]nd)e(?:om|mor)cra(cy|cies|ts?|tic(|ally))\b" , "$1emocra$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Rr]ed)icover([ys]?|e[dr]|ing|ies)\b" , "$1iscover$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Pp]r)evi(?:u?ose?|ouse)(ly)?\b\b" , "$1evious$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Pp]r)(?:esc|escri|ecr|iscr)ib(e[ds]?|ing)\b" , "$1escrib$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Mm]isd)eme(?:no|a?ne)(rs?)\b" , "$1emeano$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Ii]nd|[Nn]ond)(?:ist?|esct?|es)ruct(|ive(|ly|ness)|ions?|ible)\b" , "$1estruct$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Ii]nd)isti(?:gui|ng(?:[iu]|qui))sh(|e[ds]|ing|abl[ey])\b" , "$1istinguish$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Ii]nd)ispenc(e[ds]?|ing|abl[ey])\b" , "$1ispens$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Ii]nd)if(?:er?|f[ai]?)ren(t|tly|ce[sd]?|cing|tia(ls?|te[ds]?|ting|tions?|ble|bility|e?))\b" , "$1ifferen$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Ii]nd)eff?in[ae]te?i(ons?|ve|vely)\b" , "$1efiniti$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Ii]nd)ef(?:fin[iae]te?|f?in[ae]te?|f?init)(|s|ly|ness)\b" , "$1efinite$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Ii]nd)ectect(s?|ed|ing|ors?|ions?|ives?|abl[ey])\b" , "$1etect$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Ii]nd)e(?:cis|sc?isi|sici)(ons?|ve|vely)\b" , "$1ecisi$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d|[Ii]nd)(?:riectl|irect)y\b" , "$1irectly"  )
NewStr := RegExReplace( NewStr, "\b(D|d)[ei]s(?:sigi?n|gin|ing)(s?|ed|ers?|ing)\b" , "$1esign$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)upicat(e[sd]?|ing|)\b" , "$1uplicat$2" )
NewStr := RegExReplace( NewStr, "\b(D|d)umbell\b" , "$1umbbell" )
NewStr := RegExReplace( NewStr, "\b(D|d)ukeship\b" , "$1ukedom" )
NewStr := RegExReplace( NewStr, "\b(D|d)uing\b" , "$1uring"  )
NewStr := RegExReplace( NewStr, "\b(D|d)u(?:ri|rrin|tin)g\b" , "$1uring" )
NewStr := RegExReplace( NewStr, "\b(D|d)runkeness\b" , "$1runkenness" )
NewStr := RegExReplace( NewStr, "\b(D|d)rummless\b" , "$1rumless" )
NewStr := RegExReplace( NewStr, "\b(D|d)ruming\b" , "$1rumming"  )
NewStr := RegExReplace( NewStr, "\b(D|d)rnik\b" , "$1rink" )
NewStr := RegExReplace( NewStr, "\b(D|d)riveing\b" , "$1riving" )
NewStr := RegExReplace( NewStr, "\b(D|d)ravadian\b" , "$1ravidian"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ramtic\b" , "$1ramatic" )
NewStr := RegExReplace( NewStr, "\b(D|d)ra(f|ugh)t(m[ae]n|wom[ae]n|manship)\b" , "$1ra$2ts$3"  )
NewStr := RegExReplace( NewStr, "\b(D|d)owloads\b" , "$1ownloads" )
NewStr := RegExReplace( NewStr, "\b(D|d)oulbe\b" , "$1ouble" )
NewStr := RegExReplace( NewStr, "\b(D|d)ont\b" , "$1on't" )
NewStr := RegExReplace( NewStr, "\b(D|d)ominaton\b" , "$1omination"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ollers\b" , "$1ollars" )
NewStr := RegExReplace( NewStr, "\b(D|d)oe(?:ns|se)\b" , "$1oes" )
NewStr := RegExReplace( NewStr, "\b(D|d)oc[rt]ine(s)?\b" , "$1octrine$2" )
NewStr := RegExReplace( NewStr, "\b(D|d)ocumenatr(y|ies)\b" , "$1ocumentar$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)o(?:ign|img|ind|nig)\b" , "$1oing" )
NewStr := RegExReplace( NewStr, "\b(D|d)o(?:ens|se?n)'t\b" , "$1oesn't" )
NewStr := RegExReplace( NewStr, "\b(D|d)i[cs]ipl(es?|ine[ds]?|ining)\B" , "$1iscipl$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ivsion\b" , "$1ivision" )
NewStr := RegExReplace( NewStr, "\b(D|d)iviso(ns?)\b" , "$1ivisio$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ivice\b" , "$1evice" )
NewStr := RegExReplace( NewStr, "\b(D|d)istribusion\b" , "$1istribution" )
NewStr := RegExReplace( NewStr, "\b(D|d)istain(s?|ed|ing|ful(|ly|ness))\b" , "$1isdain$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)issonent\b" , "$1issonant" )
NewStr := RegExReplace( NewStr, "\b(D|d)issobedi[ea]n(t|ce|tly)\b" , "$1isobedien$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)issarr?ay\b" , "$1isarray"  )
NewStr := RegExReplace( NewStr, "\b(D|d)issagre?emen(ts?)\b" , "$1isagreemen$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)iss?app?earenc(es?)\b" , "$1isappearanc$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)isric(ts?)\b" , "$1istric$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)isquis(e[ds]?|ing)\b" , "$1isguis$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)isputandem\b" , "$1isputandum" )
NewStr := RegExReplace( NewStr, "\b(D|d)ispite\b" , "$1espite" )
NewStr := RegExReplace( NewStr, "\b(D|d)ispicabl(e|y)\b" , "$1espicabl$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ispell\b" , "$1ispel"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ispells\b" , "$1ispels" )
NewStr := RegExReplace( NewStr, "\b(D|d)ispeling\b" , "$1ispelling" )
NewStr := RegExReplace( NewStr, "\b(D|d)ispeled\b" , "$1ispelled" )
NewStr := RegExReplace( NewStr, "\b(D|d)isparingly\b" , "$1isparagingly"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ispaly\b" , "$1isplay" )
NewStr := RegExReplace( NewStr, "\b(D|d)ispair(ed|s)?\b" , "$1espair$2" )
NewStr := RegExReplace( NewStr, "\b(D|d)isover\b" , "$1iscover" )
NewStr := RegExReplace( NewStr, "\b(D|d)isolv(ed?|ing)\b" , "$1issolv$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)isi([a-kmo-z]|m[a-np-z])\B" , "$1issi$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)isenchanged\b" , "$1isenchanted" )
NewStr := RegExReplace( NewStr, "\b(D|d)isem+inat(e[ds]?|ing|ions?)\b" , "$1isseminat$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)iscrepen[cs](y|ies)\b" , "$1iscrepanc$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)iscoverd\b" , "$1iscovered" )
NewStr := RegExReplace( NewStr, "\b(D|d)isatisf(y|ied|action)\b" , "$1issatisf$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)isapear\b" , "$1isappear" )
NewStr := RegExReplace( NewStr, "\b(D|d)isapeared\b" , "$1isappeared" )
NewStr := RegExReplace( NewStr, "\b(D|d)isagr(?:e|eee)(|d|s|ments?|abl[ey])\b" , "$1isagree$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)isa(?:ste|t)rou(s|sly)\b" , "$1isastrou$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)is(?:ctinc|tic)t(i(ve|on|vely))?\b" , "$1istinct$2" )
NewStr := RegExReplace( NewStr, "\b(D|d)is(?:ap+ear|sap+ear?)r(s?|ed|ing|ances?)\b" , "$1isappear$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)is(?:(?:|ss+)[aeio]d[ae]|s+[aeo]d[ae]|s+[aeio]da)n(ts?|ce)\b" , "$1issiden$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)irectiosn\b" , "$1irection" )
NewStr := RegExReplace( NewStr, "\b(D|d)iptheria\b" , "$1iphtheria" )
NewStr := RegExReplace( NewStr, "\b(D|d)iplomancy\b" , "$1iplomacy"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ip(?:ht|th)ong(s)?\b" , "$1iphthong$2" )
NewStr := RegExReplace( NewStr, "\b(D|d)ioses(es?|an)\b" , "$1ioces$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)iminuiti(ves?|vely|ons?)\b" , "$1iminuti$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ime(?:nt?|sn)ion(s?|al(|ly|ity))\b" , "$1imension$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ifus(er?[sd]?|ing|ely|eness|ion|ive)\b" , "$1iffus$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ifferemt\b" , "$1ifferent" )
NewStr := RegExReplace( NewStr, "\b(D|d)iff?[aie]?ren(?:tiatiat|[cs]iat|)(e[ds]?|ing|ions?)\b" , "$1ifferentiat$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ifefrent\b" , "$1ifferent" )
NewStr := RegExReplace( NewStr, "\b(D|d)if(?:f?iculi|icul|f?cul)t(|l?y|ies)\b" , "$1ifficult$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)iet(y|ies)\b" , "$1eit$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ieing\b" , "$1ying" )
NewStr := RegExReplace( NewStr, "\b(D|d)idint\b" , "$1idn't" )
NewStr := RegExReplace( NewStr, "\b(D|d)icuss(|ed|ing|ions?)\b" , "$1iscuss$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)iconnect(s?|ed|ing|ions?)\b" , "$1isconnect$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)iciplin\b" , "$1iscipline" )
NewStr := RegExReplace( NewStr, "\b(D|d)ichtom(y|ies)\b" , "$1ichotom$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)iaste(rs?)\b" , "$1isaste$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)iarhea\b" , "$1iarrhea" )
NewStr := RegExReplace( NewStr, "\b(D|d)iaplay\b" , "$1isplay" )
NewStr := RegExReplace( NewStr, "\b(D|d)iamons\b" , "$1iamonds" )
NewStr := RegExReplace( NewStr, "\b(D|d)iamate(rs?)\b" , "$1iamete$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)i(?:tri|stru)but(e[ds]?|ing|ors?|ions?)\b" , "$1istribut$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)i(?:ab|bo)lica(l|lly)\b" , "$1iabolica$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)evide\b" , "$1ivide" )
NewStr := RegExReplace( NewStr, "\b(D|d)evided\b" , "$1ivided" )
NewStr := RegExReplace( NewStr, "\b(D|d)evels\b" , "$1elves" )
NewStr := RegExReplace( NewStr, "\b(D|d)evel(?:opo|eop)r(s)?\b" , "$1eveloper$2" )
NewStr := RegExReplace( NewStr, "\b(D|d)eve(?:llopp?|lopp)(e[dr]|ers|ing|ments?|s?)\b" , "$1evelop$2" )
NewStr := RegExReplace( NewStr, "\b(D|d)ev(?:[ei]sta|asa?)t(e[ds]?|ing|ion)\b" , "$1evastat$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ev(?:o?lop|[eo]lope)(s?|ed|ers?|ing|ment(s?|al(ly)?))\b" , "$1evelop$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)etente\b" , "$1étente"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ete(?:rmin|m)in(e[ds]?|ing|ate|ations?)\b" , "$1etermin$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ete(?:o?r|rior)iat(e[ds]?|ing|ion)\b" , "$1eteriorat$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)etatch(|e[ds]|ing|ments?|able)\b" , "$1etach$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)etaill(s?|ed|ing)\b" , "$1etail$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)estroie(d|rs?)\b" , "$1estroye$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)estory(s?|ed|ers?|ing)\b" , "$1estroy$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)establi(s|z)(e[drs]?|ing|ation)\b" , "$1estabili$2$3"  )
NewStr := RegExReplace( NewStr, "\b(D|d)esp[ai]rat(e|ely|ion)\b" , "$1esperat$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)espict\b" , "$1epict" )
NewStr := RegExReplace( NewStr, "\b(D|d)espatched\b" , "$1ispatched" )
NewStr := RegExReplace( NewStr, "\b(D|d)esorient(s?|ed|ing)\b" , "$1isorient$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)esorde(rs?|rly)\b" , "$1isorde$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)esktiop\b" , "$1esktop" )
NewStr := RegExReplace( NewStr, "\b(D|d)esitned\b" , "$1estined" )
NewStr := RegExReplace( NewStr, "\b(D|d)esintegrat(e[ds]?|ing|ion|ors?)\b" , "$1isintegrat$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)esinatio(ns?)\b" , "$1estinatio$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)esi(de[ds]?|ding|sions?|dedly)\b" , "$1eci$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)esease\b" , "$1isease" )
NewStr := RegExReplace( NewStr, "\b(D|d)escuss\b" , "$1iscuss" )
NewStr := RegExReplace( NewStr, "\b(D|d)escriptoin\b" , "$1escription" )
NewStr := RegExReplace( NewStr, "\b(D|d)escendands\b" , "$1escendants" )
NewStr := RegExReplace( NewStr, "\b(D|d)es+[aei]cat(e[ds]?|ions?)\b" , "$1esiccat$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)erriere\b" , "$1errière" )
NewStr := RegExReplace( NewStr, "\b(D|d)erog[io]tory\b" , "$1erogatory"  )
NewStr := RegExReplace( NewStr, "\b(D|d)erivia?ti(ves?|ons?)\b" , "$1erivati$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)eram\b" , "$1ream" )
NewStr := RegExReplace( NewStr, "\b(D|d)erailleur\b" , "$1érailleur" )
NewStr := RegExReplace( NewStr, "\b(D|d)ependant\b" , "$1ependent" )
NewStr := RegExReplace( NewStr, "\b(D|d)ep(?:ar|tart)ment(al|ally|s)?\b" , "$1epartment$2" )
NewStr := RegExReplace( NewStr, "\b(D|d)ensly\b" , "$1ensely" )
NewStr := RegExReplace( NewStr, "\b(D|d)enoue?ment\b" , "$1énouement"  )
NewStr := RegExReplace( NewStr, "\b(D|d)enegrat(e[ds]?|ing|ors?|ions?)\b" , "$1enigrat$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)emolisio(ns?)\b" , "$1emolitio$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)emographical\b" , "$1emographic" )
NewStr := RegExReplace( NewStr, "\b(D|d)em?minish(|e[sd]|ing|ments?|abl[ey])\b" , "$1iminish$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)elusionally\b" , "$1elusively" )
NewStr := RegExReplace( NewStr, "\b(D|d)eliniat(e[ds]?|ing|ions?|ors?)\b" , "$1elineat$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)eliberae?tly\b" , "$1eliberately"  )
NewStr := RegExReplace( NewStr, "\b(D|d)eleriou(s|sly)\b" , "$1eliriou$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)elagat(e[ds]?|ing|ions?)\b" , "$1elegat$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)egredation\b" , "$1egradation" )
NewStr := RegExReplace( NewStr, "\b(D|d)egrate\b" , "$1egrade" )
NewStr := RegExReplace( NewStr, "\b(D|d)efinance\b" , "$1efiance" )
NewStr := RegExReplace( NewStr, "\b(D|d)effen([cs])(es?|ive(|ly|ness)|ibl[ey]|eless)\b" , "$1efen$2$3"  )
NewStr := RegExReplace( NewStr, "\b(D|d)efenden(ts?)\b" , "$1efendan$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)efencive\b" , "$1efensive" )
NewStr := RegExReplace( NewStr, "\b(D|d)ef+i(?:nit|nti|nint?i?)(ons?|ve(s?|ly|ness))\b" , "$1efiniti$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ef(?:fn?in|f?inin)(e[ds]?|ing|itions?)\b" , "$1efin$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ecress\b" , "$1ecrees" )
NewStr := RegExReplace( NewStr, "\b(D|d)ecomposit\b" , "$1ecompose" )
NewStr := RegExReplace( NewStr, "\b(D|d)ecomposit(s|ed|ing)\b" , "$1ecompos$2" )
NewStr := RegExReplace( NewStr, "\b(D|d)ecidious\b" , "$1eciduous" )
NewStr := RegExReplace( NewStr, "\b(D|d)ecath[ae]l(ons?|etes?)\b" , "$1ecathl$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ecaf(?:fi?e?|ei)nat(e[ds]?|ing|ion)\b" , "$1ecaffeinat$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)ebateabl(e|y)\b" , "$1ebatabl$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)eatils\b" , "$1etails" )
NewStr := RegExReplace( NewStr, "\b(D|d)eafult(s?|ed|ing)\b" , "$1efault$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)e(?:vol[oe]|levo|vel)p[oe]?men(ts?|tal)\b" , "$1evelopmen$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)e(?:scr?|s?cri?)ipte(rs?)\b" , "$1escripto$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)au(?:gt?h|gt|hg?t)er(s?)\b" , "$1aughter$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)anceing\b" , "$1ancing" )
NewStr := RegExReplace( NewStr, "\b(D|d)amen(ou?)r(s?)\b" , "$1emean$2r$3" )
NewStr := RegExReplace( NewStr, "\b(D|d)almatio(ns?)\b" , "$1almatia$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)akiri\b" , "$1aiquiri" )
NewStr := RegExReplace( NewStr, "\b(D|d)ael(s?|t|ing)\b" , "$1eal$2" )
NewStr := RegExReplace( NewStr, "\b(D|d)(id|oes)'?nt\b" , "$1$2n't"  )
NewStr := RegExReplace( NewStr, "\b(D|d)(?:occ?u(?:eme?nt|mnet|metn)|occument|cc?ument)(s?|ed|a(tion|ry|ries))?\b" , "$1ocument$2" )
NewStr := RegExReplace( NewStr, "\b(D|d)(?:iriv|eriviat)(e[ds]?|ing|ations?)\b" , "$1eriv$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)(?:e|il)lapidat(e[ds]?|ion)\b" , "$1ilapidat$2"  )
NewStr := RegExReplace( NewStr, "\b(D|d)(?:erams|reasm)\b" , "$1reams" )
NewStr := RegExReplace( NewStr, "\b(C|c|[Uu]nc|[Aa]sc)ertian(s?|ty|ties|ing)\b" , "$1ertain$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Uu]nc)onviced\b" , "$1onvinced"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Uu]nc)onve(?:tion|nti)al(|ly|is[mt]|ize[sd]?)\b" , "$1onventional$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Uu]nc)ontrol(e[dr]|ing)\b" , "$1ontroll$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Uu]nc)onstain(t?s?|ed|ing)\b" , "$1onstrain$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Uu]nc)onsern(s?|ing|ed)\b" , "$1oncern$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Uu]nc)ommongly\b" , "$1ommonly"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Uu]nc)omme(ns?|ners?|nly|nali?t(y|ies))\b" , "$1ommo$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Uu]nc)o(?:nstitu|stitut)ion(s?|al(|ly|ity))\b" , "$1onstitution$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Uu]nc)o(?:nforta|mforti)bl(e|y)\b" , "$1omfortabl$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Uu]nc)lera\b" , "$1lear"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Uu]nc)haracter(?:sisti|i[st]i|isiti|sti|ist|i)c(s?|ally)\b" , "$1haracteristic$2"  )  
NewStr := RegExReplace( NewStr, "\b(C|c|[Uu]nc)er[io]mon(y|ies|i(al|ous)(|ly))\b" , "$1eremon$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Uu]nc)ertai?ni(t|l)(y|ies)\b" , "$1ertain$2$3"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Ss]ubc|[Pp]rec|[Ss]emic|[Uu]nc)on[cs]io(us|usly|usness|nabl[ey])\b" , "$1onscio$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Ss]ubc|[Pp]rec|[Ss]emic|[Uu]nc)ons(?:ciou|ici?ous?)ness(|es)\b" , "$1onsciousness$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Rr]ec|[Uu]nc)onsitut(e[ds]?|ing|ion(s?|al(|ly|ity)))\b" , "$1onstitut$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Rr]ec)ogni(s|z)en(t|ces?|tly)\b" , "$1ogni$2an$3"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Rr]ec)irculato(ns?)\b" , "$1irculatio$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[RrDd]ec|[Mm]isc)o(?:nst|ntr|nsttr|ntstr|str)ucti(ng|ons?|ve|vely)\b" , "$1onstructi$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Nn]onc)omp[ie]tit(ons?|ve(|ly|ness))\b" , "$1ompetiti$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Mm]isc|[Rr]ec)al(?:ucu?|cul|ul?)lat(e[sd]?|ing|ingly|ions?|ors?)\b" , "$1alculat$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Mm]isc)hoosen\b" , "$1hosen"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Ii]nterc|[Uu]nc|[Ee]xc|[Rr]ec|[Dd]isc)ha([nr])g[aei](bl[ey]|bility|bleness)\b" , "$1ha$2gea$3"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Ii]nc|[Hh]istoc)ompa(?:ti?[ai]b|ti?abi|bi)lit(y|ies)\b" , "$1ompatibilit$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Ii]nc|[Dd]isinc)orp(?:[ae]rt?|ort)at(e[ds]?|ions?|ing)\b" , "$1orporat$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Ii]nc)r(?:ead[ia]|eda)b(l[ey]|ility)\b" , "$1redib$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Ii]nc)onvertabl(es?|y)\b" , "$1onvertibl$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Ii]nc)onv(?:eine|vienie|enia)n(t|tly|ces?)\b" , "$1onvenien$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Ii]nc)onstatn\b" , "$1onstant"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Ii]nc)onstanly\b" , "$1onstantly"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Ii]nc)oncie(ts?|ted|ve[srd]?|ving|vab(l[ey]|ility))\b" , "$1oncei$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Ii]nc)omplet(?:elyl|le?y)\b" , "$1ompletely"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Ii]nc)ompati?abl([ey])\b" , "$1ompatibl$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Ii]nc)omp(?:et[ai]|[ai]t[ea])n(ce|t|tly)\b" , "$1ompeten$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Ii]nc)(?:r+ect|or(?:rr+|)ec?tc?|or+etc?)(s?|ed|ing(ly)?|ions?|ly|[ai]b(le|ility)|or|ness)\b" , "$1orrect$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Dd]isc|[Uu]nc)onect(s?|ions?|ed|ing|ives?|ors?)\b" , "$1onnect$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Dd]isc)ontiu(e[sd]?|ing|al(ly)?)\b" , "$1ontinu$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Dd]isc)ontinueing\b" , "$1ontinuing"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Dd]isc)ontinous(|ly)\b" , "$1ontinuous$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Dd]isc)o(?:ns|un)tinu(e[sd]?|ity|ations?|(al|ous)(|ly))\b" , "$1ontinu$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Dd]ec)ontaiminat(e[ds]?|ing|ions?)\b" , "$1ontaminat$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|[Dd]ec)om(?:is|mi)sio(ns?|ning|ned|ners?)\b" , "$1ommissio$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|F|f)uliminat(e[ds]?|ing|ions?)\b" , "$1ulminat$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c|(?:[Bb]|[Tt]r|[Ss]em|[Ss]esqu|[Qq]uadr)ic)ente(?:nte|)nia(ls?|lly)\b" , "$1entennia$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ylinderical(ly)?\b" , "$1ylindrical$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)xan\b" , "$1yan" )
NewStr := RegExReplace( NewStr, "\b(C|c)usin(es?)\b" , "$1uisin$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)uriousit(y|ies)\b" , "$1uriosit$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ur(?:r?entel|r?en[lt]|ente?l|rente?le)e?y\b" , "$1urrently"  )
NewStr := RegExReplace( NewStr, "\b(C|c)umulatative\b" , "$1umulative"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ul(?:lina|iner?|inar)ry\b" , "$1ulinary"  )
NewStr := RegExReplace( NewStr, "\b(C|c)u?acuse([sd])\b" , "$1aucuse$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)u(?:tso|sot)mer(s)?\b" , "$1ustomer$2" )
NewStr := RegExReplace( NewStr, "\b(C|c)rystali(s|z)atio(ns?)\b" , "$1rystalli$2atio$3"  )
NewStr := RegExReplace( NewStr, "\b(C|c)rusies\b" , "$1ruises" )
NewStr := RegExReplace( NewStr, "\b(C|c)rusie(rs?|d)\b" , "$1ruise$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)rudites\b" , "$1rudités" )
NewStr := RegExReplace( NewStr, "\b(C|c)rucifiction\b" , "$1rucifixion" )
NewStr := RegExReplace( NewStr, "\b(C|c)rockodil(es?)\b" , "$1rocodil$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)riti[zs](e[ds]?|ing)\b" , "$1riticiz$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ritisi[sz]?(ms?|e[ds]?|ing)\b" , "$1riticis$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)riticists\b" , "$1ritics" )
NewStr := RegExReplace( NewStr, "\b(C|c)riterias\b" , "$1riteria"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ritereon\b" , "$1riterion"  )
NewStr := RegExReplace( NewStr, "\b(C|c)reedence\b" , "$1redence" )
NewStr := RegExReplace( NewStr, "\b(C|c)reaeted\b" , "$1reated"  )
NewStr := RegExReplace( NewStr, "\b(C|c)r(?:ti|it)c(al|ally|ize[ds]?|izing|isms?)\b" , "$1ritic$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)poy\b" , "$1opy" )
NewStr := RegExReplace( NewStr, "\b(C|c)o[mu]n?tain(e[dr]s?|s|ing)\b" , "$1ontain$2" )
NewStr := RegExReplace( NewStr, "\b(C|c)oururie(rs?)\b" , "$1ourie$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ount?(?:ir|ri)es\b" , "$1ountries"  )
NewStr := RegExReplace( NewStr, "\b(C|c)oudl\b" , "$1ould" )
NewStr := RegExReplace( NewStr, "\b(C|c)oudl?n't\b" , "$1ouldn't" )
NewStr := RegExReplace( NewStr, "\b(C|c)ouci(ls?)\b" , "$1ounci$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)otten\b" , "$1otton" )
NewStr := RegExReplace( NewStr, "\b(C|c)orr[ei]spondan(ts?|ces?|cy)\b" , "$1orresponden$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)orruptable\b" , "$1orruptible" )
NewStr := RegExReplace( NewStr, "\b(C|c)orproation\b" , "$1orporation" )
NewStr := RegExReplace( NewStr, "\b(C|c)orproations\b" , "$1orporations" )
NewStr := RegExReplace( NewStr, "\b(C|c)orosi(ons?|ves?|vely)\b" , "$1orrosi$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)oridal\b" , "$1ordial"  )
NewStr := RegExReplace( NewStr, "\b(C|c)opywrite\b" , "$1opyright" )
NewStr := RegExReplace( NewStr, "\b(C|c)oppied\b" , "$1opied"  )
NewStr := RegExReplace( NewStr, "\b(C|c)opmetito(rs?)\b" , "$1ompetito$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)oorperations\b" , "$1orporations" )
NewStr := RegExReplace( NewStr, "\b(C|c)oordiantion\b" , "$1oordination" )
NewStr := RegExReplace( NewStr, "\b(C|c)ooporate\b" , "$1ooperate" )
NewStr := RegExReplace( NewStr, "\b(C|c)ooparate\b" , "$1ooperate" )
NewStr := RegExReplace( NewStr, "\b(C|c)on[st]itu[ae]nc(y|ies)\b" , "$1onstituenc$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onvienient\b" , "$1onvenient" )
NewStr := RegExReplace( NewStr, "\b(C|c)onveyer\b" , "$1onveyor" )
NewStr := RegExReplace( NewStr, "\b(C|c)onverto(rs?)\b" , "$1onverte$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onvenant(s?|ed|ing|al|ally|[oe]rs?|ees?)\b" , "$1ovenant$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ontroversal\b" , "$1ontroversial" )
NewStr := RegExReplace( NewStr, "\b(C|c)ontrol(ls?)\b" , "$1ontro$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ontritutio(ns?)\b" , "$1ontributio$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ontr(?:[oa]ver?[ct]?|avers|[oa]ves)(y|ies|ial(|ly))\b" , "$1ontrovers$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ontined\b" , "$1ontinued" )
NewStr := RegExReplace( NewStr, "\b(C|c)ontempoary\b" , "$1ontemporary" )
NewStr := RegExReplace( NewStr, "\b(C|c)ontaines\b" , "$1ontains"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ont(?:ampor?a|empo)r(y|ies)\b" , "$1ontemporar$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onsumber\b" , "$1onsumer" )
NewStr := RegExReplace( NewStr, "\b(C|c)onsumat(e[ds]?|ing|ions?)\b" , "$1onsummat$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onsul(?:te|a)n(ts?)\b" , "$1onsultan$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onstitu(?:a|te)n(ts?|cy|cies)\b" , "$1onstituen$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onstarnatio(ns?)\b" , "$1onsternatio$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onspiricy\b" , "$1onspiracy" )
NewStr := RegExReplace( NewStr, "\b(C|c)onspiracys\b" , "$1onspiracies"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onspir(?:iato|ate)(rs?|rial)\b" , "$1onspirato$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onsorci(um|a)\b" , "$1onsorti$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onsonen(ts?|tly|tal|ces?)\b" , "$1onsonan$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onsomme(s)?\b" , "$1onsommé$2" )
NewStr := RegExReplace( NewStr, "\b(C|c)onsol[ao]dat(e[ds]?|ing|ions?)\b" , "$1onsolidat$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onsiderite?\b" , "$1onsiderate" )
NewStr := RegExReplace( NewStr, "\b(C|c)onsider(?:d|es)\b" , "$1onsidered"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onservitiv(es?|ely|ism)\b" , "$1onservativ$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onsequeseces\b" , "$1onsequences"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onsept(s?|ions?|ual(|ly|is[mt]s?|iz(e[ds]?|ing|ations?)))\b" , "$1oncep$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onsentrat(e[ds]?|ing|ions?)\b" , "$1oncentrat$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onsectutiv(e|ely)\b" , "$1onsecutiv$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onse(?:nquent|n?quentual)ly\b" , "$1onsequently"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onscent\b" , "$1onsent"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onquere(rs?)\b" , "$1onquero$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onqu(?:er|re|erre)d\b" , "$1onquered"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onju[cn]n?ti(ons?|ves?|vitis)\b" , "$1onjuncti$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onjecutr(e[ds]?|ing)\b" , "$1onjectur$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)oniv(e[drs]?|ing)\b" , "$1onniv$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ongresiona(l|lly)\b" , "$1ongressiona$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ongradulat(e[sd]?|ing|ions|ory)\b" , "$1ongratulat$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onfont(s?|ing|ation(|al|ists?)|ers?|ed)\b" , "$1onfront$2" )
NewStr := RegExReplace( NewStr, "\b(C|c)onfirmmation\b" , "$1onfirmation" )
NewStr := RegExReplace( NewStr, "\b(C|c)onfigureabl(e|y)\b" , "$1onfigurabl$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onfids\b" , "$1onfides"  )
NewStr := RegExReplace( NewStr, "\b(C|c)onfidental(|ly|ity)\b" , "$1onfidential$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ondolances\b" , "$1ondolences" )
NewStr := RegExReplace( NewStr, "\b(C|c)ondidtio(ns?|nal)\b" , "$1onditio$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ondemnatioion\b" , "$1ondemnation" )
NewStr := RegExReplace( NewStr, "\b(C|c)ondemme([dr])\b" , "$1ondemne$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ondamned\b" , "$1ondemned" )
NewStr := RegExReplace( NewStr, "\b(C|c)oncep\b" , "$1oncept" )
NewStr := RegExReplace( NewStr, "\b(C|c)on(?:stra|tar)st(s?|ing(|ly)|ed|able)\b" , "$1ontrast$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)on(?:s?cens|e?senc)us\b" , "$1onsensus"  )
NewStr := RegExReplace( NewStr, "\b(C|c)on(?:cid|sdid?)e(rs?|red|ring|rabl[ey])\b" , "$1onside$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)omsum(pti(ons?|ve)|er?s?|ed|ing|erism|mat(e[sd]?|ion))\b" , "$1onsum$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)omputari([zs]e[ds]?|[zs]ing)\b" , "$1omputeri$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)omprises of\b" , "$1omprises"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ompr(?:imis|[io]miz)(e[ds]?|ing)\b" , "$1ompromis$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)omposate\b" , "$1omposite" )
NewStr := RegExReplace( NewStr, "\b(C|c)omplie(rs?)\b" , "$1ompile$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ompletet?i(ng|on?)\b" , "$1ompleti$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)omphrehensi(ve|vely|on|ble)\b" , "$1omprehensi$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ompeteing\b" , "$1ompeting"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ompe(?:titi|i?t|t[ae]t)i(ons?|ve(|ly|ness))\b" , "$1ompetiti$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)omparitiv(e|ely)\b" , "$1omparativ$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)omparisio(ns?)\b" , "$1ompariso$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ompany;s\b" , "$1ompany's" )
NewStr := RegExReplace( NewStr, "\b(C|c)ompair\b" , "$1ompare" )
NewStr := RegExReplace( NewStr, "\b(C|c)omp(?:lea?t|leate?)(d|ly|ness)\b" , "$1omplete$2" )
NewStr := RegExReplace( NewStr, "\b(C|c)omp(?:i?li|lil)ation(s?)\b" , "$1ompilation$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)omod+it(y|ies)\b" , "$1ommodit$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ommunites\b" , "$1ommunities" )
NewStr := RegExReplace( NewStr, "\b(C|c)ommuinications\b" , "$1ommunications" )
NewStr := RegExReplace( NewStr, "\b(C|c)ommitty\b" , "$1ommittee" )
NewStr := RegExReplace( NewStr, "\b(C|c)ommerorative\b" , "$1ommemorative" )
NewStr := RegExReplace( NewStr, "\b(C|c)ommedi(c|ans?)\b" , "$1omedi$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ommandoes\b" , "$1ommandos" )
NewStr := RegExReplace( NewStr, "\b(C|c)ommadn\b" , "$1ommand" )
NewStr := RegExReplace( NewStr, "\b(C|c)omm?onweath\b" , "$1ommonwealth"  )
NewStr := RegExReplace( NewStr, "\b(C|c)omm?erici?al(s?|ly|i[sz](e[sd]?|ing|ation)|is[mt]s?)\b" , "$1ommercial$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)omm?emmorat(e[sd]?|ing|ion)?\b" , "$1ommemorate$2" )
NewStr := RegExReplace( NewStr, "\b(C|c)omit(e[ds]|ing)?\b" , "$1ommit$2" )
NewStr := RegExReplace( NewStr, "\b(C|c)omision(e[dr]s?|ing|s)?\b" , "$1ommission$2" )
NewStr := RegExReplace( NewStr, "\b(C|c)omdemnat(ions?|ory)\b" , "$1ondemnatio$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ombusi(on|ve|vely)\b" , "$1ombusti$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ombintation\b" , "$1ombination" )
NewStr := RegExReplace( NewStr, "\b(C|c)ombinatins\b" , "$1ombinations" )
NewStr := RegExReplace( NewStr, "\b(C|c)ombanatio(ns?)\b" , "$1ombinatio$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ombac(ks?)\b" , "$1omebac$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)omand(ee?rs?|ed|eer(ed|ing)|oe?s?|ments?)\b" , "$1ommand$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)om+em+(?:er[ai]|ori)t(e[sd]?|ing|ions?|ives?)\b" , "$1ommemorat$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)om(?:u|m?un)n(al|ally|ity|ities|ions?|is[mt]s?)\b" , "$1ommun$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)om(?:unic|minic|muin?c|mui?ni|munc?i)at(e[sd]?|ors?|ions?|ive|ively)\b" , "$1ommunicat$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)om(?:m[ei]t(?:ee?|te)|it[te]ee?)(s?)\b" , "$1ommittee$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)om(?:it?|m?it)tmen(ts?)\b" , "$1ommitmen$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)om(?:em+|me)m[oe]r[ai]t(e[sd]?|ing|ions?|ives?)\b" , "$1ommemorat$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)om(?:apan|ap?n)(y|ies|ions?)\b" , "$1ompan$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)olum\b" , "$1olumn" )
NewStr := RegExReplace( NewStr, "\b(C|c)olonizators\b" , "$1olonizers"  )
NewStr := RegExReplace( NewStr, "\b(C|c)olonisators\b" , "$1olonizers" )
NewStr := RegExReplace( NewStr, "\b(C|c)ollon(y|ies)\b" , "$1olon$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ollegu(es?)\b" , "$1olleagu$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ollecto(ns?)\b" , "$1ollectio$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ollasp(e[sd]?|ing|ible)\b" , "$1ollaps$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)olel?cti(ves?|ons?|vely)\b" , "$1ollecti$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)olateral(|ly|ize[ds]?|izing)\b" , "$1ollateral$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ol+onad(es?)\b" , "$1olonnad$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ol(?:los?|l?o)s(al|ally|us)\b" , "$1oloss$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ol(?:ect[aei]|lecte)bl(es?)\b" , "$1ollectibl$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ol(?:abo|l?abe)r+at(e[sd]?|ors?|ing|ions?|ive(|ly))\b" , "$1ollaborat$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)oform\b" , "$1onform"  )
NewStr := RegExReplace( NewStr, "\b(C|c)octai(ls?)\b" , "$1ocktai$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)o-incid(e[sd]?|ent(|al|ally))\b" , "$1oincid$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)o(?:r[aei]do|rr?[aei]doo|c?o?rr[ae]do)(rs?)\b" , "$1orrido$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)o(?:mitt|mmit)(ees?|ed|ing|al)\b" , "$1ommitt$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)o(-?)(?:ord(?:ia|[ae])|rdi)nat(e[ds]?|ions?|ors?|ing)\b" , "$1o$2ordinat$3"  )
NewStr := RegExReplace( NewStr, "\b(C|c)na\b" , "$1an" )
NewStr := RegExReplace( NewStr, "\b(C|c)m?opute(|rs?|d|ri[zs]e[ds]?)\b" , "$1ompute$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)loseby\b" , "$1lose by"  )
NewStr := RegExReplace( NewStr, "\b(C|c)loisonne\b" , "$1loisonné" )
NewStr := RegExReplace( NewStr, "\b(C|c)lini?cia(l|lly)\b" , "$1linica$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)liche(|s)\b" , "$1liché$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)liant\b" , "$1lient" )
NewStr := RegExReplace( NewStr, "\b(C|c)learea?nc(es?)\b" , "$1learanc$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)las\b" , "$1lass" )
NewStr := RegExReplace( NewStr, "\b(C|c)lasic(s?|al|ally|is[tm]s?|ize[ds]?|izing)\b" , "$1lassic$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)laimes\b" , "$1laims"  )
NewStr := RegExReplace( NewStr, "\b(C|c)laer\b" , "$1lear" )
NewStr := RegExReplace( NewStr, "\b(C|c)laer(e[rd]|est|ly)\b" , "$1lear$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ivillian(s?|iz(e[ds]?|ing|ation))\b" , "$1ivilian$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)irtus\b" , "$1itrus" )
NewStr := RegExReplace( NewStr, "\b(C|c)ircum(?:sc?i[cs]|[cs]+ic)io(ns?)\b" , "$1ircumcisio$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)incin(?:n?at|a)t(i|ians?|us)\b" , "Cincinnat$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)i?eling(s?|ed)\b" , "$1eiling$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)hurchs\b" , "$1hurches"  )
NewStr := RegExReplace( NewStr, "\b(C|c)hruch(es)?\b" , "$1hurch$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)hrous(|es|ing)?\b" , "$1horus$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)hristain(s?|ity)\b" , "Christian$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)hilli\b" , "$1hili" )
NewStr := RegExReplace( NewStr, "\b(C|c)hilder?e?n\b" , "$1hildren"  )
NewStr := RegExReplace( NewStr, "\b(C|c)hildbird\b" , "$1hildbirth"  )
NewStr := RegExReplace( NewStr, "\b(C|c)hild(re|er)ns'?\b" , "$1hildren's" )
NewStr := RegExReplace( NewStr, "\b(C|c)hemestry\b" , "$1hemistry"  )
NewStr := RegExReplace( NewStr, "\b(C|c)hemcia(ls?|lly)\b" , "$1hemica$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)hekc\b" , "$1heck" )
NewStr := RegExReplace( NewStr, "\b(C|c)heif(s?|ly|doms?|ship|tains?)\b" , "$1hief$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)has(rs?)\b" , "$1hase$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)hartiable\b" , "$1haritable" )
NewStr := RegExReplace( NewStr, "\b(C|c)haristics\b" , "$1haracteristics" )
NewStr := RegExReplace( NewStr, "\b(C|c)harim(an|en|anships?)\b" , "$1hairm$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)hang(?:ei)?ng\b" , "$1hanging" )
NewStr := RegExReplace( NewStr, "\b(C|c)hancel(?:o|l?e)r(s?|ship|sville)\b" , "$1hancellor$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)hampange\b" , "$1hampagne"  )
NewStr := RegExReplace( NewStr, "\b(C|c)hal(?:eng|lang|leg)(e[ds]?|ers?|ing)\b" , "$1halleng$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ha?r(?:achte|a?ct[ao]|e?cte|ate)r(s?|i[sz](e[sd]?|ing|ations?)|istics?)\b" , "$1haracter$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)h?arasma(|tic(s?|ally))\b" , "$1harisma$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)h(?:aneg|nage)(s|d|ing)?\b" , "$1hange" )
NewStr := RegExReplace( NewStr, "\b(C|c)ermaic(s?|ists?)\b" , "$1eramic$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)entru(y|ies)\b" , "$1entur$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)enteral(|ly|is[mt]s?|i[sz](e[sd]?|ing))\b" , "$1entral$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ensu(rs?)\b" , "$1enso$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)encus\b" , "$1ensus" )
NewStr := RegExReplace( NewStr, "\b(C|c)emen?tare?(y|ies)\b" , "$1emeter$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ellpading\b" , "$1ellpadding"  )
NewStr := RegExReplace( NewStr, "\b(C|c)eleb[ei]rt(y|ies)\b" , "$1elebrit$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)elcius\b" , "Celsius"  )
NewStr := RegExReplace( NewStr, "\b(C|c)aucasio(ns?)\b" , "$1aucasia$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ath[ae]ch?is([mt]s?|tic)\b" , "$1atechis$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)atholocism\b" , "$1atholicism"  )
NewStr := RegExReplace( NewStr, "\b(C|c)athe?li(cs?)\b" , "$1atholi$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)atastrophies\b" , "$1atastrophes"  )
NewStr := RegExReplace( NewStr, "\b(C|c)atapault(s?|ed|ing)\b" , "$1atapult$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)at(?:terpil?|t?erpi)la(rs?)\b" , "$1aterpilla$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)asu(?:ali|la)t(y|ies)\b" , "$1asualt$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)asio(ns?)\b" , "$1aisso$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)as(?:s?aw[ao]|s?owar|owa)r(y|ies)\b" , "$1assowar$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)as(?:et?|s?e)t(es?)\b" , "$1assett$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)artill?(?:[ie]d?|ad)g(e|inous)\b" , "$1artilag$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)arthagia(ns?)\b" , "Carthaginia$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)art(?:ho|a)graph(y|ers?|ic)\b" , "$1artograph$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)art(?:drid|ri)g(es?)\b" , "$1artridg$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)arrers\b" , "$1areers" )
NewStr := RegExReplace( NewStr, "\b(C|c)arreer\b" , "$1areer"  )
NewStr := RegExReplace( NewStr, "\b(C|c)areing\b" , "$1aring"  )
NewStr := RegExReplace( NewStr, "\b(C|c)arefull\b" , "$1areful"  )
NewStr := RegExReplace( NewStr, "\b(C|c)arcas\b" , "$1arcass" )
NewStr := RegExReplace( NewStr, "\b(C|c)ar(?:r?ab?|rib|r?i)bean\b" , "Caribbean"  )
NewStr := RegExReplace( NewStr, "\b(C|c)aptu[er]d\b" , "$1aptured" )
NewStr := RegExReplace( NewStr, "\b(C|c)aptial(s?|is[mt]s?|istic(|ally))\b" , "$1apital$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ap(?:er|i)b(l[ey]|ility|ilities)\b" , "$1apab$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)aost\b" , "$1oast" )
NewStr := RegExReplace( NewStr, "\b(C|c)antalope(s?)\b" , "$1antaloupe$2" )
NewStr := RegExReplace( NewStr, "\b(C|c)annonica(ls?|lly)\b" , "$1anonica$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)anniste(rs?)\b" , "$1aniste$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)andidtae(s?)\b" , "$1andidate$2" )
NewStr := RegExReplace( NewStr, "\b(C|c)and(?:ad|i|idi)at(es?|ures?)\b" , "$1andidat$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ancel(ations?|ous)\b" , "$1ancell$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)am[ao]flad?g(e[sd]?|ing)\b" , "$1amouflag$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)ampa(?:g?in|a?ig|ing)(s?|ed|ers?|ing)\b" , "$1ampaign$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)allipigian\b" , "$1allipygian" )
NewStr := RegExReplace( NewStr, "\b(C|c)aligraph(y|ers|ists?|ic)\b" , "$1alligraph$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)alculs\b" , "$1alculus"  )
NewStr := RegExReplace( NewStr, "\b(C|c)alander(s?)\b" , "$1alendar$2" )
NewStr := RegExReplace( NewStr, "\b(C|c)al(?:a|li)b(ers?|res?|rat(e[ds]?|ing|ion))\b" , "$1alib$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)aht\b" , "$1hat" )
NewStr := RegExReplace( NewStr, "\b(C|c)afateri(as?)\b" , "$1afeteri$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)a(?:|nn)not\b" , "$1annot"  )
NewStr := RegExReplace( NewStr, "\b(C|c)a(?:sula|usali)ties\b" , "$1asualties" )
NewStr := RegExReplace( NewStr, "\b(C|c)(?:yc|i)lind(ers?|rical(|ly))\b" , "$1ylind$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)(?:o|an)notati(ons?|ve|vely)\b" , "$1onnotati$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)(?:iriculu|urricule)m\b" , "$1urriculum"  )
NewStr := RegExReplace( NewStr, "\b(C|c)(?:ircu|iricui?|urcui)t(s?|ed|ing|ry|ries|ous(|ly))\b" , "$1ircuit$2"  )
NewStr := RegExReplace( NewStr, "\b(C|c)(?:hu|ur)ch\b" , "$1hurch" )
NewStr := RegExReplace( NewStr, "\b(C|c)(?:harge d['][Aa]|hargé d[']A|hargé d[Aa])ffaires\b" , "$1hargé d'affaires"  )
NewStr := RegExReplace( NewStr, "\b(C|c)(?:a?h(?:ra|are?)c|arach?)t[aeo]r(s?|i[sz](e[sd]?|ing|ations?)|istics?)\b" , "$1haracter$2"  )
NewStr := RegExReplace( NewStr, "\b(center|left|[Rr]ight)f(?:ie|ei)ld(|ers?)\b" , "$1 field$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b|[Tt]r|[Uu]n|[Mm]ult)illingual(s?|ly|is[mt]s?)\b" , "$1ilingual$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b|[Rr]eb|[Ii]nb|[Pp]reb|[Uu][pn]b|[Oo]verb|[Jj]erryb)uildt\b" , "$1uilt"  )
NewStr := RegExReplace( NewStr, "\b(B|b|[Rr]eb)u(?:idl?|li?d|ilid)((|ing|er)s?)\b" , "$1uild$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b|[DdMm]isb|[Uu]nb)elei(fs?)\b" , "$1elie$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b|[DdMm]isb|[Nn]onb|[Uu]nb)ele?iv(e[sdr]?|ing)\b" , "$1eliev$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)[ae]c[ce]ause\b" , "$1ecause"  )
NewStr := RegExReplace( NewStr, "\b(B|b)usineses\b" , "$1usinesses" )
NewStr := RegExReplace( NewStr, "\b(B|b)urried\b" , "$1uried"  )
NewStr := RegExReplace( NewStr, "\b(B|b)urg(?:u?le|ula)r(s?|y|ies|i[sz](e[sd]?|ing))\b" , "$1urglar$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)uli(d|t|ders?|dings?)\b" , "$1uil$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)uisiness(|es|like)\b" , "$1usiness$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)ui?s(?:sin)?nes?s(|es|(wo)?m[ae]n|person|people|like)\b" , "$1usiness$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)rimeston(es?)\b" , "$1rimston$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)ril[il]an(t|tly|ce)\b" , "$1rillian$2" )
NewStr := RegExReplace( NewStr, "\b(B|b)rethe(?:n|ren)\b" , "$1rethren"  )
NewStr := RegExReplace( NewStr, "\b(B|b)reif(s?|ly|ings?|ed|er|est)\b" , "$1rief$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)reakt(?:hough|hrought|trough)(s?)\b" , "$1reakthrough$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)ra(?:sil?|[sz]il)lia(ns?)\b" , "Brazilia$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)r(?:a?od|oa|oada)cast(s?|ed|ers?|ing)\b" , "$1roadcast$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)oxs\b" , "$1oxes" )
NewStr := RegExReplace( NewStr, "\b(B|b)ouy\b" , "$1uoy" )
NewStr := RegExReplace( NewStr, "\b(B|b)orke(n?|r)\b" , "$1roke$2" )
NewStr := RegExReplace( NewStr, "\b(B|b)onnano\b" , "$1onanno"  )
NewStr := RegExReplace( NewStr, "\b(B|b)ombarment\b" , "$1ombardment" )
NewStr := RegExReplace( NewStr, "\b(B|b)ombardement\b" , "$1ombardment" )
NewStr := RegExReplace( NewStr, "\b(B|b)o(?:u?nd|nda)r(y|ies)\b" , "$1oundar$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)litzkreig\b" , "$1litzkrieg"  )
NewStr := RegExReplace( NewStr, "\b(B|b)lessure\b" , "$1lessing" )
NewStr := RegExReplace( NewStr, "\b(B|b)laten(t|tly|cy)\b" , "$1latan$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)laim\b" , "$1lame" )
NewStr := RegExReplace( NewStr, "\b(B|b)laimed\b" , "$1lamed" )
NewStr := RegExReplace( NewStr, "\b(B|b)izzare\b" , "$1izarre" )
NewStr := RegExReplace( NewStr, "\b(B|b)icep\b" , "$1iceps" )
NewStr := RegExReplace( NewStr, "\b(B|b)ib(?:i?lo|li)graph(y|ies|ic(|al|ally)|ers?)\b" , "$1ibliograph$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)e\s+be\b" , "$1e"  )
NewStr := RegExReplace( NewStr, "\b(B|b)eyong\b" , "$1eyond"  )
NewStr := RegExReplace( NewStr, "\b(B|b)ergamont\b" , "$1ergamot" )
NewStr := RegExReplace( NewStr, "\b(B|b)en[ia]fi(ts?|tted|tting|cial|ciary|ciaries|cent)\b" , "$1enefi$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)en[ei]ficai?(l|ry|ries)\b" , "$1eneficia$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)eng\b" , "$1eing" )
NewStr := RegExReplace( NewStr, "\b(B|b)ellweathe(rs?)\b" , "$1ellwethe$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)eligum\b" , "Belgium"  )
NewStr := RegExReplace( NewStr, "\b(B|b)eleieve?\b" , "$1elieve" )
NewStr := RegExReplace( NewStr, "\b(B|b)eleagur(ed?)\b" , "$1eleaguer$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)el(?:l?igera|igere)n(ts?|tly)\b" , "$1elligeren$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)ehavour(s)?\b" , "$1ehavior$2" )
NewStr := RegExReplace( NewStr, "\b(B|b)egin(?:inin|ni)g\b" , "$1eginning" )
NewStr := RegExReplace( NewStr, "\b(B|b)eggins\b" , "$1egins" )
NewStr := RegExReplace( NewStr, "\b(B|b)eg(?:gin|g?i)n(ers?|ings?)\b" , "$1eginn$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)eeing(s?)\b" , "$1eing$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)eco(?:mm)?(es?|ing)\b" , "$1ecom$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)ecamae\b" , "$1ecame"  )
NewStr := RegExReplace( NewStr, "\b(B|b)eated\b" , "$1eat"  )
NewStr := RegExReplace( NewStr, "\b(B|b)eastiali?ty\b" , "$1estiality"  )
NewStr := RegExReplace( NewStr, "\b(B|b)eachea(ds?)\b" , "$1eachhea$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)e(?:ua|u)ty\b" , "$1eauty"  )
NewStr := RegExReplace( NewStr, "\b(B|b)e(?:t[ew]en|wteen|tweem|tweeen)\b" , "$1etween"  )
NewStr := RegExReplace( NewStr, "\b(B|b)e(?:dore|fore)\b" , "$1efore" )
NewStr := RegExReplace( NewStr, "\b(B|b)e(?:au?|ua?)t[iy]full?(|ly)\b" , "$1eautiful$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)e(?:a?cuse|cuase?|couse|casue)\b" , "$1ecause"  )
NewStr := RegExReplace( NewStr, "\b(B|b)at(?:tal?|al)lio(ns?)\b" , "$1attalio$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)asica?ly\b" , "$1asically"  )
NewStr := RegExReplace( NewStr, "\b(B|b)arbituate(s?)\b" , "$1arbiturate$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)arbeque\b" , "$1arbecue" )
NewStr := RegExReplace( NewStr, "\b(B|b)andwith\b" , "$1andwidth"  )
NewStr := RegExReplace( NewStr, "\b(B|b)an(?:krup|rupt)(s?|ed|cy|cies)\b" , "$1ankrupt$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)an(?:an|na)n(as?)\b" , "$1anan$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)alisti(cs?|cally|cians?)\b" , "$1allisti$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)al(?:e|la)nce(s?|d)\b" , "$1alance$2" )
NewStr := RegExReplace( NewStr, "\b(B|b)a(?:loo)n(|s|ed|ing|ists?)\b" , "$1alloon$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)(?:ou?y|uo)an(t|cy)\b" , "$1uoyan$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)(?:eaur[ao]|ure?u?)cra(ts?|tic|cy|cies)\b" , "$1ureaucra$2"  )
NewStr := RegExReplace( NewStr, "\b(B|b)(?:akc|cak)\b" , "$1ack" )
NewStr := RegExReplace( NewStr, "\b(A|a|[Uu]na)v(?:ai|a|i)l?(?:ai?|ia?|)b(le|ility)\b" , "$1vailab$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Uu]na)t(?:tra|rac)tive(|ly|ness)\b" , "$1ttractive$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Uu]na)pp?ol[ae]getic(s?|al(|ly))\b" , "$1pologetic$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Uu]na)mbigi?ous(ly|ness)?\b" , "$1mbiguous$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Uu]na)c(?:c?ept[^a]|epta)(ble|bility|nces?|nt)\b" , "$1ccepta$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Rr]ea)rrangmen(ts?)\b" , "$1rrangemen$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Rr]ea)rang(e[sdr]?|ing|ements?)\b" , "$1rrang$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Oo]vera|[Uu]ndera)che?iv(e[sdr]?|ing|ements?|abl[ey])\b" , "$1chiev$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Mm]isa|[Rr]ea)llign(s?|ed|ing|ments?)\b" , "$1lign$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Ii]na)t(?:tens|ent)i(ons?|ve|veness)\b" , "$1ttenti$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Ii]na)p(?:propropia|ropri?a|proprai?)t(e[ds]?|ely|ing|eness|ions?|ors?)\b" , "$1ppropriat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Ii]na)dvertan(t|tly|ce|cy)\b" , "$1dverten$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Ii]na)cur+a(cy|cies|te|tely)\b" , "$1ccura$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Ii]na)cc(?:ess+|c+es+)s(ib(l[ey]|ilit(y|ies))|e[ds]|ing|or(y|ies)?|ions?)?\b" , "$1ccess$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Ii]na)c(?:c?essa|essi|cesi)b(l[ey]|ilit(y|ies))\b" , "$1ccessib$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Dd]isa|[Rr]ea)s(?:semp|embe?)l(e[drs]?|ing|y|ies|ages?)\b" , "$1ssembl$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Dd]isa)prov(e[ds]?|als?|ing(|ly))\b" , "$1pprov$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Dd]isa)p(?:p?earea?|p?era|p?reara|eara)nc(es?)\b" , "$1ppearanc$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Dd]isa)g(?:gre+|re|reee)(|s|d|ing|ments?|abl[ey])\b" , "$1gree$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a|[Dd]e)b(?:il|li)t(y|ies)\b" , "$1bilit$2"  )
NewStr := RegExReplace( NewStr, "\b(A|Anta)rctic circle\b" , "$1rctic Circle"  )
NewStr := RegExReplace( NewStr, "\b(a|and?|are|b[ey]|for|i[ft]|of|[st]?he|the(?:y|se)|this|to|was|were|when|with)\b\s+\1\b" , "$1"  )
NewStr := RegExReplace( NewStr, "\b(A|a)\s+hour\b" , "$1n hour"  )
NewStr := RegExReplace( NewStr, "\b(A|a)wared\b" , "$1warded" )
NewStr := RegExReplace( NewStr, "\b(A|a)war(?:ne|enes)ss+\b" , "$1wareness" )
NewStr := RegExReplace( NewStr, "\b(A|a)veragee(d|s)\b" , "$1verage$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)valanc(es?)\b" , "$1valanch$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)vailalbe\b" , "$1vailable" )
NewStr := RegExReplace( NewStr, "\b(A|a)vailabl(?:il)?ity\b" , "$1vailability"  )
NewStr := RegExReplace( NewStr, "\b(A|a)vai?t(ion|ors?)\b" , "$1viat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)v(?:a?ra?|er)g(es?|ed|ing)\b" , "$1verag$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)uxill?i?ar(y|ies)\b" , "$1uxiliar$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)utomibil(es?|ing)\b" , "$1utomobil$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)utomatica?ly\b" , "$1utomatically"  )
NewStr := RegExReplace( NewStr, "\b(A|a)utoc(?:h?t|th)on(ous(|ly)|[sy]?|es|ism)\b" , "$1utochthon$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)uto-da-fe\b" , "$1uto-da-fé" )
NewStr := RegExReplace( NewStr, "\b(A|a)uto(?:monom|[mn]on|mom)ou(s|sly)\b" , "$1utonomou$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)uthor[ai]tive\b" , "$1uthoritative" )
NewStr := RegExReplace( NewStr, "\b(A|a)uthobiograph(y|ies|ic(|al|ally))\b" , "$1utobiograph$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ut(?:he|o)(rs?)\b" , "$1utho$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ude?ia?nc(es?)\b" , "$1udienc$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ttroci(ty|ties|ous(|ly|ness))\b" , "$1troci$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ttentioin\b" , "$1ttention" )
NewStr := RegExReplace( NewStr, "\b(A|a)ttened\b" , "$1ttended" )
NewStr := RegExReplace( NewStr, "\b(A|a)ttaindre\b" , "$1ttainder"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ttache(e|es)?\b" , "$1ttaché$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)tt?atch(|e[ds]|ing|able|ments?)\b" , "$1ttach$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)tract(s?|ed|ing|ions?|ors?)\b" , "$1ttract$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)torne(ys?)\b" , "$1ttorne$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)tmospher\b" , "$1tmosphere" )
NewStr := RegExReplace( NewStr, "\b(A|a)tleast\b" , "$1t least"  )
NewStr := RegExReplace( NewStr, "\b(A|a)thies(ts?|m|tic)\b" , "$1theis$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)thenea(ns?)\b" , "$1thenia$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)thelet(es?|ic(s?|ism|ally))\b" , "$1thlet$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)theistical\b" , "$1theistic" )
NewStr := RegExReplace( NewStr, "\b(A|a)tain(|s|ed|ing|ments?|able)\b" , "$1ttain$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)tack(s?|ed|ing)\b" , "$1ttack$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)t(?:titi|it+u|tittu)d(e?s|inal(|ly))\b" , "$1ttitud$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)t(?:tende|ende|enda)n(ts?|ces?)\b" , "$1ttendan$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)t(?:ribut|tributr)(e[ds]?|ing|ions?|ives?)\b" , "$1ttribut$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)t(?:empt|tem[pt])(|s|ed|ing|able)\b" , "$1ttempt$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)swell\b" , "$1s well"  )
NewStr := RegExReplace( NewStr, "\b(A|a)sum(e[sd]?|ing(|ly)|ptions?)\b" , "$1ssum$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)stonom(y|ers?|ic(|al|ally))\b" , "$1stronom$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ssosicatio(ns?)\b" , "$1ssassinatio$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)sside\b" , "$1side"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ssesment\b" , "$1ssessment" )
NewStr := RegExReplace( NewStr, "\b(A|a)ssertati(ons?|ve|vely)\b" , "$1sserti$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ssas[ia]n(|s|ations?)\b" , "$1ssassin$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ssassintation\b" , "$1ssassination"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ssasined\b" , "$1ssassinated"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ss?iss?tence\b" , "$1ssistance"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ss(?:s+ign|ing)(s|ing|ed|ments?)\b" , "$1ssign$2"  ) 
NewStr := RegExReplace( NewStr, "\b(A|a)ss(?:asi|is)nat(e[ds]?|ions?)\b" , "$1ssassinat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)sphyxai?t(e[sd]?|ing|ion)\b" , "$1sphyxiat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)sorb(s?|ed|ing|ent|ency)\b" , "$1bsorb$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)sign(|s|ed|ing|ments?)\b" , "$1ssign$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)setic(s?|ally|ism)\b" , "$1scetic$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)s+assa(ns?)\b" , "$1ssassi$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)s(?:s[us]a?|au)l(ts?|ted|ting)\b" , "$1ssaul$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)s(?:sy|ym|y)metr(y|ic(|al|ally))\b" , "$1symmetr$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)s(?:si|is+|siss)t(s?|ed|ing|ants?|ance)\b" , "$1ssist$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)s(?:oci|soi?c)ai?t(e[sd]?|ing|ions?)\b" , "$1ssociat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)rtill?ary\b" , "$1rtillery"  )
NewStr := RegExReplace( NewStr, "\b(A|a)rtifical(ly)?\b" , "$1rtificial$2" )
NewStr := RegExReplace( NewStr, "\b(A|a)rtic[ae]l?(s?)\b" , "$1rticle$2" )
NewStr := RegExReplace( NewStr, "\b(A|a)rn't\b" , "$1ren't" )
NewStr := RegExReplace( NewStr, "\b(A|a)rm[ia]sta[cs](es?)\b" , "$1rmistic$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)rmaman(ts?)\b" , "$1rmamen$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)rival\b" , "$1rrival" )
NewStr := RegExReplace( NewStr, "\b(A|a)rised\b" , "$1rose"  )
NewStr := RegExReplace( NewStr, "\b(A|a)rguement([as]?|ive|ative(|ly)|ation|um)\b" , "$1rgument$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)rgu(?:e?|ea)bl(e|y)\b" , "$1rguabl$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)reodynami(cs?|cal)\b" , "$1erodynami$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)rch[ie](?:ctect|c?techt?|tet)ur(es?|al|ally)\b" , "$1rchitectur$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)rchitectual\b" , "$1rchitectural" )
NewStr := RegExReplace( NewStr, "\b(A|a)rchiac(|al|ally)\b" , "$1rchaic$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)rchi?typ(es?|al|ic(|al|ally))\b" , "$1rchetyp$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)rch(?:ec?|ic)te(?:c?t|cht?)(|s|ures?|ural(|ly))\b" , "$1rchitect$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)rc(ha?)(?:e|eao|oe?)log(y|ists?|ic(|al|ally))\b" , "$1rc$2eolog$3"  )
NewStr := RegExReplace( NewStr, "\b(A|a)rbouretum\b" , "$1rboretum" )
NewStr := RegExReplace( NewStr, "\b(A|a)r?b(?:ritr?a|r?ita|rbitr?e)r(y|ily|iness)\b" , "$1rbitrar$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)r(?:r?o[nu]|roun|un)d\b" , "$1round" )
NewStr := RegExReplace( NewStr, "\b(A|a)r(?:itis|tsi)t(s?|ic|ically)\b" , "$1rtist$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)proach(|e[ds]|ing|abl[ey]|ability)\b" , "$1pproach$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)prehensi(ve|ons?)\b" , "$1pprehensi$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)pptitude(s?)\b" , "$1ptitude$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ppolog(y|ies|ize[sd]?|(etic|ist|ia|ue)s?)\b" , "$1polog$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ppelat(e|ions?|ive(|ly|ness))\b" , "$1ppellat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)pp?rox[aei]mm?[ai]tly\b" , "$1pproximately"  )
NewStr := RegExReplace( NewStr, "\b(A|a)pp?ealling\b" , "$1ppealing"  )
NewStr := RegExReplace( NewStr, "\b(A|a)pocolyp(ses?|tic(|al|ally|ism))\b" , "$1pocalyp$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)plie(d|s)\b" , "$1pplie$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)parteid\b" , "$1partheid"  )
NewStr := RegExReplace( NewStr, "\b(A|a)p+rox(?:am[ai]|imi|ia|imm)t(e[sd]?|ely|ions?)\b" , "$1pproximat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)p+roachs\b" , "$1pproaches"  )
NewStr := RegExReplace( NewStr, "\b(A|a)p(?:p?arr[ae]|arr?[ae]|p?ara)l(s?|l?ing|l?ed)\b" , "$1pparel$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)p(?:p*ea?r[aei]|(?:pp+|)[ea]a?r[aei]|p*arr+[aei]|p*arr?[ai])n(t|tly)\b" , "$1pparen$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)p(?:licati|plicait)o(ns?)\b" , "$1pplicatio$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)p(?:ar|part)men(t|ts)\b" , "$1partmen$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)n\s+uniqu(e|ely)" , "$1 uniqu$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)n\s+hom(e?o)" , "$1 hom$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)nytying\b" , "$1nything"  )
NewStr := RegExReplace( NewStr, "\b(A|a)nthromorphi(zation|c|cally|s[mt]s?|ze[sd]?)\b" , "$1nthropomorphi$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ntarti(ca?)\b" , "$1ntarcti$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)nonim(ity|ous)\b" , "$1nonym$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)nomol(y|ies|ous(|ly)|istic(|ally))\b" , "$1nomal$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)nnoint(s?|ed|ings?|ments?)\b" , "$1noint$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)nn?ull(s?|ments?|ar)\b" , "$1nnul$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)nn?oun?cmen(ts?)\b" , "$1nnouncemen$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)nivers[ae]r(y|ies)\b" , "$1nniversar$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)nerob(es?|ic(?:s?|ally))\b" , "$1naerob$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)nenom(es?)\b" , "$1nemon$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ncill?iary\b" , "$1ncillary"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ncest(?:[oe]r|ri)(y|ies|al)\b" , "$1ncestr$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)narchi(?:|st)m\b" , "$1narchism"  )
NewStr := RegExReplace( NewStr, "\b(A|a)nalitic(s?|al|ally)\b" , "$1nalytic$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)n(?:sest[oe]|ceste)(rs?)\b" , "$1ncesto$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)n(?:nu|ul)l(ed|ing)\b" , "$1nnull$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)n(?:nua|ual)ly\b" , "$1nnually"  )
NewStr := RegExReplace( NewStr, "\b(A|a)n(?:n?i?hili|[ni]hil+)at(e[sd]?|ing|ions?|ors?|ive)\b" , "$1nnihilat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)n(?:n?al|nal?)l(?:oge|ag)(y|ies|ous)\b" , "$1nalog$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)mourou(s|sly)\b" , "$1morou$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)mongest\b" , "$1mongst"  )
NewStr := RegExReplace( NewStr, "\b(A|a)mock\b" , "$1mok"  )
NewStr := RegExReplace( NewStr, "\b(A|a)mo?un(g|gst)\b" , "$1mon$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)mmus(e[sd]?|ing|ments?)\b" , "$1mus$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)mmenit(y|ies)\b" , "$1menit$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)merliorat(e[sd]?|ing|ion)\b" , "$1meliorat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)mendman(ts?)\b" , "$1mendmen$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)mbi?dextero?u(s|ly)\b" , "$1mbidextrou$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)malg[ou]m(s?|at(e[sd]?|ing|ion))\b" , "$1malgam$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)m?muntio(ns?)\b" , "$1mmunitio$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)m+(?:[aeiou]tuer|[aeiou]ture|[eiou]teur)(s?|is[hm]|ishly)\b" , "$1mateur$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)m(?:moun|ou)t(|s|ed|ing)\b" , "$1mount$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)lumin(us|ae|i)\b" , "$1lumn$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)lternitive(s?|ly)\b" , "$1lternative$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)low(s|ed|ing|abl[ey]|ances?)\b" , "$1llow$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)lott?(ed|ing|ments?)\b" , "$1llott$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)lonside\b" , "$1longside" )
NewStr := RegExReplace( NewStr, "\b(A|a)longwith\b" , "$1long with"  )
NewStr := RegExReplace( NewStr, "\b(A|a)lochol(s?|ics?|ism)\b" , "$1lcohol$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)lmun(us|ae?|i)\b" , "$1lumn$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ll\s+intensive\s+purposes\b" , "$1ll intents and purposes"  )
NewStr := RegExReplace( NewStr, "\b(A|a)lltogether\b" , "$1ltogether"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ll?egi?enc(es?)\b" , "$1llegianc$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ll?ed?ge[ld]y\b" , "$1llegedly"  )
NewStr := RegExReplace( NewStr, "\b(A|a)lientat(e[ds]?|ing)\b" , "$1lienat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)lgorh?itm(s?|ic)\b" , "$1lgorithm$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)lgebraical\b" , "$1lgebraic"  )
NewStr := RegExReplace( NewStr, "\b(A|a)lc(?:ho|hoho|h?oha|h?aho)l(s?|ics?|ism)\b" , "$1lcohol$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)l+w(?:asy|yas)\b" , "$1lways"  )
NewStr := RegExReplace( NewStr, "\b(A|a)l(?:mso|oms)t\b" , "$1lmost"  )
NewStr := RegExReplace( NewStr, "\b(A|a)l(?:lth|t)ought?\b" , "$1lthough"  )
NewStr := RegExReplace( NewStr, "\b(A|a)l(?:lop|oph)on(es?|ic)\b" , "$1llophon$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)l(?:l?i|e)viat(e[sd]?|ing|ion|or)\b" , "$1lleviat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)l(?:l?ed|e)g(e[sd]?|ing|edly)\b" , "$1lleg$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)l(?:l?bie|lbei)t\b" , "$1lbeit"  )
NewStr := RegExReplace( NewStr, "\b(A|a)isia(ns?)\b" , "Asia$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)irbourne?\b" , "$1irborne"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ipor(ts?)\b" , "$1irpor$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)i(?:rc|cr|rrcr)ar?f(ts?)\b" , "$1ircraf$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)greg+at(e[sd]?|ing|ions?)\b" , "$1ggregat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)greemn(ts?)\b" , "$1greemen$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)g(?:rie|g?rei)v(e[sd]?|ing)\b" , "$1ggriev$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)g(?:g?[ae]?re|r[aei])vat(e[sd]?|ing|ions?)\b" , "$1ggravat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)g(?:g?re|res)s(ions?|ive(|ness|ly)|ors?)\b" , "$1ggress$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)g(?:aisn?t|ainnst|ia?nst|aints?)\b" , "$1gainst"  )
NewStr := RegExReplace( NewStr, "\b(A|a)fri[ck]aane(rs?)\b" , "$1frikane$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)for(?:men|e?mem)tioned\b" , "$1forementioned"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ffici[oa]nad(os?)\b" , "$1ficionad$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ff?il(?:l?|li)at(e[sd]?|ing|ions?)\b" , "$1ffiliat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)eriel(s?|ly)\b" , "$1erial$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)dvr?esar(y|ies|ial)\b" , "$1dversar$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)dverti(?:e?s|ze)(r?s?|d|ments?)\b" , "$1dvertise$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)dvert(?:s|i?z)ing\b" , "$1dvertising"  )
NewStr := RegExReplace( NewStr, "\b(A|a)dventrous\b" , "$1dventurous"  )
NewStr := RegExReplace( NewStr, "\b(A|a)dultr(y|ate[sd]?|ati(ng|on)|er|ous)\b" , "$1dulter$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)dolecs?en(ts?|ce)\b" , "$1dolescen$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)dmin(?:in?str|ster|inster)(s?|ed|ing)\b" , "$1dminister$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)dmi(?:n|nini?)strat(e[sd]?|ing|ors?|ions?|ive(|ly))\b" , "$1dministrat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)dhear(|s)\b" , "$1dhere$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ddopt(s?|ed|i(ng|ve|ons?))\b" , "$1dopt$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ddmiss?i(ons?|ble|bility)\b" , "$1dmissi$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)dd(?:it[io]|tio)n(s?|al|ally)\b" , "$1ddition$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)davanc(e[sd]?|ing|ements?)\b" , "$1dvanc$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)dap(?:a?|ata)tion(s?|al|ally)\b" , "$1daptation$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)d+mited(|ly)\b" , "$1dmitted$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)d+missa(ble|bility)\b" , "$1dmissi$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)d(?:itional?|d?itiona)(|ly)\b" , "$1dditional$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)d(?:dre|res?)s(|e[sd]|ing|e[er]s?|able|ability)\b" , "$1ddress$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)custo(m|med)\b" , "$1ccusto$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ctu[al]ly\b" , "$1ctually"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ctivly\b" , "$1ctively"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ctivit?es\b" , "$1ctivities"  )
NewStr := RegExReplace( NewStr, "\b(A|a)complish(|e[sd]|ing|ments?)\b" , "$1ccomplish$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)cient(s)?\b" , "$1ncient$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ch(?:ie|ei)vmen(ts?)\b" , "$1chievemen$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ccros[st]\b" , "$1cross"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ccoustic(s?|al|ally)\b" , "$1coustic$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ccen?sion\b" , "$1ccession"  )
NewStr := RegExReplace( NewStr, "\b(A|a)ccc+ident(s|al|ally)\b" , "$1ccident$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)c?qu(?:ai|ia)ntenc(e(|ship)s?)\b" , "$1cquaintanc$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)c?knowl(?:edg?e|dege?|egd?e?)ing\b" , "$1cknowledging"  )
NewStr := RegExReplace( NewStr, "\b(A|a)c?knowl(?:deg|ed|egd?)(e[sd]?|ing|e?ments?)\b" , "$1cknowledg$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)c+ord(?:eo|ia)(ns?)\b" , "$1ccordio$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)c+ompai?nn?(?:ye?|ie?|e)(d|s)\b" , "$1ccompanie$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)c+limiti(z|s)(e[sd]?|ing|ation)\b" , "$1cclimati$2$3"  )
NewStr := RegExReplace( NewStr, "\b(A|a)c+ident(?:a?|ial)ly\b" , "$1ccidentally"  )
NewStr := RegExReplace( NewStr, "\b(A|a)c(?:ord|cor)in(g|gly)\b" , "$1ccordin$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)c(?:edd?e|cadd?e|c?ada|ad)mm?(i[ce]s?|ically|y)\b" , "$1cadem$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)c(?:cro|c?or)ss\b" , "$1cross"  )
NewStr := RegExReplace( NewStr, "\b(A|a)c(?:com[aeo]?|omm?[aeo]?|comm[ae]?)dat(e[ds]?|ing|ions?)\b" , "$1ccommodat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)c(?:ccoun|oun|co[un])t(s?|ed|an(ts?|cy)|ing)\b" , "$1ccount$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)c(?:cc+|)laim(s?|ed|ing)\b" , "$1cclaim$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)c(?:c?ess[^o]|esso|ceso)r(y|ies|iz(e[sd]?|ing))\b" , "$1ccessor$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)bund(?:and|en)(t|tly|ce)\b" , "$1bundan$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)bsorb[st]i(on|ve)\b" , "$1bsorpti$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)bs(?:cen[sc]|ens)(es?)\b" , "$1bsenc$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)breviat(e[sd]?|ions?|ing|ors?)\b" , "$1bbreviat$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)bortifican(ts?)\b" , "$1bortifacien$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)b(?:ber?|e)ra(tions?|nt|ntly|nc[ey]|ted)\b" , "$1berra$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)(nd?|re)\s+a\2\b" , "$1$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)(?:wy|yw)a\b" , "$1way" )
NewStr := RegExReplace( NewStr, "\b(A|a)(?:uthr|ut|th)or(?:a|i|[ai]t[ai])tive(|ly|ness)\b" , "$1uthoritative$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)(?:uthr?|ut|th)orith?(y|ies|tative(|ly))\b" , "$1uthorit$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)(?:uthr?|ut|th)orit(?:i?e|ier|hie)s\b" , "$1uthorities"  )
NewStr := RegExReplace( NewStr, "\b(A|a)(?:stheti|e?sthetia|e?stheci)c(s?|al|al?ly)\b" , "$1esthetic$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)(?:m|d)mend(|s|ed|ments?|ing|able|atory)\b" , "$1mend$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)(?:llready|l+reayd|ready|l+red+y)\b" , "$1lready"  )
NewStr := RegExReplace( NewStr, "\b(A|a)(?:gricu|rgicul)tur(es?|al)\b" , "$1gricultur$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)(?:dba|bo)ndon+(s?|ing|e[de]|ment)\b" , "$1bandon$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)(?:d?qu?i?|cq[iu])(re[sd]?|ring|siti(ons?|ve|vely))\b" , "$1cqui$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)(?:ckw|wk|kw)ard(|ly|ness)\b" , "$1wkward$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)(?:cc|)qu(?:ai|ia)nt(|s|ed|edly|ing|ance(|ship)s?)\b" , "$1cquaint$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)(?:c?quitt+|quit+)(s?)\b" , "$1cquit$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)(?:c?qui(?:tt)?|quitt?)t(ed|ing|a(l|nce)s?)\b" , "$1cquit$2"  )
NewStr := RegExReplace( NewStr, "\b(A|a)(?:c+us|cu)s(e[sdr]?|ing|al|able|ati(on|ve)s?|ator(y|ial|ially))\b" , "$1ccus$2"  )
NewStr := RegExReplace( NewStr, "\b(As|as|[Rr]e)si(?:t[ae]|ste)n(ces?|ts?|tly|tships?)\b" , "$1sistan$2"  )
NewStr := RegExReplace( NewStr, "\b(As|a?s|S)teriod(s?|al)\b" , "$1teroid$2"  )
NewStr := RegExReplace( NewStr, "\b(?:[Tt]hru|thur)sda(ys?)\b" , "Thursda$1"  )
NewStr := RegExReplace( NewStr, "\b(?:[Ss]ate|satu)rda(ys?)\b" , "Saturda$1"  )
NewStr := RegExReplace( NewStr, "\b(?:[Ll]os\s*angeles|los\s*[Aa]ngeles)\b" , "Los Angeles"  )
NewStr := RegExReplace( NewStr, "\b(?:[Jj]anur|janur?|[Jj]aun)ar(y|ies)\b" , "Januar$1"  )
NewStr := RegExReplace( NewStr, "\b(?:[Ii]srea|israe)l(|is?|ites?)\b" , "Israel$1"  )
NewStr := RegExReplace( NewStr, "\b(?:[Dd]ark\s+a|dark\s+[Aa])(ges)\b" , "Dark A$1"  )
NewStr := RegExReplace( NewStr, "\b(?:Tiv|ti[Vv])o(s?)\b" , "TiVo$1"  )
NewStr := RegExReplace( NewStr, "\b(?:pale|[Pp]ali)stin(e|ians?)\b" , "Palestin$1"  )
NewStr := RegExReplace( NewStr, "\b(?:midd?le\s+[Aa]|[Mm]idd?le\s+a)ges\b" , "Middle Ages"  )
NewStr := RegExReplace( NewStr, "\b(?:micros|[Mm]icro[S\$])oft\b" , "Microsoft"  )
NewStr := RegExReplace( NewStr, "\b(?:iwth|withe)\b" , "with" ) 
NewStr := RegExReplace( NewStr, "\b(?:iron\s+[Aa]|[Ii]ron\s+a)(ges?)\b" , "Iron A$1"  )
NewStr := RegExReplace( NewStr, "\b(?:christ|[Cc](?:hirst|hris(?=\w)|rist|hrsit))(ian(?:ity|dom|i[zs](?:e[ds]?|ing|ation)|sted)|mas(?:es|ti[md]es?|s?y|days?)?|endom|opher)\b" , "Christ$1"  )
NewStr := RegExReplace( NewStr, "\b(?:bronze\s+[Aa]g|[Bb]ronze\s+ag)(es?)\b" , "Bronze Ag$1"  )
NewStr := RegExReplace( NewStr, "\b(?:([Dd]is)s?)?([Aa])(?:s?pp?|p)oint((|ment|ee)s?|(ed|ing)(|ly)|ive)\b" , "$1$2ppoint$3"  )
NewStr := RegExReplace( NewStr, "\b((T|t|[Uu]nt)rustw|W|w)orthyness\b" , "$1orthiness"  )
NewStr := RegExReplace( NewStr, "\båland\b" , "Åland"  )
NewStr := RegExReplace( NewStr, "fuly\b" , "fully" )
NewStr := RegExReplace( NewStr, "([lnst])itly\b" , "$1itely"  )
NewStr := RegExReplace( NewStr, "([cdglntv]i|nt|ic|io?n|er|u)aly\b" , "$1ally"  )
NewStr := RegExReplace( NewStr, "([bcdgimstv])atly\b" , "$1ately"  )
NewStr := RegExReplace( NewStr, "(?<vow>[aeiou])(?<cons>[bdfgklmnprstvz])\k<cons>\k<cons>+(?<suffix>ed|[eo]rs?|i(ng|ve|on)s?)\b" , "${vow}${cons}${cons}${suffix}"  )
NewStr := RegExReplace( NewStr, "(?!\bDistin\b)\b([Ii]n(?:dis)?|[Dd]is|[Ee]x)(?:ctinc|ti[cn]|ticnt)(s?|(ive|)(|ly)|ions?)\b" , "$1tinct$2"  )
;For some reason it looks like AHK do not support "?<!" in regular expressions   
;NewStr := RegExReplace( NewStr, "\b(?<![Rr]iver\s+)([Ss])ence(|s|d)\b" , "$1ense$2"  )
;NewStr := RegExReplace( NewStr, "\b(?<![Gg]um\s+)arabic\b" , "Arabic"  )
;NewStr := RegExReplace( NewStr, "\b(?<![A-Z][a-z]*\s+)([Ss])peach(es)?\b" , "$1peech$2"  )
;NewStr := RegExReplace( NewStr, "\b(?<![A-Z][a-z]*\s+)([Ss])oley\b" , "$1olely"  )
;NewStr := RegExReplace( NewStr, "\b(?<!Mental\s+)(A|a)quaduct(s?)\b" , "$1queduct$2"  )
;NewStr := RegExReplace( NewStr, "\b((?<!Lemon\s+)I|i|[Uu]ni)nterupt(s?|ed|ing|ions?)\b" , "$1nterrupt$2"  )

if GetKeyState("Capslock", "T")
StringUpper, NewStr, NewStr

}

#Hotstring B