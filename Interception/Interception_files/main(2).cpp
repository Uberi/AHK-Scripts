if ( 'prettyPrint' in window ) {} else {
    document.write( '<script type="text/javascript" src="http://gist-it.appspot.com/assets/prettify/prettify.js"></script>' );
}
document.write( '<link rel="stylesheet" href="http://gist-it.appspot.com/assets/embed.css"/>' );
document.write( '<link rel="stylesheet" href="http://gist-it.appspot.com/assets/prettify/prettify.css"/>' );
document.write( '<div class="gister-gist">\n<div class="gist-file">\n    <div class="gist-data">\n        <pre class="prettyprint">#include &lt;interception.h&gt;\n#include "utils.h"\n\n#include &lt;iostream&gt;\n#include &lt;deque&gt;\n\nenum ScanCode\n{\n    SCANCODE_ESC = 0x01\n};\n\nInterceptionKeyStroke nothing = {};\nInterceptionKeyStroke ctrl_down = {0x1D, INTERCEPTION_KEY_DOWN};\nInterceptionKeyStroke alt_down  = {0x38, INTERCEPTION_KEY_DOWN};\nInterceptionKeyStroke del_down  = {0x53, INTERCEPTION_KEY_DOWN | INTERCEPTION_KEY_E0};\n\nbool operator == (const InterceptionKeyStroke &amp;first, const InterceptionKeyStroke &amp;second)\n{\n    return first.code == second.code &amp;&amp; first.state == second.state;\n}\n\nbool operator != (const InterceptionKeyStroke &amp;first, const InterceptionKeyStroke &amp;second)\n{\n    return !(first == second);\n}\n\nint main()\n{\n    using namespace std;\n\n    InterceptionContext context;\n    InterceptionDevice device;\n    InterceptionKeyStroke new_stroke, last_stroke;\n\n    deque&lt;InterceptionKeyStroke&gt; stroke_sequence;\n\n    stroke_sequence.push_back(nothing);\n    stroke_sequence.push_back(nothing);\n    stroke_sequence.push_back(nothing);\n\n    raise_process_priority();\n\n    context = interception_create_context();\n\n    interception_set_filter(context, interception_is_keyboard, INTERCEPTION_FILTER_KEY_ALL);\n\n    while(interception_receive(context, device = interception_wait(context), (InterceptionStroke *)&amp;new_stroke, 1) &gt; 0)\n    {\n        if(new_stroke != last_stroke)\n        {\n            stroke_sequence.pop_front();\n            stroke_sequence.push_back(new_stroke);\n        }\n\n        if(stroke_sequence[0] == ctrl_down &amp;&amp; stroke_sequence[1] == alt_down &amp;&amp; stroke_sequence[2] == del_down)\n            cout &lt;&lt; "ctrl-alt-del pressed" &lt;&lt; endl;\n        else if(stroke_sequence[0] == alt_down &amp;&amp; stroke_sequence[1] == ctrl_down &amp;&amp; stroke_sequence[2] == del_down)\n            cout &lt;&lt; "alt-ctrl-del pressed" &lt;&lt; endl;\n        else\n            interception_send(context, device, (InterceptionStroke *)&amp;new_stroke, 1);\n\n        if(new_stroke.code == SCANCODE_ESC) break;\n\n        last_stroke = new_stroke;\n    }\n\n    interception_destroy_context(context);\n\n    return 0;\n}\n</pre>\n    </div>\n    <div class="gist-meta">\n        <span><a href="https://github.com/oblitum/Interception/blob/master/samples/cadstop/main.cpp">This Gist</a> by <a href="http://gist-it.appspot.com">gist-it</a></span>\n        <span style="float: right; color: #369;"><a href="https://github.com/oblitum/Interception/raw/master/samples/cadstop/main.cpp">view raw</a></span>\n        <span style="float: right; margin-right: 8px;">\n            <a style="color: rgb(102, 102, 102);" href="https://github.com/oblitum/Interception/blob/master/samples/cadstop/main.cpp">samples/cadstop/main.cpp</a></span>\n            <!-- Generated by: http://gist-it.appspot.com -->\n    </div>\n</div>\n</div>' );
document.write( '<script type="text/javascript">prettyPrint();</script>' );