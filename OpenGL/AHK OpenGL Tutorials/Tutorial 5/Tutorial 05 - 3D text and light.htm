
<!-- saved from url=(0223)http://translate.googleusercontent.com/translate_c?hl=en&ie=UTF-8&sl=auto&tl=en&u=http://www.autohotkey.net/~Bentschi/opengl_tutorials/tut05.htm&prev=_t&rurl=translate.google.com&twu=1&usg=ALkJrhgS06tA0n7-gMcQFPImXE5kaqdk1g -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script>(function (){ function ti_a(b){this.t={};this.tick=function(c,d,a){a=a?a:(new Date).getTime();this.t[c]=[a,d]};this.tick("start",null,b)}var ti_b=new ti_a;window.jstiming={Timer:ti_a,load:ti_b};try{var ti_=null;if(window.chrome&&window.chrome.csi)ti_=Math.floor(window.chrome.csi().pageT);if(ti_==null)if(window.gtbExternal)ti_=window.gtbExternal.pageT();if(ti_==null)if(window.external)ti_=window.external.pageT;if(ti_)window.jstiming.pt=ti_}catch(ti_c){}; })()
</script><script src="./Tutorial 05 - 3D text and light_files/translate_c.js"></script><script>_infowindowVersion=1;_intlStrings._originalText = "Original German text:";_intlStrings._interfaceDirection="ltr";_intlStrings._interfaceAlign="left";_intlStrings._langpair="de|en";_intlStrings._feedbackUrl="http://translate.google.com/translate_suggestion";_intlStrings._currentBy="Current translation on %1$s by %2$s";_intlStrings._unknown="unknown";_intlStrings._suggestTranslation="Contribute a better translation"  ;_intlStrings._submit="Contribute";_intlStrings._suggestThanks="Thank you for contributing your translation suggestion to Google Translate.";_intlStrings._reverse=false;</script><style type="text/css">.google-src-text {display: none !important} .google-src-active-text {display: block!important;color:black!important; font-size:12px!important;font-family:arial,sans-serif!important}.google-src-active-text a {font-size:12px!important}.google-src-active-text a:link {color:#00c!important;text-decoration:underline!important}.google-src-active-text a:visited {color:purple!important;text-decoration:underline!important}.google-src-active-text a:active {color:red!important;text-decoration:underline!important}</style><meta http-equiv="X-Translated-By" content="Google"><!--<base href="http://www.autohotkey.net/~Bentschi/opengl_tutorials/tut05.htm">--><base href="."><title> Tutorial 05 - 3D text and light </title></head><body style="font-family:&#39;Arial&#39;;font-size:small" bgcolor="#F3F3FF"><iframe src="./Tutorial 05 - 3D text and light_files/translate_un.htm" width="0" height="0" frameborder="0" style="width:0px;height:0px;border:0px;"></iframe><p><table border="0" cellpadding="10"><tbody><tr><td><img src="./Tutorial 05 - 3D text and light_files/thumb05.jpg"></td><td><h1> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Tutorial 05 - 3D Text und Licht</span> Tutorial 05 - 3D text and light</span> </h1></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Willkommen zu einem weiteren Text-Tutorial.</span> Welcome to another text tutorial.</span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Nachdem wir nun wissen, wie wir Text in OpenGL darstellen können, dürfte es kein Problem sein, dies auch dreidimensional hinzubekommen.</span> Now that we know how we can display text in OpenGL, it should be no problem, it also received three-dimensional added.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Damit unser Text nicht einfach nur eine Farbe bekommt, die wir später nicht unterscheiden können von der Tiefe, werden wir in diesem Tutorial auch Licht verwenden.</span> In order that our text does not simply just get a color that we can not distinguish later by the depth, we will use in this tutorial also light.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Würden wir kein Licht verwenden, würde alles in der Farbe von <b>glColor</b> gezeichnet werden und wir würden keine Schattierungen sehen.</span> If we use a light, everything would be the color of <b>glColor</b> drawn in and we would not see any shades.</span> <br><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Beim erstellen des Font in <b>InitOpenGL</b> hat sich eigentlich nichts geändert.</span> When you create the font in <b>InitOpenGL</b> has really changed anything.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Ich verwende hier lediglich "Comic Sans MS" anstelle von "Arial" um etwas Abwechslung zu schaffen.</span> I am using only "Comic Sans MS" to create instead of "Arial" to something different.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Wie auch im letzten Tutorial ist es euch natürlich wieder selbst überlassen, welche Schriftart ihr verwendet, insofern eine TrueType-Schriftart verwendet wird.</span> As in the last tutorial, it is of course up to you again, then, what font you use, so far as a TrueType font is used.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""> <code style="color:Blue">InitOpenGL:</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glClearColor(0, 0, 0, 0)</code> <code style="color:Green">;Setze die Farbe, die beim Löschen des Buffers verwendet wird.</code></span> <code style="color:Blue">glClearColor(0, 0, 0, 0)</code> <code style="color:Green">;Setze die Farbe, die beim Löschen des Buffers verwendet wird.</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glShadeModel(GL_SMOOTH)</code> <code style="color:Green">;Erlaube Smooth shading</code></span> <code style="color:Blue">glShadeModel(GL_SMOOTH)</code> <code style="color:Green">;Erlaube Smooth shading</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">FontList := glGenLists(256)</code> <code style="color:Green">;Erstelle Displaylist für 256 Buchstaben</code></span> <code style="color:Blue">FontList := glGenLists(256)</code> <code style="color:Green">;Erstelle Displaylist für 256 Buchstaben</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">hFont := DllCall("CreateFont", "int", -16</code> <code style="color:Green">;Schriftgröße (0 = Standardgröße, &lt;0 = Suche nächst beste Schriftgröße)</code></span> <code style="color:Blue">hFont := DllCall("CreateFont", "int", -16</code> <code style="color:Green">;Schriftgröße (0 = Standardgröße, &lt;0 = Suche nächst beste Schriftgröße)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "int", 0</code> <code style="color:Green">;Breite der Zeichen (0 = Verwende Standard)</code></span> <code style="color:Blue">, "int", 0</code> <code style="color:Green">;Breite der Zeichen (0 = Verwende Standard)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "int", 0</code> <code style="color:Green">;Vorschubswinkel (0 = Standard)</code></span> <code style="color:Blue">, "int", 0</code> <code style="color:Green">;Vorschubswinkel (0 = Standard)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "int", 0</code> <code style="color:Green">;Orientationswinkel (0 = Standard)</code></span> <code style="color:Blue">, "int", 0</code> <code style="color:Green">;Orientationswinkel (0 = Standard)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "int", 800</code> <code style="color:Green">;Fett (100-1000, 0=Standard, 400=Normal, 800=Fett)</code></span> <code style="color:Blue">, "int", 800</code> <code style="color:Green">;Fett (100-1000, 0=Standard, 400=Normal, 800=Fett)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Kursiv (1=Ja, 0=Nein)</code></span> <code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Kursiv (1=Ja, 0=Nein)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Unterstrichen (1=Ja, 0=Nein)</code></span> <code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Unterstrichen (1=Ja, 0=Nein)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Durchgestrichen (1=Ja, 0=Nein)</code></span> <code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Durchgestrichen (1=Ja, 0=Nein)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Zeichensatz (0=ANSI-Zeichensatz)</code></span> <code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Zeichensatz (0=ANSI-Zeichensatz)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 4</code> <code style="color:Green">;Ausgabe-Präzision (4=Verwende TrueType wenn möglich)</code></span> <code style="color:Blue">, "uint", 4</code> <code style="color:Green">;Ausgabe-Präzision (4=Verwende TrueType wenn möglich)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Beschneidungs-Präzision (0=Standard)</code></span> <code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Beschneidungs-Präzision (0=Standard)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 4</code> <code style="color:Green">;Qualität (4=Antialiaste Qualität)</code></span> <code style="color:Blue">, "uint", 4</code> <code style="color:Green">;Qualität (4=Antialiaste Qualität)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Schrift-Type (0=Standard)</code></span> <code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Schrift-Type (0=Standard)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "str", "Comic Sans MS")</code> <code style="color:Green">;Schriftart (Arial, Verdana, Lucida Console, ...)</code></span> <code style="color:Blue">, "str", "Comic Sans MS")</code> <code style="color:Green">;Schriftart (Arial, Verdana, Lucida Console, ...)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">DllCall("SelectObject", uint, hDC, uint, hFont)</code> <code style="color:Green">;Die Schriftart für den Device-Context wählen</code></span> <code style="color:Blue">DllCall("SelectObject", uint, hDC, uint, hFont)</code> <code style="color:Green">;Die Schriftart für den Device-Context wählen</code></span> <br><code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Nun aber werden wir nicht <b>wglUseFontBitmaps</b> , sondern <b>wglUseFontOutlines</b> verwenden.</span> But now we do not <b>wglUseFontBitmaps</b> but <b>wglUseFontOutlines</b> will be using.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Die ersten vier Parameter bleiben dabei auch gleich.</span> The first four parameters also remain the same.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Also der Device-Kontext, erstes Zeichen, anzahl der Zeichen und die Display-List.</span> So the device context, first character, number of characters and the display list.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Bei <b>wglUseFontOutlines</b> kommen aber noch die Parameter, maximale Abweichung von der Original-Schriftart, Tiefe des OpenGL-Font's, Zeichenmodus ( <b>WGL_FONT_POLYGONS</b> für Polygone oder <b>WGL_FONT_LINES</b> für Linien) und ein Speicher, der die Informationen über die Größe jedes einzelnen Buchstaben enthält, hinzu.</span> In <b>wglUseFontOutlines</b> come but the parameters, maximum deviation from the original font, depth of the OpenGL-Font's character mode <b>(WGL_FONT_POLYGONS</b> for polygons or <b>WGL_FONT_LINES</b> for lines) and a store that information on the size of each letter contains the, added.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Dafür müssen wir aber erst den Speicher für die Struktur <b>GLYPHMETRICSFLOAT</b> mit der größe von 24 Byte, mal die Anzahl der Buchstaben (256) festlegen.</span> For that we need but only the memory for the structure <b>GLYPHMETRICSFLOAT</b> with the size of 24 bytes, the number of letters (256) set times.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Im Anschluss wieder genau so wie im Letzten Tutorial die alte Schriftart wählen und die Neue Löschen.</span> After re-elect the same way as in the last tutorial, the old font and the New Delete.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""> <code style="color:Blue">VarSetCapacity(gmf, 256*24, 0)</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">wglUseFontOutlines(hDC, 0, 256, FontList, 0, 0.1, WGL_FONT_POLYGONS, &amp;gmf)</code> <code style="color:Green">;Erstelle die Zeichen 0-255 (ANSI) für OpenGL</code></span> <code style="color:Blue">wglUseFontOutlines(hDC, 0, 256, FontList, 0, 0.1, WGL_FONT_POLYGONS, &amp;gmf)</code> <code style="color:Green">;Erstelle die Zeichen 0-255 (ANSI) für OpenGL</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">DllCall("SelectObject", "uint", hDC, "uint", hOldFont)</code> <code style="color:Green">;Wähle alte Schriftart</code></span> <code style="color:Blue">DllCall("SelectObject", "uint", hDC, "uint", hOldFont)</code> <code style="color:Green">;Wähle alte Schriftart</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">DllCall("DeleteObject", "uint", hFont)</code> <code style="color:Green">;Lösche neue Schriftart</code></span> <code style="color:Blue">DllCall("DeleteObject", "uint", hFont)</code> <code style="color:Green">;Lösche neue Schriftart</code></span> <br><code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Da wir in diesem Tutorial wieder die Perspektive verwenden, müssen wir auch wieder die Tiefe initialisieren.</span> Since we are using in this tutorial reflect the perspective that we need to initialize again the depth.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glEnable(GL_DEPTH_TEST)</code> <code style="color:Green">;Tiefentest einschalten</code></span> <code style="color:Blue">glEnable(GL_DEPTH_TEST)</code> <code style="color:Green">;Tiefentest einschalten</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glDepthFunc(GL_LEQUAL)</code> <code style="color:Green">;Tiefenfunktion wählen</code></span> <code style="color:Blue">glDepthFunc(GL_LEQUAL)</code> <code style="color:Green">;Tiefenfunktion wählen</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST)</code> <code style="color:Green">;Korrektion für die Tiefe</code></span> <code style="color:Blue">glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST)</code> <code style="color:Green">;Korrektion für die Tiefe</code></span> <br><code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Als nächstes reservieren wir uns einen Speicher in der Größe von 16 Byte, den wir für unsere Lichteinstellungen verwenden.</span> The next book we're using a memory with a size of 16 bytes, which we for our light settings.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">VarSetCapacity(light, 16, 0)</code> <code style="color:Green">;Speicher für die Lichteinstellungen</code></span> <code style="color:Blue">VarSetCapacity(light, 16, 0)</code> <code style="color:Green">;Speicher für die Lichteinstellungen</code></span> <br><code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Zuerst werden wir das Ambiente Licht einstellen.</span> First we will set the ambience of light.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Das Ambiente Licht ist sozusagen das Grundlicht.</span> The atmosphere is light, so to speak, the background light.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Es leuchtet nicht in eine bestimmte Richtung sondern ist sozusagen nur das Licht das wir auch sehen würden, wenn ein Objekt nicht direkt bestrahlt wird.</span> It does not light in a certain direction, so to speak but only the light that we would also see if an object is not directly irradiated.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""><code style="color:Blue"></code> <code style="color:Green">;Ambiente Lichtwerte</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(0.5, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <code style="color:Blue">NumPut(0.5, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(0.5, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <code style="color:Blue">NumPut(0.5, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(0.5, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <code style="color:Blue">NumPut(0.5, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <br> <code style="color:Blue">glLightfv(GL_LIGHT1, GL_AMBIENT, &amp;light)</code> <br> <code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Das Diffuse Licht hingegen, das wir als nächstes definieren, ist das Licht das ein Objekt anstrahlt.</span> The diffuse light, however, which we define next is the light that illuminates an object.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Mit diesem Licht bekommen wir schon einen ersten dreidimensionalen Effekt.</span> With this light, we already had a first three-dimensional effect.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""><code style="color:Blue"></code> <code style="color:Green">;Diffuse Lichtwerte</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <code style="color:Blue">NumPut(1.0, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <code style="color:Blue">NumPut(1.0, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <code style="color:Blue">NumPut(1.0, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <br> <code style="color:Blue">glLightfv(GL_LIGHT1, GL_DIFFUSE, &amp;light)</code> <br> <code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Das Speculare Licht ist in diesem Tutorial weniger von Bedeutung, da wir dieses Licht auf ebenen Oberflächen nur wenig bis gar nicht wahrnehmen.</span> The specular light is less important in this tutorial, as we that light on flat surfaces only perceive little if at all.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Auf einer glatten Kugel hingegen würde es einen netten Glanzpunkt erzeugen.</span> On a smooth ball, however, it would create a nice highlight.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""><code style="color:Blue"></code> <code style="color:Green">;Speculare Lichtwerte</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <code style="color:Blue">NumPut(1.0, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <code style="color:Blue">NumPut(1.0, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <code style="color:Blue">NumPut(1.0, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <br> <code style="color:Blue">glLightfv(GL_LIGHT1, GL_SPECULAR, &amp;light)</code> <br> <code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Damit werden wir noch die Lichtposition definieren.</span> Thus we will define the light position.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Dabei werden die Koordinaten X, Y und Z verwendet, so wie wir es gewohnt sind.</span> The coordinates X, Y and Z are used, as we are used to.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Der vierte Parameter gibt jedoch an ob wir ein gerichtetes Licht (0.0) haben wollen oder ob wir einfach nur die Position des Lichtes (1.0) bestimmen wollen.</span> The fourth parameter is, however, on whether we want a directional light (0.0) or whether we simply want to determine only the position of the light (1.0).</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">In unserem Fall sollte das Licht vom Punkt x0 y0 z0 ausgehen.</span> In our case, the light should emanate from the point x0 y0 z0.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""><code style="color:Blue"></code> <code style="color:Green">;Lichtposition</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(0.0, light, 0, "float")</code> <code style="color:Green">;X-Position</code></span> <code style="color:Blue">NumPut(0.0, light, 0, "float")</code> <code style="color:Green">;X-Position</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(0.0, light, 4, "float")</code> <code style="color:Green">;Y-Position</code></span> <code style="color:Blue">NumPut(0.0, light, 4, "float")</code> <code style="color:Green">;Y-Position</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(0.0, light, 8, "float")</code> <code style="color:Green">;Z-Position</code></span> <code style="color:Blue">NumPut(0.0, light, 8, "float")</code> <code style="color:Green">;Z-Position</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Position/Richtung</code></span> <code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Position/Richtung</code></span> <br> <code style="color:Blue">glLightfv(GL_LIGHT1, GL_POSITION, &amp;light)</code> <br> <code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Und der Herr sprach, es werde Licht...</span> And the Lord said, Let there be light ...</span> <img src="./Tutorial 05 - 3D text and light_files/big_smile.png"> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">.</span> .</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Dazu müssen wir das Licht einschalten das wir definiert haben ( <b>GL_LIGHT1</b> ) und OpenGL darauf hinweisen, dass wir die Beleuchtung ( <b>GL_LIGHTING</b> ) aktivieren wollen.</span> For this we need to turn on the light that we have defined <b>(GL_LIGHT1)</b> and point OpenGL that we <b>(GL_LIGHTING)</b> will activate the lights.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Mit diesen Einstellungen können wir jetzt mittels <b>glColor</b> keine Farbe mehr definieren.</span> With these settings, we can now define <b>glColor</b> no color means.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Dazu könnten wir den Text den wir Zeichnen wollen ein Material verpassen und mit <b>glEnable(GL_COLOR_MATERIAL)</b> die Verwendung der Farbe wieder aktivieren.</span> For this we could draw the text we want to miss a material and <b>glEnable (GL_COLOR_MATERIAL)</b> the use of color to reactivate.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Da wir aber kein Material verwenden, belassen wir es ohne diese Einstellung.</span> Since we use but no material, let's leave it without this setting.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glEnable(GL_LIGHT1)</code> <code style="color:Green">;Licht 1 einschalten</code></span> <code style="color:Blue">glEnable(GL_LIGHT1)</code> <code style="color:Green">;Licht 1 einschalten</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glEnable(GL_LIGHTING)</code> <code style="color:Green">;Beleuchtung aktivieren</code></span> <code style="color:Blue">glEnable(GL_LIGHTING)</code> <code style="color:Green">;Beleuchtung aktivieren</code></span> <br> <code style="color:Blue">return</code> <br> <code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">In <b>GuiSize</b> verwenden wir, im Gegensatz zum letzten Tutorial wieder die Perspektive.</span> In <b>GuiSize</b> we use, in contrast to the last tutorial again the perspective.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Genauer gesagt die selben Zeilen wie im zweiten Tutorial.</span> More precisely the same lines as in the second tutorial.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">GuiSize:</code> <code style="color:Green">;Wenn sich die Größe des Gui verändert...</code></span> <code style="color:Blue">GuiSize:</code> <code style="color:Green">;Wenn sich die Größe des Gui verändert...</code></span> <br> <code style="color:Blue">ScreenW := (A_GuiWidth=0) ? 1 : A_GuiWidth</code> <br> <code style="color:Blue">ScreenH := (A_GuiHeight=0) ? 1 : A_GuiHeight</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glViewport(0, 0, ScreenW, ScreenH)</code> <code style="color:Green">;Setze den Viewport (der Bereich in dem Gezeichnet wird) auf die Größe des Guis</code></span> <code style="color:Blue">glViewport(0, 0, ScreenW, ScreenH)</code> <code style="color:Green">;Setze den Viewport (der Bereich in dem Gezeichnet wird) auf die Größe des Guis</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glMatrixMode(GL_PROJECTION)</code> <code style="color:Green">;Wechsle zur Projektionsmatrix</code></span> <code style="color:Blue">glMatrixMode(GL_PROJECTION)</code> <code style="color:Green">;Wechsle zur Projektionsmatrix</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glLoadIdentity()</code> <code style="color:Green">;Stelle die Matrix wieder auf 0</code></span> <code style="color:Blue">glLoadIdentity()</code> <code style="color:Green">;Stelle die Matrix wieder auf 0</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">gluPerspective(45, ScreenW/ScreenH, 1, 100)</code> <code style="color:Green">;Perspektive wählen</code></span> <code style="color:Blue">gluPerspective(45, ScreenW/ScreenH, 1, 100)</code> <code style="color:Green">;Perspektive wählen</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glMatrixMode(GL_MODELVIEW)</code> <code style="color:Green">;Wechsle zur Modelansichtmatrix</code></span> <code style="color:Blue">glMatrixMode(GL_MODELVIEW)</code> <code style="color:Green">;Wechsle zur Modelansichtmatrix</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glLoadIdentity()</code> <code style="color:Green">;Stelle die Matrix wieder auf 0</code></span> <code style="color:Blue">glLoadIdentity()</code> <code style="color:Green">;Stelle die Matrix wieder auf 0</code></span> <br> <code style="color:Blue">return</code> <br> <code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Damit kommen wir auch schon wieder zu <b>UpdateScene</b> , worin wir erstmal den Text definieren den wir dreidimensional darstellen wollen.</span> Thus we come again to <b>update scene</b> where we first define the text we want to represent in three dimensions.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">UpdateScene:</code> <code style="color:Green">;Unsere Zeichenroutine</code></span> <code style="color:Blue">UpdateScene:</code> <code style="color:Green">;Unsere Zeichenroutine</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)</code> <code style="color:Green">;Lösche den Farb- und Tiefenbuffer</code></span> <code style="color:Blue">glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)</code> <code style="color:Green">;Lösche den Farb- und Tiefenbuffer</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glLoadIdentity()</code> <code style="color:Green">;Stelle die Matrix wieder auf 0</code></span> <code style="color:Blue">glLoadIdentity()</code> <code style="color:Green">;Stelle die Matrix wieder auf 0</code></span> <br><code style="color:Blue"></code><br> <code style="color:Blue">Text := "3D Text und Licht"</code> <br> <code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Als nächstes kommen Berechnungen, die zwar unheimlich kompliziert aussehen, jedoch werden hier nur die Farben aus einer Position des Farbspektrum's in die Variablen R (Rot), G (Grün) und B (Blau) gespeichert.</span> Next come calculations that look is incredibly complicated, but here only the colors from a position of the color spectrum's are stored in the variables R (red), G (green) and B (blue).</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""> <code style="color:Blue">R := (R="") ? 1 : (B&gt;=0.95 &amp;&amp; G&lt;=0.05 &amp;&amp; R&lt;0.95) ? R+0.1 : (B&lt;=0.05 &amp;&amp; G&gt;=0.95 &amp;&amp; R&gt;=0.05) ? R-0.1 : R</code> <br> <code style="color:Blue">G := (G="") ? 0 : (R&gt;=0.95 &amp;&amp; B&lt;=0.05 &amp;&amp; G&lt;0.95) ? G+0.1 : (R&lt;=0.05 &amp;&amp; B&gt;=0.95 &amp;&amp; G&gt;=0.05) ? G-0.1 : G</code> <br> <code style="color:Blue">B := (B="") ? 0 : (G&gt;=0.95 &amp;&amp; R&lt;=0.05 &amp;&amp; B&lt;0.95) ? B+0.1 : (G&lt;=0.05 &amp;&amp; R&gt;=0.95 &amp;&amp; B&gt;=0.05) ? B-0.1 : B</code> <br> <code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Diese Farbenwerte werden wir für unser Ambientes Licht verwenden, damit nicht alles so Grau in Grau aussieht</span> These colors are values we use for our atmosphere light, so not everything looks gray to gray</span> <img src="./Tutorial 05 - 3D text and light_files/big_smile.png"> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">.</span> .</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""><code style="color:Blue"></code> <code style="color:Green">;Ambiente Lichtwerte</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(R, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <code style="color:Blue">NumPut(R, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(G, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <code style="color:Blue">NumPut(G, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(B, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <code style="color:Blue">NumPut(B, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <br> <code style="color:Blue">glLightfv(GL_LIGHT1, GL_AMBIENT, &amp;light)</code> <br> <code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Danach gehen wir 10 Einheiten in den Bildschirm und von dort aus skalieren wir den Text den wir zeichnen werden.</span> Then we bring 10 units into the screen and from there we scale the text to which we draw.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Skaliert wird mit den <b>glScale</b> -Funktionen, wobei wir hier <b>glScalef</b> verwenden. <b>glScalef</b> hat drei Parameter, X, Y und Z. Genau so wie bei <b>glTranslatef</b> , nur das es hier ums Skalieren geht.</span> Scaled with the <b>glScale</b> functions, which we use here <b>glScalef. GlScalef</b> has three parameters, X, Y and Z. Just as in <b>glTranslatef,</b> only that it comes to scaling goes here.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Wollen wir auf nur einer Achse skalieren, würden wir bei den beiden anderen Parametern 1 eintragen.</span> Do we want to scale it to only one axis, we would add the other two parameters 1.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Da 1 für <b>glScalef</b> die Originalgröße bedeutet.</span> As a means for <b>glScalef</b> the original size.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">2 hingegen würde doppelt so groß bedeuten.</span> 2, however, would mean twice as large.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Würden wir <b>glScalef</b> zwei mal mit allen Parametern auf 2 gesetzt aufrufen, wäre das was danach gezeichnet wird also vier mal so groß.</span> Would we <b>glScalef</b> times with parameters set to 2 to call any two, that would be what is drawn after that is, four times as large.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Auch beim Skalieren ist es möglich mit <b>glLoadIdentity</b> wieder die Originalgröße herzustellen.</span> Even when scaling it is possible with <b>glLoadIdentity</b> again produce the original size.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glTranslatef(0, 0, -10)</code> <code style="color:Green">;Gehe 10 Einheiten in den Bildschirm hinein</code></span> <code style="color:Blue">glTranslatef(0, 0, -10)</code> <code style="color:Green">;Gehe 10 Einheiten in den Bildschirm hinein</code></span> <br> <code style="color:Blue">glScalef(1.6, 1.6, 1.6)</code> <br> <code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Im Anschluss folgen nochmal so komische Berechnungen, diesmal aber werden die Variablen X, Y und Z durch die Tasten [Links], [Rechts], [Auf], [Ab], [Bild Auf] und [Bild Ab] inkrementiert bzw. dekrementiert.</span> Following again follow so ridiculous calculations, but this time, the variables X, Y and Z by the [Left], [Right], increment [Up] [Down], [Page Up] and [Page Down] or decremented .</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Das erlaubt uns den Text zu rotieren.</span> This allows us to rotate the text.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""> <code style="color:Blue">X := (X="") ? 0 : (GetKeyState("Left")) ? X+4 : (GetKeyState("Right")) ? X-4 : X</code> <br> <code style="color:Blue">Y := (Y="") ? 0 : (GetKeyState("Up")) ? Y+4 : (GetKeyState("Down")) ? Y-4 : Y</code> <br> <code style="color:Blue">Z := (Z="") ? 0 : (GetKeyState("PgUp")) ? Z+4 : (GetKeyState("PgDn")) ? Z-4 : Z</code> <br> <code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Danach rotieren wir die Szene anhand dieser Variablen.</span> Then we rotate the scene by this variable.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glRotatef(X, 0, 1, 0)</code> <code style="color:Green">;Rotiere X auf der Y-Achse</code></span> <code style="color:Blue">glRotatef(X, 0, 1, 0)</code> <code style="color:Green">;Rotiere X auf der Y-Achse</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glRotatef(Y, 1, 0, 0)</code> <code style="color:Green">;Rotiere Y auf der X-Achse</code></span> <code style="color:Blue">glRotatef(Y, 1, 0, 0)</code> <code style="color:Green">;Rotiere Y auf der X-Achse</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glRotatef(Z, 0, 0, 1)</code> <code style="color:Green">;Rotiere Z auf der Z-Achse</code></span> <code style="color:Blue">glRotatef(Z, 0, 0, 1)</code> <code style="color:Green">;Rotiere Z auf der Z-Achse</code></span> <br><code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Da wir den Text ja nicht linksbündig schreiben wollen sondern zentriert müssen wir uns für jeden Buchstaben die Breite aus der <b>GLYPHMETRICS</b> -Struktur holen die wir beim erstellen des Ouline-Font's bekommen haben.</span> Since we do not even want to write the text left justified but center we have the width of each letter from the <b>GLYPHMETRICS</b> structure for which we get when creating the font Oulins's got.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Dazu lesen wir pro Buchstabe das float <b>gmfCellIncX</b> aus der Struktur und addieren diesen Wert zur Breite.</span> To this end, we read each letter <b>gmfCellIncX</b> the float from the structure and add this value to the width.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Nun haben wir die Breite des Textes in OpenGL-Einheiten.</span> Now we have the width of the text in OpenGL units.</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Wir translatieren den Text aber nur um die halbe Breite, da wir ja den Text auch nicht rechtsbündig haben wollen.</span> We translate the text but only by half the width, since we do not have the text right-aligned.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""> <code style="color:Blue">TextWidth := 0</code> <br> <code style="color:Blue">Loop, parse, Text</code> <br> <code style="color:Blue">TextWidth += NumGet(gmf, Asc(A_LoopField)*24+16, "float")</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glTranslatef(-TextWidth/2, 0, 0)</code> <code style="color:Green">;Zentriere Text</code></span> <code style="color:Blue">glTranslatef(-TextWidth/2, 0, 0)</code> <code style="color:Green">;Zentriere Text</code></span> <br><code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Danach den Text zeichnen mit <b>glListBase</b> und <b>glCallLists</b> , genau so wie im letzten Tutorial.</span> Then draw the text with <b>glListBase glCallLists</b> and, just as in the last tutorial.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glListBase(FontList)</code> <code style="color:Green">;Wähle die OpenGL-Schriftart</code></span> <code style="color:Blue">glListBase(FontList)</code> <code style="color:Green">;Wähle die OpenGL-Schriftart</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glCallLists(StrLen(Text), (A_IsUnicode) ? GL_UNSIGNED_SHORT : GL_UNSIGNED_BYTE, &amp;Text)</code> <code style="color:Green">;Schreibe den Text in OpenGL</code></span> <code style="color:Blue">glCallLists(StrLen(Text), (A_IsUnicode) ? GL_UNSIGNED_SHORT : GL_UNSIGNED_BYTE, &amp;Text)</code> <code style="color:Green">;Schreibe den Text in OpenGL</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">SwapBuffers(hDC)</code> <code style="color:Green">;Bringe das Gezeichnete auf das Gui</code></span> <code style="color:Blue">SwapBuffers(hDC)</code> <code style="color:Green">;Bringe das Gezeichnete auf das Gui</code></span> <br> <code style="color:Blue">return</code> <br> <code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Beim Beenden wird auch hier wieder die Schriftart gelöscht.</span> When quitting is also deleted the font.</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">ExitSub:</code> <code style="color:Green">;Bevor das Programm beendet wird...</code></span> <code style="color:Blue">ExitSub:</code> <code style="color:Green">;Bevor das Programm beendet wird...</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glDeleteLists(FontList, 256)</code> <code style="color:Green">;Lösche die Schriftart</code></span> <code style="color:Blue">glDeleteLists(FontList, 256)</code> <code style="color:Green">;Lösche die Schriftart</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">if (hRC)</code> <code style="color:Green">;Haben wir einen gültigen Renderkontext?</code></span> <code style="color:Blue">if (hRC)</code> <code style="color:Green">;Haben wir einen gültigen Renderkontext?</code></span> <br> <code style="color:Blue">{</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">wglMakeCurrent(0, 0)</code> <code style="color:Green">;Verwende keinen Renderkontext</code></span> <code style="color:Blue">wglMakeCurrent(0, 0)</code> <code style="color:Green">;Verwende keinen Renderkontext</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">wglDeleteContext(hRC)</code> <code style="color:Green">;Lösche den Renderkontext</code></span> <code style="color:Blue">wglDeleteContext(hRC)</code> <code style="color:Green">;Lösche den Renderkontext</code></span> <br> <code style="color:Blue">}</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">FreeOpenGlLib()</code> <code style="color:Green">;Gebe den speicher der OpenGL-Bibliothek frei.</code></span> <code style="color:Blue">FreeOpenGlLib()</code> <code style="color:Green">;Gebe den speicher der OpenGL-Bibliothek frei.</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">ExitApp</code> <code style="color:Green">;Beende das Programm entgültig.</code></span> <code style="color:Blue">ExitApp</code> <code style="color:Green">;Beende das Programm entgültig.</code></span> <br><code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Das Ergebniss ist ein schattierter Text, der die Farbe in einer fast unendlichen Schleife (bis zum ExitApp</span> The result is a shaded text to the color in an almost infinite loop (until ExitApp</span> <img src="./Tutorial 05 - 3D text and light_files/big_smile.png"> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">), anhand des Farbspektrums, von dem Regenbogen hinterm Haus ändert</span> ), Changes the basis of the color spectrum of the rainbow behind the house</span> <img src="./Tutorial 05 - 3D text and light_files/big_smile.png"> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">.</span> .</span> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Damit der Text rotiert werden kann, werden die Tasten [Links], [Rechts], [Auf], [Ab], [Bild Auf] und [Bild Ab] verwendet.</span> Thus the text can be rotated to the [left], [Right], used [Up] [Down], [Page Up] and [Page Down].</span> <br><br><img src="./Tutorial 05 - 3D text and light_files/tut05.jpg"><br><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Hier findest du den gesamten Code zum Download (Zip-Archiv, 29 KB):</span> Here you will find all the code download (zip-archive, 29 KB)</span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><a href="http://www.autohotkey.net/~Bentschi/opengl_tutorials/05/tut05.zip">Tutorial 05 - 3D Text und Licht</a></span> <a href="http://www.autohotkey.net/~Bentschi/opengl_tutorials/05/tut05.zip">Tutorial 05 - 3D text and light</a></span> <br><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Hier nochmal der gesamte Code ohne Zwischenkommentare:</span> Here again the entire code without intermediate comments:</span> </p><p><table border="1" cellspacing="5" cellpadding="5" width="100%" style="border:gray"><tbody><tr><td nowrap=""> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">#include, gl.ahk</code> <code style="color:Green">;OpenGL-Bibliothek für AutoHotkey einbinden</code></span> <code style="color:Blue">#include, gl.ahk</code> <code style="color:Green">;OpenGL-Bibliothek für AutoHotkey einbinden</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">OnExit, ExitSub</code> <code style="color:Green">;Springe vor dem Beenden des Programmes zum Label ExitSub</code></span> <code style="color:Blue">OnExit, ExitSub</code> <code style="color:Green">;Springe vor dem Beenden des Programmes zum Label ExitSub</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">if (GL_WRAPPER_VERSION &lt; 2.2)</code> <code style="color:Green">;Überprüfe ob der OpenGL-Wrapper veraltet ist</code></span> <code style="color:Blue">if (GL_WRAPPER_VERSION &lt; 2.2)</code> <code style="color:Green">;Überprüfe ob der OpenGL-Wrapper veraltet ist</code></span> <br> <code style="color:Blue">{</code> <br> <code style="color:Blue">&nbsp;&nbsp;</code> <code style="color:Green">;Wenn ja, gib den Benutzer bescheid und beende das Programm</code> <br> <code style="color:Blue">MsgBox, Die Version des OpenGL-Wrappers ist veraltet!`nDas Programm wird beendet!</code> <br> <code style="color:Blue">ExitApp</code> <br> <code style="color:Blue">}</code> <br> <code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">Gui, +LastFound +Resize</code> <code style="color:Green">;Optionen für das Gui setzen</code></span> <code style="color:Blue">Gui, +LastFound +Resize</code> <code style="color:Green">;Optionen für das Gui setzen</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">hGui := WinExist()</code> <code style="color:Green">;Das Fensterhandle des Guis ermitteln</code></span> <code style="color:Blue">hGui := WinExist()</code> <code style="color:Green">;Das Fensterhandle des Guis ermitteln</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">hDC := DllCall("GetDC", "uint", hGui, "uint")</code> <code style="color:Green">;Ermittle den Devicekontext (Gerätekontext)</code></span> <code style="color:Blue">hDC := DllCall("GetDC", "uint", hGui, "uint")</code> <code style="color:Green">;Ermittle den Devicekontext (Gerätekontext)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">if (!hDC)</code> <code style="color:Green">;Gab es Probleme?</code></span> <code style="color:Blue">if (!hDC)</code> <code style="color:Green">;Gab es Probleme?</code></span> <br> <code style="color:Blue">{</code> <br> <code style="color:Blue">&nbsp;&nbsp;</code> <code style="color:Green">;Wenn ja, lasse es den Benutzer wissen.</code> <br> <code style="color:Blue">MsgBox, Fehler beim erstellen des Devicekontextes!</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">ExitApp</code> <code style="color:Green">;Beende das Programm</code></span> <code style="color:Blue">ExitApp</code> <code style="color:Green">;Beende das Programm</code></span> <br> <code style="color:Blue">}</code> <br> <code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">PFD_Flags := PFD_DRAW_TO_WINDOW | PFD_SUPPORT_OPENGL | PFD_DOUBLEBUFFER</code> <code style="color:Green">;Flags</code></span> <code style="color:Blue">PFD_Flags := PFD_DRAW_TO_WINDOW | PFD_SUPPORT_OPENGL | PFD_DOUBLEBUFFER</code> <code style="color:Green">;Flags</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">PFD_Type := PFD_TYPE_RGBA</code> <code style="color:Green">;Pixel Type</code></span> <code style="color:Blue">PFD_Type := PFD_TYPE_RGBA</code> <code style="color:Green">;Pixel Type</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">PFD_Bits := 24</code> <code style="color:Green">;Anzahl der Farbbits (24 bit = 16.777.216 Farben)</code></span> <code style="color:Blue">PFD_Bits := 24</code> <code style="color:Green">;Anzahl der Farbbits (24 bit = 16.777.216 Farben)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">PFD_Depth := 16</code> <code style="color:Green">;Bits für den Tiefenbuffer (16 bit = 65.536 Einheiten)</code></span> <code style="color:Blue">PFD_Depth := 16</code> <code style="color:Green">;Bits für den Tiefenbuffer (16 bit = 65.536 Einheiten)</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">VarSetCapacity(pfd, 40, 0)</code> <code style="color:Green">;PIXELFORMATDESCRIPTOR-Struktur</code></span> <code style="color:Blue">VarSetCapacity(pfd, 40, 0)</code> <code style="color:Green">;PIXELFORMATDESCRIPTOR-Struktur</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(40, pfd, 0, "ushort")</code> <code style="color:Green">;Größe der Struktur (muss 40 sein)</code></span> <code style="color:Blue">NumPut(40, pfd, 0, "ushort")</code> <code style="color:Green">;Größe der Struktur (muss 40 sein)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1, pfd, 2, "ushort")</code> <code style="color:Green">;Version der Struktur (muss 1 sein)</code></span> <code style="color:Blue">NumPut(1, pfd, 2, "ushort")</code> <code style="color:Green">;Version der Struktur (muss 1 sein)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(PFD_Flags, pfd, 4, "uint")</code> <code style="color:Green">;Flags</code></span> <code style="color:Blue">NumPut(PFD_Flags, pfd, 4, "uint")</code> <code style="color:Green">;Flags</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(PFD_Type, pfd, 8, "uchar")</code> <code style="color:Green">;Pixel Type</code></span> <code style="color:Blue">NumPut(PFD_Type, pfd, 8, "uchar")</code> <code style="color:Green">;Pixel Type</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(PFD_Bits, pfd, 9, "uchar")</code> <code style="color:Green">;Anzahl der Farbbits</code></span> <code style="color:Blue">NumPut(PFD_Bits, pfd, 9, "uchar")</code> <code style="color:Green">;Anzahl der Farbbits</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(PFD_Depth, pfd, 23, "uchar")</code> <code style="color:Green">;Bits für den Tiefenbuffer</code></span> <code style="color:Blue">NumPut(PFD_Depth, pfd, 23, "uchar")</code> <code style="color:Green">;Bits für den Tiefenbuffer</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">if (!SetPixelFormat(hDC, ChoosePixelFormat(hDC, &amp;pfd), &amp;pfd))</code> <code style="color:Green">;Wähle und benutze das Pixelformat</code></span> <code style="color:Blue">if (!SetPixelFormat(hDC, ChoosePixelFormat(hDC, &amp;pfd), &amp;pfd))</code> <code style="color:Green">;Wähle und benutze das Pixelformat</code></span> <br> <code style="color:Blue">{</code> <br> <code style="color:Blue">&nbsp;&nbsp;</code> <code style="color:Green">;Wenn das Pixelformat nicht benutzt werden kann, geht eine Message an den Benutzer.</code> <br> <code style="color:Blue">MsgBox, Das gewählte Pixelformat konnte nicht gesetzt werden!`nDas Programm wird beendet!</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">ExitApp</code> <code style="color:Green">;Beende das Programm</code></span> <code style="color:Blue">ExitApp</code> <code style="color:Green">;Beende das Programm</code></span> <br> <code style="color:Blue">}</code> <br> <code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">hRC := wglCreateContext(hDC)</code> <code style="color:Green">;Erstelle einen Renderkontext</code></span> <code style="color:Blue">hRC := wglCreateContext(hDC)</code> <code style="color:Green">;Erstelle einen Renderkontext</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">if (hRC=0)</code> <code style="color:Green">;Konnte der Renderkontext erstellt werden?</code></span> <code style="color:Blue">if (hRC=0)</code> <code style="color:Green">;Konnte der Renderkontext erstellt werden?</code></span> <br> <code style="color:Blue">{</code> <br> <code style="color:Blue">&nbsp;&nbsp;</code> <code style="color:Green">;Wenn nicht, bekommt auch der Benutzer die Information.</code> <br> <code style="color:Blue">MsgBox, Fehler beim Erstellen des Renderkontextes!`nDas Programm wird beendet!</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">ExitApp</code> <code style="color:Green">;Beende das Programm</code></span> <code style="color:Blue">ExitApp</code> <code style="color:Green">;Beende das Programm</code></span> <br> <code style="color:Blue">}</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">wglMakeCurrent(hDC, hRC)</code> <code style="color:Green">;Nutze den Renderkontext für den Devicekontext</code></span> <code style="color:Blue">wglMakeCurrent(hDC, hRC)</code> <code style="color:Green">;Nutze den Renderkontext für den Devicekontext</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">Gosub, InitOpenGL</code> <code style="color:Green">;Springe zur Initialsierung von OpenGL</code></span> <code style="color:Blue">Gosub, InitOpenGL</code> <code style="color:Green">;Springe zur Initialsierung von OpenGL</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">Gui, show, w640 h480, Tutorial 05</code> <code style="color:Green">;Zeige unser Gui</code></span> <code style="color:Blue">Gui, show, w640 h480, Tutorial 05</code> <code style="color:Green">;Zeige unser Gui</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">SetTimer, UpdateScene, 50</code> <code style="color:Green">;Setze den Timer für das Label UpdateScene auf 50 ms. (entspricht ~16 FPS)</code></span> <code style="color:Blue">SetTimer, UpdateScene, 50</code> <code style="color:Green">;Setze den Timer für das Label UpdateScene auf 50 ms. (entspricht ~16 FPS)</code></span> <code style="color:Green">;Setze den Timer für das Label UpdateScene auf 50 ms. (entspricht ~16 FPS)</code> <br> <code style="color:Blue">return</code> <br> <code style="color:Blue"></code><br><code style="color:Blue"></code><br><code style="color:Blue"></code><br> <code style="color:Blue">InitOpenGL:</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glClearColor(0, 0, 0, 0)</code> <code style="color:Green">;Setze die Farbe, die beim Löschen des Buffers verwendet wird.</code></span> <code style="color:Blue">glClearColor(0, 0, 0, 0)</code> <code style="color:Green">;Setze die Farbe, die beim Löschen des Buffers verwendet wird.</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glShadeModel(GL_SMOOTH)</code> <code style="color:Green">;Erlaube Smooth shading</code></span> <code style="color:Blue">glShadeModel(GL_SMOOTH)</code> <code style="color:Green">;Erlaube Smooth shading</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">FontList := glGenLists(256)</code> <code style="color:Green">;Erstelle Displaylist für 256 Buchstaben</code></span> <code style="color:Blue">FontList := glGenLists(256)</code> <code style="color:Green">;Erstelle Displaylist für 256 Buchstaben</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">hFont := DllCall("CreateFont", "int", -16</code> <code style="color:Green">;Schriftgröße (0 = Standardgröße, &lt;0 = Suche nächst beste Schriftgröße)</code></span> <code style="color:Blue">hFont := DllCall("CreateFont", "int", -16</code> <code style="color:Green">;Schriftgröße (0 = Standardgröße, &lt;0 = Suche nächst beste Schriftgröße)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "int", 0</code> <code style="color:Green">;Breite der Zeichen (0 = Verwende Standard)</code></span> <code style="color:Blue">, "int", 0</code> <code style="color:Green">;Breite der Zeichen (0 = Verwende Standard)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "int", 0</code> <code style="color:Green">;Vorschubswinkel (0 = Standard)</code></span> <code style="color:Blue">, "int", 0</code> <code style="color:Green">;Vorschubswinkel (0 = Standard)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "int", 0</code> <code style="color:Green">;Orientationswinkel (0 = Standard)</code></span> <code style="color:Blue">, "int", 0</code> <code style="color:Green">;Orientationswinkel (0 = Standard)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "int", 800</code> <code style="color:Green">;Fett (100-1000, 0=Standard, 400=Normal, 800=Fett)</code></span> <code style="color:Blue">, "int", 800</code> <code style="color:Green">;Fett (100-1000, 0=Standard, 400=Normal, 800=Fett)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Kursiv (1=Ja, 0=Nein)</code></span> <code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Kursiv (1=Ja, 0=Nein)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Unterstrichen (1=Ja, 0=Nein)</code></span> <code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Unterstrichen (1=Ja, 0=Nein)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Durchgestrichen (1=Ja, 0=Nein)</code></span> <code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Durchgestrichen (1=Ja, 0=Nein)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Zeichensatz (0=ANSI-Zeichensatz)</code></span> <code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Zeichensatz (0=ANSI-Zeichensatz)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 4</code> <code style="color:Green">;Ausgabe-Präzision (4=Verwende TrueType wenn möglich)</code></span> <code style="color:Blue">, "uint", 4</code> <code style="color:Green">;Ausgabe-Präzision (4=Verwende TrueType wenn möglich)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Beschneidungs-Präzision (0=Standard)</code></span> <code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Beschneidungs-Präzision (0=Standard)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 4</code> <code style="color:Green">;Qualität (4=Antialiaste Qualität)</code></span> <code style="color:Blue">, "uint", 4</code> <code style="color:Green">;Qualität (4=Antialiaste Qualität)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Schrift-Type (0=Standard)</code></span> <code style="color:Blue">, "uint", 0</code> <code style="color:Green">;Schrift-Type (0=Standard)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">, "str", "Comic Sans MS")</code> <code style="color:Green">;Schriftart (Arial, Verdana, Lucida Console, ...)</code></span> <code style="color:Blue">, "str", "Comic Sans MS")</code> <code style="color:Green">;Schriftart (Arial, Verdana, Lucida Console, ...)</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">DllCall("SelectObject", uint, hDC, uint, hFont)</code> <code style="color:Green">;Die Schriftart für den Device-Context wählen</code></span> <code style="color:Blue">DllCall("SelectObject", uint, hDC, uint, hFont)</code> <code style="color:Green">;Die Schriftart für den Device-Context wählen</code></span> <br><code style="color:Blue"></code><br> <code style="color:Blue">VarSetCapacity(gmf, 256*24, 0)</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">wglUseFontOutlines(hDC, 0, 256, FontList, 0, 0.1, WGL_FONT_POLYGONS, &amp;gmf)</code> <code style="color:Green">;Erstelle die Zeichen 0-255 (ANSI) für OpenGL</code></span> <code style="color:Blue">wglUseFontOutlines(hDC, 0, 256, FontList, 0, 0.1, WGL_FONT_POLYGONS, &amp;gmf)</code> <code style="color:Green">;Erstelle die Zeichen 0-255 (ANSI) für OpenGL</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">DllCall("SelectObject", "uint", hDC, "uint", hOldFont)</code> <code style="color:Green">;Wähle alte Schriftart</code></span> <code style="color:Blue">DllCall("SelectObject", "uint", hDC, "uint", hOldFont)</code> <code style="color:Green">;Wähle alte Schriftart</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">DllCall("DeleteObject", "uint", hFont)</code> <code style="color:Green">;Lösche neue Schriftart</code></span> <code style="color:Blue">DllCall("DeleteObject", "uint", hFont)</code> <code style="color:Green">;Lösche neue Schriftart</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glEnable(GL_DEPTH_TEST)</code> <code style="color:Green">;Tiefentest einschalten</code></span> <code style="color:Blue">glEnable(GL_DEPTH_TEST)</code> <code style="color:Green">;Tiefentest einschalten</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glDepthFunc(GL_LEQUAL)</code> <code style="color:Green">;Tiefenfunktion wählen</code></span> <code style="color:Blue">glDepthFunc(GL_LEQUAL)</code> <code style="color:Green">;Tiefenfunktion wählen</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST)</code> <code style="color:Green">;Korrektion für die Tiefe</code></span> <code style="color:Blue">glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST)</code> <code style="color:Green">;Korrektion für die Tiefe</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">VarSetCapacity(light, 16, 0)</code> <code style="color:Green">;Speicher für die Lichteinstellungen</code></span> <code style="color:Blue">VarSetCapacity(light, 16, 0)</code> <code style="color:Green">;Speicher für die Lichteinstellungen</code></span> <br><code style="color:Blue"></code><br><code style="color:Blue"></code> <code style="color:Green">;Ambiente Lichtwerte</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(0.5, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <code style="color:Blue">NumPut(0.5, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(0.5, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <code style="color:Blue">NumPut(0.5, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(0.5, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <code style="color:Blue">NumPut(0.5, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <br> <code style="color:Blue">glLightfv(GL_LIGHT1, GL_AMBIENT, &amp;light)</code> <br> <code style="color:Blue"></code><br><code style="color:Blue"></code> <code style="color:Green">;Diffuse Lichtwerte</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <code style="color:Blue">NumPut(1.0, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <code style="color:Blue">NumPut(1.0, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <code style="color:Blue">NumPut(1.0, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <br> <code style="color:Blue">glLightfv(GL_LIGHT1, GL_DIFFUSE, &amp;light)</code> <br> <code style="color:Blue"></code><br><code style="color:Blue"></code> <code style="color:Green">;Speculare Lichtwerte</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <code style="color:Blue">NumPut(1.0, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <code style="color:Blue">NumPut(1.0, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <code style="color:Blue">NumPut(1.0, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <br> <code style="color:Blue">glLightfv(GL_LIGHT1, GL_SPECULAR, &amp;light)</code> <br> <code style="color:Blue"></code><br><code style="color:Blue"></code> <code style="color:Green">;Lichtposition</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(0.0, light, 0, "float")</code> <code style="color:Green">;X-Position</code></span> <code style="color:Blue">NumPut(0.0, light, 0, "float")</code> <code style="color:Green">;X-Position</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(0.0, light, 4, "float")</code> <code style="color:Green">;Y-Position</code></span> <code style="color:Blue">NumPut(0.0, light, 4, "float")</code> <code style="color:Green">;Y-Position</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(0.0, light, 8, "float")</code> <code style="color:Green">;Z-Position</code></span> <code style="color:Blue">NumPut(0.0, light, 8, "float")</code> <code style="color:Green">;Z-Position</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Position/Richtung</code></span> <code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Position/Richtung</code></span> <br> <code style="color:Blue">glLightfv(GL_LIGHT1, GL_POSITION, &amp;light)</code> <br> <code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glEnable(GL_LIGHT1)</code> <code style="color:Green">;Licht 1 einschalten</code></span> <code style="color:Blue">glEnable(GL_LIGHT1)</code> <code style="color:Green">;Licht 1 einschalten</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glEnable(GL_LIGHTING)</code> <code style="color:Green">;Beleuchtung aktivieren</code></span> <code style="color:Blue">glEnable(GL_LIGHTING)</code> <code style="color:Green">;Beleuchtung aktivieren</code></span> <br> <code style="color:Blue">return</code> <br> <code style="color:Blue"></code><br><code style="color:Blue"></code><br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">UpdateScene:</code> <code style="color:Green">;Unsere Zeichenroutine</code></span> <code style="color:Blue">UpdateScene:</code> <code style="color:Green">;Unsere Zeichenroutine</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)</code> <code style="color:Green">;Lösche den Farb- und Tiefenbuffer</code></span> <code style="color:Blue">glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)</code> <code style="color:Green">;Lösche den Farb- und Tiefenbuffer</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glLoadIdentity()</code> <code style="color:Green">;Stelle die Matrix wieder auf 0</code></span> <code style="color:Blue">glLoadIdentity()</code> <code style="color:Green">;Stelle die Matrix wieder auf 0</code></span> <br><code style="color:Blue"></code><br> <code style="color:Blue">Text := "3D Text und Licht"</code> <br> <code style="color:Blue"></code><br> <code style="color:Blue">R := (R="") ? 1 : (B&gt;=0.95 &amp;&amp; G&lt;=0.05 &amp;&amp; R&lt;0.95) ? R+0.1 : (B&lt;=0.05 &amp;&amp; G&gt;=0.95 &amp;&amp; R&gt;=0.05) ? R-0.1 : R</code> <br> <code style="color:Blue">G := (G="") ? 0 : (R&gt;=0.95 &amp;&amp; B&lt;=0.05 &amp;&amp; G&lt;0.95) ? G+0.1 : (R&lt;=0.05 &amp;&amp; B&gt;=0.95 &amp;&amp; G&gt;=0.05) ? G-0.1 : G</code> <br> <code style="color:Blue">B := (B="") ? 0 : (G&gt;=0.95 &amp;&amp; R&lt;=0.05 &amp;&amp; B&lt;0.95) ? B+0.1 : (G&lt;=0.05 &amp;&amp; R&gt;=0.95 &amp;&amp; B&gt;=0.05) ? B-0.1 : B</code> <br> <code style="color:Blue"></code><br><code style="color:Blue"></code> <code style="color:Green">;Ambiente Lichtwerte</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(R, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <code style="color:Blue">NumPut(R, light, 0, "float")</code> <code style="color:Green">;Rot</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(G, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <code style="color:Blue">NumPut(G, light, 4, "float")</code> <code style="color:Green">;Grün</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(B, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <code style="color:Blue">NumPut(B, light, 8, "float")</code> <code style="color:Green">;Blau</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <code style="color:Blue">NumPut(1.0, light, 12, "float")</code> <code style="color:Green">;Intensität (Alpha)</code></span> <br> <code style="color:Blue">glLightfv(GL_LIGHT1, GL_AMBIENT, &amp;light)</code> <br> <code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glTranslatef(0, 0, -10)</code> <code style="color:Green">;Gehe 10 Einheiten in den Bildschirm hinein</code></span> <code style="color:Blue">glTranslatef(0, 0, -10)</code> <code style="color:Green">;Gehe 10 Einheiten in den Bildschirm hinein</code></span> <br> <code style="color:Blue">glScalef(1.6, 1.6, 1.6)</code> <br> <code style="color:Blue"></code><br> <code style="color:Blue">X := (X="") ? 0 : (GetKeyState("Left")) ? X+4 : (GetKeyState("Right")) ? X-4 : X</code> <br> <code style="color:Blue">Y := (Y="") ? 0 : (GetKeyState("Up")) ? Y+4 : (GetKeyState("Down")) ? Y-4 : Y</code> <br> <code style="color:Blue">Z := (Z="") ? 0 : (GetKeyState("PgUp")) ? Z+4 : (GetKeyState("PgDn")) ? Z-4 : Z</code> <br> <code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glRotatef(X, 0, 1, 0)</code> <code style="color:Green">;Rotiere X auf der Y-Achse</code></span> <code style="color:Blue">glRotatef(X, 0, 1, 0)</code> <code style="color:Green">;Rotiere X auf der Y-Achse</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glRotatef(Y, 1, 0, 0)</code> <code style="color:Green">;Rotiere Y auf der X-Achse</code></span> <code style="color:Blue">glRotatef(Y, 1, 0, 0)</code> <code style="color:Green">;Rotiere Y auf der X-Achse</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glRotatef(Z, 0, 0, 1)</code> <code style="color:Green">;Rotiere Z auf der Z-Achse</code></span> <code style="color:Blue">glRotatef(Z, 0, 0, 1)</code> <code style="color:Green">;Rotiere Z auf der Z-Achse</code></span> <br><code style="color:Blue"></code><br> <code style="color:Blue">TextWidth := 0</code> <br> <code style="color:Blue">Loop, parse, Text</code> <br> <code style="color:Blue">TextWidth += NumGet(gmf, Asc(A_LoopField)*24+16, "float")</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glTranslatef(-TextWidth/2, 0, 0)</code> <code style="color:Green">;Zentriere Text</code></span> <code style="color:Blue">glTranslatef(-TextWidth/2, 0, 0)</code> <code style="color:Green">;Zentriere Text</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glListBase(FontList)</code> <code style="color:Green">;Wähle die OpenGL-Schriftart</code></span> <code style="color:Blue">glListBase(FontList)</code> <code style="color:Green">;Wähle die OpenGL-Schriftart</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glCallLists(StrLen(Text), (A_IsUnicode) ? GL_UNSIGNED_SHORT : GL_UNSIGNED_BYTE, &amp;Text)</code> <code style="color:Green">;Schreibe den Text in OpenGL</code></span> <code style="color:Blue">glCallLists(StrLen(Text), (A_IsUnicode) ? GL_UNSIGNED_SHORT : GL_UNSIGNED_BYTE, &amp;Text)</code> <code style="color:Green">;Schreibe den Text in OpenGL</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">SwapBuffers(hDC)</code> <code style="color:Green">;Bringe das Gezeichnete auf das Gui</code></span> <code style="color:Blue">SwapBuffers(hDC)</code> <code style="color:Green">;Bringe das Gezeichnete auf das Gui</code></span> <br> <code style="color:Blue">return</code> <br> <code style="color:Blue"></code><br><code style="color:Blue"></code><br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">GuiSize:</code> <code style="color:Green">;Wenn sich die Größe des Gui verändert...</code></span> <code style="color:Blue">GuiSize:</code> <code style="color:Green">;Wenn sich die Größe des Gui verändert...</code></span> <br> <code style="color:Blue">ScreenW := (A_GuiWidth=0) ? 1 : A_GuiWidth</code> <br> <code style="color:Blue">ScreenH := (A_GuiHeight=0) ? 1 : A_GuiHeight</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glViewport(0, 0, ScreenW, ScreenH)</code> <code style="color:Green">;Setze den Viewport (der Bereich in dem Gezeichnet wird) auf die Größe des Guis</code></span> <code style="color:Blue">glViewport(0, 0, ScreenW, ScreenH)</code> <code style="color:Green">;Setze den Viewport (der Bereich in dem Gezeichnet wird) auf die Größe des Guis</code></span> <br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glMatrixMode(GL_PROJECTION)</code> <code style="color:Green">;Wechsle zur Projektionsmatrix</code></span> <code style="color:Blue">glMatrixMode(GL_PROJECTION)</code> <code style="color:Green">;Wechsle zur Projektionsmatrix</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glLoadIdentity()</code> <code style="color:Green">;Stelle die Matrix wieder auf 0</code></span> <code style="color:Blue">glLoadIdentity()</code> <code style="color:Green">;Stelle die Matrix wieder auf 0</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">gluPerspective(45, ScreenW/ScreenH, 1, 100)</code> <code style="color:Green">;Perspektive wählen</code></span> <code style="color:Blue">gluPerspective(45, ScreenW/ScreenH, 1, 100)</code> <code style="color:Green">;Perspektive wählen</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glMatrixMode(GL_MODELVIEW)</code> <code style="color:Green">;Wechsle zur Modelansichtmatrix</code></span> <code style="color:Blue">glMatrixMode(GL_MODELVIEW)</code> <code style="color:Green">;Wechsle zur Modelansichtmatrix</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glLoadIdentity()</code> <code style="color:Green">;Stelle die Matrix wieder auf 0</code></span> <code style="color:Blue">glLoadIdentity()</code> <code style="color:Green">;Stelle die Matrix wieder auf 0</code></span> <br> <code style="color:Blue">return</code> <br> <code style="color:Blue"></code><br><code style="color:Blue"></code><br><code style="color:Blue"></code><br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">ExitSub:</code> <code style="color:Green">;Bevor das Programm beendet wird...</code></span> <code style="color:Blue">ExitSub:</code> <code style="color:Green">;Bevor das Programm beendet wird...</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">glDeleteLists(FontList, 256)</code> <code style="color:Green">;Lösche die Schriftart</code></span> <code style="color:Blue">glDeleteLists(FontList, 256)</code> <code style="color:Green">;Lösche die Schriftart</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">if (hRC)</code> <code style="color:Green">;Haben wir einen gültigen Renderkontext?</code></span> <code style="color:Blue">if (hRC)</code> <code style="color:Green">;Haben wir einen gültigen Renderkontext?</code></span> <br> <code style="color:Blue">{</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">wglMakeCurrent(0, 0)</code> <code style="color:Green">;Verwende keinen Renderkontext</code></span> <code style="color:Blue">wglMakeCurrent(0, 0)</code> <code style="color:Green">;Verwende keinen Renderkontext</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">wglDeleteContext(hRC)</code> <code style="color:Green">;Lösche den Renderkontext</code></span> <code style="color:Blue">wglDeleteContext(hRC)</code> <code style="color:Green">;Lösche den Renderkontext</code></span> <br> <code style="color:Blue">}</code> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">FreeOpenGlLib()</code> <code style="color:Green">;Gebe den speicher der OpenGL-Bibliothek frei.</code></span> <code style="color:Blue">FreeOpenGlLib()</code> <code style="color:Green">;Gebe den speicher der OpenGL-Bibliothek frei.</code></span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><code style="color:Blue">ExitApp</code> <code style="color:Green">;Beende das Programm entgültig.</code></span> <code style="color:Blue">ExitApp</code> <code style="color:Green">;Beende das Programm entgültig.</code></span> <br><code style="color:Blue"></code></td></tr></tbody></table></p><p> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left">Fragen, Wünsche oder Anregungen?</span> Questions, requests or suggestions?</span> <br> <span onmouseover="_tipon(this)" onmouseout="_tipoff()"><span class="google-src-text" style="direction: ltr; text-align: left"><a href="http://translate.googleusercontent.com/translate_c?hl=en&ie=UTF-8&sl=auto&tl=en&u=http://de.autohotkey.com/forum/privmsg.php%3Fmode%3Dpost%26u%3D680&prev=_t&rurl=translate.google.com&twu=1&usg=ALkJrhh4jfFTgqVFVd-XOku7L3Oi7QZ6yA">Nachricht an Bentschi schicken...</a></span> <a href="http://translate.googleusercontent.com/translate_c?hl=en&ie=UTF-8&sl=auto&tl=en&u=http://de.autohotkey.com/forum/privmsg.php%3Fmode%3Dpost%26u%3D680&prev=_t&rurl=translate.google.com&twu=1&usg=ALkJrhh4jfFTgqVFVd-XOku7L3Oi7QZ6yA">Send a message to Bentschi ...</a></span> </p><script>_addload(function(){_setupIW();_csi('de','en','http://www.autohotkey.net/~Bentschi/opengl_tutorials/tut05.htm');});</script></body></html>