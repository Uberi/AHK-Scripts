# Global TillaGoto settings
#
# Do NOT edit this file!
# If there is someting here you want to change, go to Options > Open User properties,
# copy the setting there and change it. If you instead want to delete a setting, just
# write an analogous line in the User properties that sets it to blank.
#

# TillaGoto settings do not take effect automatically; you need to restart TillaGoto.

# Set to 1 to enable TillaGoto.
tillagoto.enable=1

#------------------------------------------------------------------------------
# Appearance
#------------------------------------------------------------------------------

# Set to 1 to show the tray icon, 0 to keep it hidden.
tillagoto.show.tray.icon=1

# Specify the width of the GUI. If tillagoto.gui.wide.view is 1, tillagoto.gui.width
# represents the minimum width of the GUI, no matter how short the items are.
tillagoto.gui.width=230

# Specify, in number of rows, the height of the listbox.
tillagoto.gui.height=12

# Specify the width of the GUI's margins.
tillagoto.gui.margin=2

# Specify the transparency of the GUI. Preferably divisible by 15. Set it to 255 for
# no transparency at all (consumes less resources). Put 0 to disable fade-in effect.
tillagoto.gui.transparency=255

# Set to 1 to position the GUI on the left side instead of the right side.
tillagoto.gui.posleft=0

# Set to 1 to auto-resize the width of the GUI so that all the items are visible
# without the horizontal scrollbar.
tillagoto.gui.wide.view=1

# This setting is used only if tillagoto.include.mode has the option 0x10000000. It
# determines how the filenames are appended to functions/labels/hotkeys:
# - Set to 0 to append the filenames without any alignment (minimal GUI width)
# - Set to 1 to right-align the filenames (also minimal GUI width)
# - Set to 2 to left-align the filenames (GUI width might be larger)
tillagoto.gui.align.filenames=1

# Specify the GUI's background colour. Leave blank for default.
#tillagoto.gui.bgcolor=

# Specify the controls' background colour. Leave blank for default.
#tillagoto.gui.controlbgcolor=

# Specify the controls' foreground (text) colour. Leave blank for default.
#tillagoto.gui.controlfgcolor=

# Specify the size of the font for the textbox and listbox.
tillagoto.gui.font.size=8

# Name of the font for the textbox and listbox. Must be monospace for proper
# alignment. A better font than Courier New would be Consolas.
tillagoto.gui.font=$(default.text.font)

# Set to 1 to sort the entries in the GUI
tillagoto.gui.sort.entries=1

#------------------------------------------------------------------------------
# Hotkeys
#------------------------------------------------------------------------------

# Specify the hotkey you want to use to call up the GUI
tillagoto.hk.summon.gui=F12

# Specify the keyboard hotkey for going to the previous view
tillagoto.hk.go.back=!Left

# Specify the keyboard hotkey for going to the next view
tillagoto.hk.go.forward=!Right

# Specify the hotkey you want to use to go to a function/label on whose name the
# caret is located. Similar to the middleclicking feature.
tillagoto.hk.goto.def=+Enter

#------------------------------------------------------------------------------
# Behaviour
#------------------------------------------------------------------------------

# Set to 1 to filter out the functions/labels/hotkeys found in comment blocks.
# Note: this feature slightly affects performance if many comment blocks are
# present. Therefore, if you start experiencing lag, you might want to turn it off
# (at the expense of not filtering out functions/labels/hotkeys found in comments).
# To exclude a comment block from filtering, start it with "/*!". This is an easy
# way to speed up processing (but any functions/labels/hotkeys will be picked up).
tillagoto.filter.comments=1

# Set to 1 to make TillaGoto go straight to showing the GUI and exit on close.
# In this mode, TillaGoto cannot keep track of line history or use hotkeys.
tillagoto.quick.mode=0

# Set to 1 to make TillaGoto terminate when the editor is also terminated.
tillagoto.quit.with.editor=1

# Set to 0 for matching to occur only at the beginning of the label/function
# name. Set to 1 for matching to occur anywhere in the label/function name. As
# well, multiple words can be specified. For example, typing "Dog Cat" will match
# any label/function containing those words anywhere in their name. This is useful
# to search for functions (or labels) only by typing "() FunctionName".
tillagoto.match.everywhere=1

#------------------------------------------------------------------------------
# Mouse configuration
#------------------------------------------------------------------------------

# Set to 1 to enable the middle mouse button as a hotkey to call up the GUI.
# More importantly, this also allows you to go to a function/label simply by
# pressing the middle mouse button on the function/label name.
tillagoto.use.mbutton=1

# Specify in milliseconds the amount of time the middle mouse button should be
# depressed while the GUI is showing for the GUI to close without selection.
# If the middle mouse button is pressed for any amount shorter than that, the
# selection is validated.
tillagoto.cancel.timeout=300

#------------------------------------------------------------------------------
# Include files scanning feature
#------------------------------------------------------------------------------

# This setting affects the behaviour of TillaGoto when scanning for script
# labels, functions and hotkeys in #Include files and library files. To turn
# off the feature completely, specify 0. Otherwise, iIncludeMode can be any
# combination of the following values:
# 0x00000001 - Scan #Include files (working directory assumed as A_ScriptDir)
# 0x00000010 - Scan library directories files
# 0x00000100 - Retrieve functions upon scanning
# 0x00001000 - Retrieve labels upon scanning
# 0x00010000 - Retrieve hotkeys upon scanning
# 0x00100000 - Filter comment blocks before scanning (like bFilterComments)
# 0x01000000 - Recurse (ie. include #Include files of #Include files and so on)
# 0x10000000 - Append the name of the file to the functions/labels/hotkeys name
tillagoto.include.mode=0x10111101

# Set to 1 to enable file caching so that scanning is only done once on
# files that have already been scanned in the past. This does not affect the
# current script (which is always re-scanned). Caching is highly recommended as
# it greatly enhances performance of the include files scanning feature.
tillagoto.cache.files=1

#------------------------------------------------------------------------------
# TillaGoto directives
#------------------------------------------------------------------------------

# Set to 1 to scan the script for TillaGoto directives. Directives allow you to change TillaGoto's behaviour
# for the script you are working on. You put them in your script (anywhere) as a line comment. The syntax is
# (without the quotes): ";TillaGoto.<setting> = <value>". These settings override the default settings you put here.
tillagoto.directives=1

# The supported settings are the following:
# - bFilterComments: allows you to change tillagoto.filter.comments just for this file.
# - iIncludeMode: allows you to change tillagoto.include.mode just for this file. For example,
#   to force TillaGoto to only scan for functions in #Include files (with no other options), use:
#   ";TillaGoto.iIncludeMode = 0x00000100". Or to simply turn it off, use: ";TillaGoto.iIncludeMode = 0"
# - ScanFile: it allows you to force TillaGoto to always scan a file, as if it was an Include file, even though it isn't
#   used with the #Include directive. The directive is processed in exactly the same way as an #Include file would be.
#   For example, the directive ";TillaGoto.ScanFile = %A_ScriptDir%\script.ahk" will have the same effect as if
#   TillaGoto saw the directive "#Include %A_ScriptDir%\script.ahk". Directories to change the working directory
#   are also supported. The variable iIncludeMode must contain the 0x00000001 option in order to work.
#   If the file is in one of the library directories, simply put its name in brackets: ;TillaGoto.ScanFile=<lib>
#   This is useful when your script uses library functions, but you still want TillaGoto to be aware of them.
#
#   Note that the ScanFile directives are queued up and processed right after the script's actual #Include files are
# scanned. Therefore, it doesn't matter where they are placed relative to the actual #Include directives, but the
# order in which they are written does (in order to be able to change the working directory of subsequent ones).
# The working directory is set back to %A_ScriptDir% before processing them.
#   The ScanFile feature is useful when working inside a project with many satellite files. A simple ScanFile
# directive to the main script in each satellite file will allow access to all the functions no matter on which
# file you're working on.
